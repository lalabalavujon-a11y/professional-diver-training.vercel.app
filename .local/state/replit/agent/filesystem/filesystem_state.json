{"file_contents":{"drizzle.config.ts":{"content":"import { defineConfig } from \"drizzle-kit\";\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\"DATABASE_URL, ensure the database is provisioned\");\n}\n\nexport default defineConfig({\n  out: \"./migrations\",\n  schema: \"./shared/schema.ts\",\n  dialect: \"postgresql\",\n  dbCredentials: {\n    url: process.env.DATABASE_URL,\n  },\n});\n","size_bytes":325},"postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"replit.md":{"content":"# Overview\n\nThis is a professional diving exam preparation platform built with React, Express, and Drizzle ORM. The application provides comprehensive practice tests and study materials to help divers prepare for certification exams at certified diving schools. The platform features professional-grade mock exams, AI-powered explanations, voice dictation technology, and performance analytics to help users ace their commercial diving certification exams.\n\n# User Preferences\n\nPreferred communication style: Simple, everyday language.\n\n# System Architecture\n\n## Frontend Architecture\n- **React with TypeScript**: Modern React application using functional components and hooks\n- **Wouter**: Lightweight client-side routing library for navigation\n- **TanStack Query**: Data fetching and caching with optimistic updates\n- **Shadcn/ui Components**: Comprehensive UI component library built on Radix UI primitives\n- **Tailwind CSS**: Utility-first CSS framework with custom design tokens and CSS variables\n- **Vite**: Fast build tool and development server with HMR support\n\n## Backend Architecture\n- **Express.js**: RESTful API server with middleware for request logging and error handling\n- **TypeScript**: Full type safety across the entire stack\n- **Drizzle ORM**: Type-safe SQL query builder and schema management\n- **PostgreSQL**: Primary database for persistent data storage\n\n## Database Design\nThe database schema supports a comprehensive learning management system:\n- **Users**: Authentication and role-based access (USER/ADMIN)\n- **Tracks**: Learning courses with lessons in sequential order\n- **Lessons**: Individual learning units with rich content\n- **Quizzes**: Assessments with multiple-choice questions\n- **Progress Tracking**: User completion status and quiz attempts\n- **Invites**: Token-based user invitation system\n- **AI Tutors**: Specialized AI tutors for each diving track (DMT, ALST, LST, NDT, Commercial Dive Supervisor, SSED, SAT)\n- **Learning Paths**: AI-powered personalized learning recommendations based on user profiles and goals\n\n## Authentication Strategy\n- **NextAuth.js Ready**: Infrastructure prepared for session-based authentication\n- **Magic Link Support**: Email-based passwordless authentication\n- **Role-Based Access**: Admin and user roles with appropriate permissions\n- **Session Management**: Secure session handling with database storage\n\n## Development Environment\n- **Replit Optimized**: Configured for seamless deployment on Replit platform\n- **Environment Variables**: Secure configuration management through Replit Secrets\n- **Hot Reload**: Fast development cycle with Vite's HMR\n- **TypeScript Configuration**: Shared types between client and server\n\n## API Design\nRESTful endpoints following conventional patterns:\n- `/api/auth/*` - Authentication and session management\n- `/api/tracks/*` - Learning track operations\n- `/api/lessons/*` - Lesson content and management\n- `/api/quizzes/*` - Quiz functionality and submissions\n- `/api/admin/*` - Administrative operations\n\n## Content Management\n- **Rich Text Content**: Markdown-supported lesson content\n- **Sequential Learning**: Ordered lessons within tracks\n- **Progress Tracking**: Automatic completion status updates\n- **Quiz Integration**: Embedded assessments with instant feedback\n\n# External Dependencies\n\n## Database Services\n- **Neon Database**: Serverless PostgreSQL hosting with connection pooling\n- **Alternative**: Supabase PostgreSQL as backup database option\n\n## UI Libraries\n- **Radix UI**: Accessible component primitives for complex UI patterns\n- **Lucide React**: Comprehensive icon library for consistent iconography\n- **Tailwind CSS**: Utility-first styling with custom color schemes\n\n## Development Tools\n- **Drizzle Kit**: Database migrations and schema management\n- **Vite Plugins**: Replit integration and runtime error handling\n- **TypeScript**: Static type checking across the entire codebase\n\n## Authentication (Planned)\n- **NextAuth.js**: Complete authentication solution with multiple providers\n- **Email Services**: Magic link delivery for passwordless authentication\n\n## Styling System\n- **Google Fonts**: Inter, DM Sans, and other professional typefaces\n- **CSS Variables**: Dynamic theming support with consistent design tokens\n- **Responsive Design**: Mobile-first approach with breakpoint-based layouts","size_bytes":4336},"tailwind.config.ts":{"content":"import type { Config } from \"tailwindcss\";\n\nexport default {\n  darkMode: [\"class\"],\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      colors: {\n        background: \"var(--background)\",\n        foreground: \"var(--foreground)\",\n        card: {\n          DEFAULT: \"var(--card)\",\n          foreground: \"var(--card-foreground)\",\n        },\n        popover: {\n          DEFAULT: \"var(--popover)\",\n          foreground: \"var(--popover-foreground)\",\n        },\n        primary: {\n          DEFAULT: \"var(--primary)\",\n          foreground: \"var(--primary-foreground)\",\n          50: \"var(--primary-50)\",\n          100: \"var(--primary-100)\",\n          500: \"var(--primary-500)\",\n          600: \"var(--primary-600)\",\n          700: \"var(--primary-700)\",\n        },\n        secondary: {\n          DEFAULT: \"var(--secondary)\",\n          foreground: \"var(--secondary-foreground)\",\n        },\n        muted: {\n          DEFAULT: \"var(--muted)\",\n          foreground: \"var(--muted-foreground)\",\n        },\n        accent: {\n          DEFAULT: \"var(--accent)\",\n          foreground: \"var(--accent-foreground)\",\n        },\n        destructive: {\n          DEFAULT: \"var(--destructive)\",\n          foreground: \"var(--destructive-foreground)\",\n        },\n        border: \"var(--border)\",\n        input: \"var(--input)\",\n        ring: \"var(--ring)\",\n        chart: {\n          \"1\": \"var(--chart-1)\",\n          \"2\": \"var(--chart-2)\",\n          \"3\": \"var(--chart-3)\",\n          \"4\": \"var(--chart-4)\",\n          \"5\": \"var(--chart-5)\",\n        },\n        sidebar: {\n          DEFAULT: \"var(--sidebar-background)\",\n          foreground: \"var(--sidebar-foreground)\",\n          primary: \"var(--sidebar-primary)\",\n          \"primary-foreground\": \"var(--sidebar-primary-foreground)\",\n          accent: \"var(--sidebar-accent)\",\n          \"accent-foreground\": \"var(--sidebar-accent-foreground)\",\n          border: \"var(--sidebar-border)\",\n          ring: \"var(--sidebar-ring)\",\n        },\n        ocean: {\n          50: \"var(--ocean-50)\",\n          100: \"var(--ocean-100)\",\n          500: \"var(--ocean-500)\",\n          600: \"var(--ocean-600)\",\n          700: \"var(--ocean-700)\",\n        },\n      },\n      fontFamily: {\n        sans: [\"var(--font-sans)\"],\n        serif: [\"var(--font-serif)\"],\n        mono: [\"var(--font-mono)\"],\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: {\n            height: \"0\",\n          },\n          to: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n        },\n        \"accordion-up\": {\n          from: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n          to: {\n            height: \"0\",\n          },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n} satisfies Config;\n","size_bytes":3150},"vite.config.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    runtimeErrorOverlay(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined\n      ? [\n          await import(\"@replit/vite-plugin-cartographer\").then((m) =>\n            m.cartographer(),\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(import.meta.dirname, \"client\", \"src\"),\n      \"@shared\": path.resolve(import.meta.dirname, \"shared\"),\n      \"@assets\": path.resolve(import.meta.dirname, \"attached_assets\"),\n    },\n  },\n  root: path.resolve(import.meta.dirname, \"client\"),\n  build: {\n    outDir: path.resolve(import.meta.dirname, \"dist/public\"),\n    emptyOutDir: true,\n  },\n  server: {\n    fs: {\n      strict: true,\n      deny: [\"**/.*\"],\n    },\n  },\n});\n","size_bytes":971},"server/db.ts":{"content":"import { Pool, neonConfig } from '@neondatabase/serverless';\nimport { drizzle } from 'drizzle-orm/neon-serverless';\nimport ws from \"ws\";\nimport * as schema from \"@shared/schema\";\n\nneonConfig.webSocketConstructor = ws;\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\n    \"DATABASE_URL must be set. Did you forget to provision a database?\",\n  );\n}\n\nexport const pool = new Pool({ connectionString: process.env.DATABASE_URL });\nexport const db = drizzle({ client: pool, schema });","size_bytes":482},"server/index.ts":{"content":"import express, { type Request, Response, NextFunction } from \"express\";\nimport { registerRoutes } from \"./routes\";\nimport { setupVite, serveStatic, log } from \"./vite\";\n\nconst app = express();\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\n\napp.use((req, res, next) => {\n  const start = Date.now();\n  const path = req.path;\n  let capturedJsonResponse: Record<string, any> | undefined = undefined;\n\n  const originalResJson = res.json;\n  res.json = function (bodyJson, ...args) {\n    capturedJsonResponse = bodyJson;\n    return originalResJson.apply(res, [bodyJson, ...args]);\n  };\n\n  res.on(\"finish\", () => {\n    const duration = Date.now() - start;\n    if (path.startsWith(\"/api\")) {\n      let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;\n      if (capturedJsonResponse) {\n        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;\n      }\n\n      if (logLine.length > 80) {\n        logLine = logLine.slice(0, 79) + \"…\";\n      }\n\n      log(logLine);\n    }\n  });\n\n  next();\n});\n\n(async () => {\n  const server = await registerRoutes(app);\n\n  app.use((err: any, _req: Request, res: Response, _next: NextFunction) => {\n    const status = err.status || err.statusCode || 500;\n    const message = err.message || \"Internal Server Error\";\n\n    res.status(status).json({ message });\n    throw err;\n  });\n\n  // importantly only setup vite in development and after\n  // setting up all the other routes so the catch-all route\n  // doesn't interfere with the other routes\n  if (app.get(\"env\") === \"development\") {\n    await setupVite(app, server);\n  } else {\n    serveStatic(app);\n  }\n\n  // ALWAYS serve the app on the port specified in the environment variable PORT\n  // Other ports are firewalled. Default to 5000 if not specified.\n  // this serves both the API and the client.\n  // It is the only port that is not firewalled.\n  const port = parseInt(process.env.PORT || '5000', 10);\n  server.listen({\n    port,\n    host: \"0.0.0.0\",\n    reusePort: true,\n  }, () => {\n    log(`serving on port ${port}`);\n  });\n})();\n","size_bytes":2066},"server/routes.ts":{"content":"import type { Express } from \"express\";\nimport { createServer, type Server } from \"http\";\nimport { storage } from \"./storage\";\nimport { tempStorage } from \"./temp-storage\";\nimport { emailMarketing } from \"./email-marketing\";\nimport { affiliateService } from \"./affiliate-service\";\nimport { registerImportRoutes } from \"./routes/import-content\";\nimport { ObjectStorageService, ObjectNotFoundError } from \"./objectStorage\";\nimport { AILearningPathService } from \"./ai-learning-path\";\nimport { z } from \"zod\";\nimport { insertLessonSchema, insertInviteSchema, insertAttemptSchema } from \"@shared/schema\";\n\nexport async function registerRoutes(app: Express): Promise<Server> {\n  // Object storage routes\n  app.post(\"/api/objects/upload\", async (req, res) => {\n    try {\n      const objectStorageService = new ObjectStorageService();\n      const uploadURL = await objectStorageService.getObjectEntityUploadURL();\n      res.json({ uploadURL });\n    } catch (error) {\n      console.error(\"Error generating upload URL:\", error);\n      res.status(500).json({ error: \"Failed to generate upload URL\" });\n    }\n  });\n\n  app.get(\"/objects/:objectPath(*)\", async (req, res) => {\n    try {\n      const objectStorageService = new ObjectStorageService();\n      const objectFile = await objectStorageService.getObjectEntityFile(req.path);\n      objectStorageService.downloadObject(objectFile, res);\n    } catch (error) {\n      console.error(\"Error serving object:\", error);\n      if (error instanceof ObjectNotFoundError) {\n        return res.sendStatus(404);\n      }\n      return res.sendStatus(500);\n    }\n  });\n\n  // User profile routes\n  app.put(\"/api/users/profile\", async (req, res) => {\n    try {\n      const { name, email, phone, bio, company, jobTitle, location, currentEmail } = req.body;\n      const userEmail = req.headers['x-user-email'] || currentEmail || email;\n      \n      // Update the current user's profile (for demo, we'll just return success)\n      res.json({\n        id: 'demo-user',\n        name: name || 'Demo User',\n        email: email || userEmail,\n        phone,\n        bio,\n        company,\n        jobTitle,\n        location,\n        updatedAt: new Date().toISOString()\n      });\n    } catch (error) {\n      console.error(\"Error updating user profile:\", error);\n      res.status(500).json({ error: \"Failed to update profile\" });\n    }\n  });\n\n  app.put(\"/api/users/profile-picture\", async (req, res) => {\n    try {\n      const { profilePictureURL } = req.body;\n      const userEmail = req.headers['x-user-email'] as string;\n      \n      if (!profilePictureURL) {\n        return res.status(400).json({ error: \"Profile picture URL is required\" });\n      }\n\n      // Normalize the object storage URL\n      const objectStorageService = new ObjectStorageService();\n      const normalizedPath = objectStorageService.normalizeObjectEntityPath(profilePictureURL);\n\n      res.json({\n        success: true,\n        profilePictureUrl: normalizedPath,\n        updatedAt: new Date().toISOString()\n      });\n    } catch (error) {\n      console.error(\"Error updating profile picture:\", error);\n      res.status(500).json({ error: \"Failed to update profile picture\" });\n    }\n  });\n\n  // Auth routes\n  app.get(\"/api/auth/session\", async (req, res) => {\n    try {\n      // This would be handled by Auth.js in a real implementation\n      // For now, return mock session or null\n      res.json({ user: null });\n    } catch (error) {\n      res.status(500).json({ error: \"Failed to get session\" });\n    }\n  });\n\n  // Enhanced authentication route for credentials\n  app.post(\"/api/auth/credentials\", async (req, res) => {\n    try {\n      const { email, password, rememberMe } = req.body;\n\n      // Demo authentication - check against known accounts\n      if (email === 'admin@diverwell.app' && password === 'admin123') {\n        res.json({ \n          success: true, \n          user: {\n            id: 'admin-1',\n            name: 'Admin User',\n            email: 'admin@diverwell.app',\n            role: 'ADMIN',\n            subscriptionType: 'LIFETIME'\n          },\n          rememberMe \n        });\n        return;\n      }\n\n      // Check for admin users with their specific passwords\n      const adminCredentials = {\n        'lalabalavu.jon@gmail.com': 'Tuikilakila2014',\n        'sephdee@hotmail.com': 'Password123'\n      };\n\n      if (adminCredentials[email] && password === adminCredentials[email]) {\n        res.json({ \n          success: true, \n          user: {\n            id: email === 'sephdee@hotmail.com' ? 'super-admin-2' : 'super-admin-1',\n            name: 'Admin User',\n            email: email,\n            role: 'SUPER_ADMIN',\n            subscriptionType: 'LIFETIME'\n          },\n          rememberMe \n        });\n        return;\n      }\n\n      // Check for lifetime users with their specific passwords\n      const lifetimeUserCredentials = {\n        'eroni2519@gmail.com': 'password123',\n        'jone.cirikidaveta@gmail.com': 'password123', \n        'jone7898@gmail.com': 'password123',\n        'samueltabuya35@gmail.com': 'password123',\n        'jone.viti@gmail.com': 'password123'\n      };\n      \n      if (lifetimeUserCredentials[email] && password === lifetimeUserCredentials[email]) {\n        res.json({ \n          success: true, \n          user: {\n            id: 'lifetime-user',\n            name: 'Lifetime Member',\n            email: email,\n            role: 'USER',\n            subscriptionType: 'LIFETIME'\n          },\n          rememberMe \n        });\n        return;\n      }\n\n      // Demo trial user\n      if (password === 'trial123') {\n        res.json({ \n          success: true, \n          user: {\n            id: 'trial-user',\n            name: 'Trial User',\n            email: email,\n            role: 'USER',\n            subscriptionType: 'TRIAL',\n            trialExpiresAt: new Date(Date.now() + 24 * 60 * 60 * 1000).toISOString()\n          },\n          rememberMe \n        });\n        return;\n      }\n\n      res.status(401).json({ error: \"Invalid credentials\" });\n    } catch (error) {\n      console.error(\"Authentication error:\", error);\n      res.status(500).json({ error: \"Authentication failed\" });\n    }\n  });\n\n  // AI Learning Path Routes\n  app.post(\"/api/learning-path/suggestions\", async (req, res) => {\n    try {\n      const { userId, skillLevel, goals, timeAvailable, preferredLearningStyle, certificationGoals } = req.body;\n\n      const userProgress = {\n        userId: userId || 'demo-user',\n        completedLessons: [],\n        skillLevel: skillLevel || 'intermediate',\n        goals: goals || ['certification'],\n        weakAreas: ['gas management'],\n        strengths: ['safety protocols'],\n        timeAvailable: timeAvailable || 10,\n        preferredLearningStyle: preferredLearningStyle || 'mixed',\n        certificationGoals: certificationGoals || ['NDT Inspector']\n      };\n\n      const suggestion = await aiLearningPathService.generateLearningPath(userProgress);\n      res.json(suggestion);\n    } catch (error) {\n      console.error('Error generating learning path suggestions:', error);\n      res.status(500).json({ error: \"Failed to generate learning path suggestions\" });\n    }\n  });\n\n  app.post(\"/api/learning-path/analysis\", async (req, res) => {\n    try {\n      const { completedLessons, quizScores } = req.body;\n      \n      const analysis = await aiLearningPathService.analyzeLearningStyle(\n        completedLessons || [],\n        quizScores || [85, 92, 78, 95]\n      );\n      \n      res.json(analysis);\n    } catch (error) {\n      console.error('Error analyzing learning style:', error);\n      res.status(500).json({ error: \"Failed to analyze learning style\" });\n    }\n  });\n\n  app.post(\"/api/learning-path/career-advice\", async (req, res) => {\n    try {\n      const { userId, skillLevel, goals, certificationGoals } = req.body;\n\n      const userProgress = {\n        userId: userId || 'demo-user',\n        completedLessons: [],\n        skillLevel: skillLevel || 'intermediate',\n        goals: goals || ['certification'],\n        weakAreas: [],\n        strengths: [],\n        timeAvailable: 10,\n        preferredLearningStyle: 'mixed',\n        certificationGoals: certificationGoals || ['NDT Inspector']\n      };\n\n      const advice = await aiLearningPathService.generateCareerAdvice(userProgress);\n      res.json(advice);\n    } catch (error) {\n      console.error('Error generating career advice:', error);\n      res.status(500).json({ error: \"Failed to generate career advice\" });\n    }\n  });\n\n  // Tracks routes\n  app.get(\"/api/tracks\", async (req, res) => {\n    try {\n      const tracks = await tempStorage.getAllTracks();\n      res.json(tracks);\n    } catch (error) {\n      console.error('Tracks API error:', error);\n      res.status(500).json({ error: \"Failed to fetch tracks\" });\n    }\n  });\n\n  app.get(\"/api/tracks/:slug\", async (req, res) => {\n    try {\n      const { slug } = req.params;\n      const track = await tempStorage.getTrackBySlug(slug);\n      if (!track) {\n        return res.status(404).json({ error: \"Track not found\" });\n      }\n      res.json(track);\n    } catch (error) {\n      console.error('Track by slug API error:', error);\n      res.status(500).json({ error: \"Failed to fetch track\" });\n    }\n  });\n\n  // Trial signup endpoint\n  app.post('/api/trial-signup', async (req, res) => {\n    try {\n      const { name, email } = req.body;\n      \n      if (!name || !email) {\n        return res.status(400).json({ error: 'Name and email are required' });\n      }\n\n      if (!email.includes('@')) {\n        return res.status(400).json({ error: 'Please enter a valid email address' });\n      }\n\n      const user = await tempStorage.createTrialUser({ name, email });\n      \n      // Send welcome email\n      await emailMarketing.sendWelcomeTrialEmail({ name, email });\n      \n      res.json({ \n        success: true, \n        user: {\n          id: user.id,\n          name: user.name,\n          email: user.email,\n          subscriptionType: user.subscription_type,\n          trialExpiresAt: user.trial_expires_at\n        }\n      });\n    } catch (error: any) {\n      console.error('Trial signup error:', error);\n      if (error.message.includes('already exists')) {\n        return res.status(409).json({ error: 'An account with this email already exists' });\n      }\n      res.status(500).json({ error: 'Failed to create trial account' });\n    }\n  });\n\n  // Support ticket endpoints\n  app.post('/api/support/ticket', async (req, res) => {\n    try {\n      const { name, email, subject, message, priority = 'medium' } = req.body;\n      \n      if (!name || !email || !subject || !message) {\n        return res.status(400).json({ error: 'All fields are required' });\n      }\n\n      const ticket = {\n        userId: 'unknown', // Would be from session in real implementation\n        email,\n        name,\n        subject,\n        message,\n        priority,\n        createdAt: new Date()\n      };\n\n      const success = await emailMarketing.sendTicketConfirmation(ticket);\n      \n      if (success) {\n        res.json({ \n          success: true, \n          message: 'Support ticket submitted successfully. You will receive a confirmation email shortly.',\n          ticketId: `PDT-${Date.now()}`\n        });\n      } else {\n        res.status(500).json({ error: 'Failed to submit support ticket' });\n      }\n    } catch (error) {\n      console.error('Support ticket error:', error);\n      res.status(500).json({ error: 'Failed to submit support ticket' });\n    }\n  });\n\n  // Request Google review endpoint\n  app.post('/api/support/request-review', async (req, res) => {\n    try {\n      const { userId } = req.body;\n      \n      if (!userId) {\n        return res.status(400).json({ error: 'User ID is required' });\n      }\n\n      await emailMarketing.checkAndRequestReview(userId);\n      \n      res.json({ \n        success: true, \n        message: 'Review request processed successfully'\n      });\n    } catch (error) {\n      console.error('Review request error:', error);\n      res.status(500).json({ error: 'Failed to process review request' });\n    }\n  });\n\n  // Affiliate Program Endpoints\n  app.get('/api/affiliate/dashboard', async (req, res) => {\n    try {\n      // Create a demo affiliate if it doesn't exist\n      let demoAffiliate;\n      try {\n        const dashboardData = await affiliateService.getAffiliateDashboard('demo-affiliate-1');\n        res.json(dashboardData);\n        return;\n      } catch (error) {\n        // If affiliate doesn't exist, create it\n        demoAffiliate = await affiliateService.createAffiliate({\n          userId: 'demo-user-1',\n          name: 'Demo Partner',\n          email: 'demo@partner.com'\n        });\n        const dashboardData = await affiliateService.getAffiliateDashboard(demoAffiliate.id);\n        res.json(dashboardData);\n      }\n    } catch (error) {\n      console.error('Affiliate dashboard error:', error);\n      res.status(500).json({ error: 'Failed to load dashboard' });\n    }\n  });\n\n  app.get('/api/affiliate/leaderboard', async (req, res) => {\n    try {\n      const leaderboard = await affiliateService.getLeaderboard();\n      res.json(leaderboard);\n    } catch (error) {\n      console.error('Leaderboard error:', error);\n      res.status(500).json({ error: 'Failed to load leaderboard' });\n    }\n  });\n\n  app.post('/api/affiliate/track-click', async (req, res) => {\n    try {\n      const { affiliateCode, clickData } = req.body;\n      \n      if (!affiliateCode) {\n        return res.status(400).json({ error: 'Affiliate code is required' });\n      }\n\n      const click = await affiliateService.trackClick(affiliateCode, clickData);\n      res.json({ success: true, clickId: click.id });\n    } catch (error) {\n      console.error('Click tracking error:', error);\n      res.status(500).json({ error: 'Failed to track click' });\n    }\n  });\n\n  app.post('/api/affiliate/convert', async (req, res) => {\n    try {\n      const { affiliateCode, referredUserId, subscriptionType, monthlyValue } = req.body;\n      \n      if (!affiliateCode || !referredUserId || !subscriptionType || !monthlyValue) {\n        return res.status(400).json({ error: 'Missing required fields' });\n      }\n\n      const referral = await affiliateService.processReferral({\n        affiliateCode,\n        referredUserId,\n        subscriptionType,\n        monthlyValue\n      });\n\n      res.json({ success: true, referral });\n    } catch (error) {\n      console.error('Conversion tracking error:', error);\n      res.status(500).json({ error: 'Failed to process conversion' });\n    }\n  });\n\n  app.post('/api/affiliate/create', async (req, res) => {\n    try {\n      const { userId, name, email } = req.body;\n      \n      if (!userId || !name || !email) {\n        return res.status(400).json({ error: 'Missing required fields' });\n      }\n\n      const affiliate = await affiliateService.createAffiliate({ userId, name, email });\n      res.json({ success: true, affiliate });\n    } catch (error) {\n      console.error('Affiliate creation error:', error);\n      res.status(500).json({ error: 'Failed to create affiliate account' });\n    }\n  });\n\n  // Learning Path AI Routes\n  app.post('/api/learning-path/generate', async (req, res) => {\n    try {\n      const { profile, additionalInfo } = req.body;\n      \n      if (!profile || !profile.experience || !profile.goals || profile.goals.length === 0) {\n        return res.status(400).json({ error: 'Profile with experience and goals is required' });\n      }\n\n      const aiLearningPathService = new AILearningPathService();\n      const suggestions = await aiLearningPathService.generateLearningPath(profile, additionalInfo);\n      \n      res.json({ suggestions });\n    } catch (error) {\n      console.error('Learning path generation error:', error);\n      res.status(500).json({ error: 'Failed to generate learning path suggestions' });\n    }\n  });\n\n  app.get('/api/learning-path/suggestions', async (req, res) => {\n    try {\n      // For the demo, return mock suggestions based on query parameters\n      const { experience, goals } = req.query;\n      \n      if (!experience || !goals) {\n        return res.json([]);\n      }\n\n      // Return sample suggestions for now\n      const mockSuggestions = [\n        {\n          id: \"foundation-path\",\n          title: \"Commercial Diving Foundation\",\n          description: \"Essential certifications for starting your commercial diving career\",\n          difficulty: \"Beginner\",\n          estimatedWeeks: 16,\n          tracks: [\n            {\n              id: \"1\",\n              title: \"Air Diving Life Support Technician (ALST)\",\n              slug: \"air-diving-life-support-technician\",\n              order: 1,\n              reason: \"Foundation certification required for all commercial diving operations\"\n            },\n            {\n              id: \"2\", \n              title: \"Life Support Technician (LST)\",\n              slug: \"life-support-technician\",\n              order: 2,\n              reason: \"Advanced life support systems management and safety protocols\"\n            }\n          ],\n          confidence: 92,\n          reasoning: \"Based on your beginner experience level and commercial diving goals, this path provides the essential foundation certifications required by industry standards.\"\n        }\n      ];\n      \n      res.json(mockSuggestions);\n    } catch (error) {\n      console.error('Learning path suggestions error:', error);\n      res.status(500).json({ error: 'Failed to fetch learning path suggestions' });\n    }\n  });\n\n  // Get current user (mock endpoint for trial)\n  app.get('/api/current-user', async (req, res) => {\n    try {\n      // For now, return a mock trial user\n      const mockTrialUser = {\n        id: 'trial-user-1',\n        name: 'Trial User',\n        email: 'trial@example.com',\n        subscriptionType: 'TRIAL',\n        trialExpiresAt: new Date(Date.now() + 24 * 60 * 60 * 1000).toISOString(),\n        subscriptionStatus: 'ACTIVE'\n      };\n      res.json(mockTrialUser);\n    } catch (error) {\n      console.error('Error fetching current user:', error);\n      res.status(500).json({ error: 'Failed to fetch user data' });\n    }\n  });\n\n  // Lessons routes\n  app.get(\"/api/lessons/:id\", async (req, res) => {\n    try {\n      const { id } = req.params;\n      const lesson = await tempStorage.getLessonById(id);\n      if (!lesson) {\n        return res.status(404).json({ error: \"Lesson not found\" });\n      }\n      res.json(lesson);\n    } catch (error) {\n      console.error('Lesson API error:', error);\n      res.status(500).json({ error: \"Failed to fetch lesson\" });\n    }\n  });\n\n  app.patch(\"/api/lessons/:id\", async (req, res) => {\n    try {\n      const { id } = req.params;\n      const updateData = insertLessonSchema.partial().parse(req.body);\n      const lesson = await storage.updateLesson(id, updateData);\n      if (!lesson) {\n        return res.status(404).json({ error: \"Lesson not found\" });\n      }\n      res.json(lesson);\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        return res.status(400).json({ error: \"Invalid data\", details: error.errors });\n      }\n      res.status(500).json({ error: \"Failed to update lesson\" });\n    }\n  });\n\n  // Quiz routes\n  app.get(\"/api/quizzes/lesson/:lessonId\", async (req, res) => {\n    try {\n      const { lessonId } = req.params;\n      const quiz = await tempStorage.getQuizByLessonId(lessonId);\n      if (!quiz) {\n        return res.status(404).json({ error: \"Quiz not found\" });\n      }\n      res.json(quiz);\n    } catch (error) {\n      console.error('Quiz API error:', error);\n      res.status(500).json({ error: \"Failed to fetch quiz\" });\n    }\n  });\n\n  app.post(\"/api/quiz-attempts\", async (req, res) => {\n    try {\n      const attemptData = insertAttemptSchema.parse(req.body);\n      const attempt = await storage.createAttempt(attemptData);\n      res.status(201).json(attempt);\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        return res.status(400).json({ error: \"Invalid data\", details: error.errors });\n      }\n      res.status(500).json({ error: \"Failed to create attempt\" });\n    }\n  });\n\n  // Client Management routes\n  app.get(\"/api/clients\", async (req, res) => {\n    try {\n      const clients = await tempStorage.getAllClients();\n      res.json(clients);\n    } catch (error) {\n      console.error('Get clients API error:', error);\n      res.status(500).json({ error: \"Failed to fetch clients\" });\n    }\n  });\n\n  app.post(\"/api/clients\", async (req, res) => {\n    try {\n      const client = await tempStorage.createClient(req.body);\n      res.json(client);\n    } catch (error) {\n      console.error('Create client API error:', error);\n      res.status(500).json({ error: \"Failed to create client\" });\n    }\n  });\n\n  app.put(\"/api/clients/:id\", async (req, res) => {\n    try {\n      const client = await tempStorage.updateClient(req.params.id, req.body);\n      res.json(client);\n    } catch (error) {\n      console.error('Update client API error:', error);\n      res.status(500).json({ error: \"Failed to update client\" });\n    }\n  });\n\n  app.delete(\"/api/clients/:id\", async (req, res) => {\n    try {\n      const result = await tempStorage.deleteClient(req.params.id);\n      res.json(result);\n    } catch (error) {\n      console.error('Delete client API error:', error);\n      res.status(500).json({ error: \"Failed to delete client\" });\n    }\n  });\n\n  app.get(\"/api/clients/stats\", async (req, res) => {\n    try {\n      const stats = await tempStorage.getClientStats();\n      res.json(stats);\n    } catch (error) {\n      console.error('Client stats API error:', error);\n      res.status(500).json({ error: \"Failed to fetch client stats\" });\n    }\n  });\n\n  // Analytics routes\n  app.get(\"/api/analytics/quiz\", async (req, res) => {\n    try {\n      const analytics = await tempStorage.getQuizAnalytics();\n      res.json(analytics);\n    } catch (error) {\n      console.error('Quiz analytics API error:', error);\n      res.status(500).json({ error: \"Failed to fetch quiz analytics\" });\n    }\n  });\n\n  // User progress routes\n  app.get(\"/api/users/current/progress\", async (req, res) => {\n    try {\n      // For now, return empty progress since we don't have user auth\n      const progress = await tempStorage.getUserProgress(\"temp-user\");\n      res.json(progress);\n    } catch (error) {\n      console.error('User progress API error:', error);\n      res.status(500).json({ error: \"Failed to fetch user progress\" });\n    }\n  });\n\n  // Admin routes\n  app.get(\"/api/admin/invites\", async (req, res) => {\n    try {\n      const invites = await tempStorage.getAllInvites();\n      res.json(invites);\n    } catch (error) {\n      console.error('Admin invites API error:', error);\n      res.status(500).json({ error: \"Failed to fetch invites\" });\n    }\n  });\n\n  app.post(\"/api/admin/invites\", async (req, res) => {\n    try {\n      const inviteData = insertInviteSchema.parse(req.body);\n      const invite = await storage.createInvite(inviteData);\n      res.status(201).json(invite);\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        return res.status(400).json({ error: \"Invalid data\", details: error.errors });\n      }\n      res.status(500).json({ error: \"Failed to create invite\" });\n    }\n  });\n\n  app.delete(\"/api/admin/invites/:id\", async (req, res) => {\n    try {\n      const { id } = req.params;\n      await storage.deleteInvite(id);\n      res.status(204).send();\n    } catch (error) {\n      res.status(500).json({ error: \"Failed to delete invite\" });\n    }\n  });\n\n  // Object storage routes\n  app.post(\"/api/objects/upload\", async (req, res) => {\n    try {\n      const { ObjectStorageService } = await import(\"./objectStorage\");\n      const objectStorageService = new ObjectStorageService();\n      const uploadURL = await objectStorageService.getObjectEntityUploadURL();\n      res.json({ uploadURL });\n    } catch (error) {\n      console.error(\"Error generating upload URL:\", error);\n      res.status(500).json({ error: \"Failed to generate upload URL\" });\n    }\n  });\n\n  app.get(\"/objects/:objectPath(*)\", async (req, res) => {\n    try {\n      const { ObjectStorageService, ObjectNotFoundError } = await import(\"./objectStorage\");\n      const objectStorageService = new ObjectStorageService();\n      const objectFile = await objectStorageService.getObjectEntityFile(req.path);\n      objectStorageService.downloadObject(objectFile, res);\n    } catch (error) {\n      console.error(\"Error serving object:\", error);\n      if (error.name === 'ObjectNotFoundError') {\n        return res.sendStatus(404);\n      }\n      return res.sendStatus(500);\n    }\n  });\n\n  // Profile update routes\n  app.put(\"/api/users/profile\", async (req, res) => {\n    try {\n      const { name, email, phone, bio, company, jobTitle, location, currentEmail } = req.body;\n      const userEmail = req.headers['x-user-email'] || currentEmail || email;\n      \n      // For demo purposes, we'll mock the update\n      const updatedUser = {\n        id: 'user-1',\n        name: name || 'User',\n        email: email || userEmail,\n        phone: phone || '',\n        bio: bio || '',\n        company: company || '',\n        jobTitle: jobTitle || '',\n        location: location || '',\n        role: userEmail === 'lalabalavu.jon@gmail.com' ? 'ADMIN' : 'USER',\n        subscriptionType: userEmail === 'lalabalavu.jon@gmail.com' ? 'LIFETIME' : 'TRIAL',\n        updatedAt: new Date().toISOString(),\n      };\n\n      res.json(updatedUser);\n    } catch (error) {\n      console.error(\"Error updating user profile:\", error);\n      res.status(500).json({ error: \"Failed to update profile\" });\n    }\n  });\n\n  app.put(\"/api/users/profile-picture\", async (req, res) => {\n    try {\n      const { profilePictureURL } = req.body;\n      const userEmail = req.headers['x-user-email'] as string;\n      \n      if (!profilePictureURL) {\n        return res.status(400).json({ error: \"Profile picture URL is required\" });\n      }\n\n      if (!userEmail) {\n        return res.status(400).json({ error: \"User email is required\" });\n      }\n\n      // For demo purposes, we'll mock the profile picture update\n      const { ObjectStorageService } = await import(\"./objectStorage\");\n      const objectStorageService = new ObjectStorageService();\n      const normalizedPath = objectStorageService.normalizeObjectEntityPath(profilePictureURL);\n\n      const updatedUser = {\n        id: 'user-1',\n        name: 'User',\n        email: userEmail,\n        profilePictureUrl: normalizedPath,\n        role: userEmail === 'lalabalavu.jon@gmail.com' ? 'ADMIN' : 'USER',\n        subscriptionType: userEmail === 'lalabalavu.jon@gmail.com' ? 'LIFETIME' : 'TRIAL',\n        updatedAt: new Date().toISOString(),\n      };\n\n      res.json(updatedUser);\n    } catch (error) {\n      console.error(\"Error updating profile picture:\", error);\n      res.status(500).json({ error: \"Failed to update profile picture\" });\n    }\n  });\n\n  // Current user route\n  app.get(\"/api/users/current\", async (req, res) => {\n    try {\n      // For demo purposes, return different users based on query param\n      const email = req.query.email as string;\n      \n      // Admin account\n      if (email === 'lalabalavu.jon@gmail.com') {\n        res.json({\n          id: 'admin-1',\n          name: 'Admin User',\n          email: 'lalabalavu.jon@gmail.com',\n          role: 'ADMIN',\n          subscriptionType: 'LIFETIME',\n          subscriptionDate: new Date('2024-01-01').toISOString(),\n          trialExpiresAt: null\n        });\n        return;\n      }\n      \n      // Lifetime access users\n      const lifetimeUsers = [\n        'eroni2519@gmail.com',\n        'jone.cirikidaveta@gmail.com', \n        'jone7898@gmail.com',\n        'samueltabuya35@gmail.com',\n        'jone.viti@gmail.com'\n      ];\n      \n      if (lifetimeUsers.includes(email)) {\n        res.json({\n          id: 'lifetime-user',\n          name: 'Lifetime Member',\n          email: email,\n          role: 'LIFETIME',\n          subscriptionType: 'LIFETIME',\n          subscriptionDate: new Date('2024-01-01').toISOString(),\n          trialExpiresAt: null\n        });\n        return;\n      }\n      \n      // Default trial user\n      res.json({\n        id: 'trial-user',\n        name: 'Trial User',\n        email: email || 'trial@example.com',\n        role: 'USER',\n        subscriptionType: 'TRIAL',\n        subscriptionDate: null,\n        trialExpiresAt: new Date(Date.now() + 24 * 60 * 60 * 1000).toISOString()\n      });\n    } catch (error) {\n      res.status(500).json({ error: \"Failed to fetch current user\" });\n    }\n  });\n\n  // User progress routes\n  app.get(\"/api/users/:userId/progress\", async (req, res) => {\n    try {\n      const { userId } = req.params;\n      const progress = await storage.getUserProgress(userId);\n      res.json(progress);\n    } catch (error) {\n      res.status(500).json({ error: \"Failed to fetch user progress\" });\n    }\n  });\n\n  app.post(\"/api/users/:userId/progress\", async (req, res) => {\n    try {\n      const { userId } = req.params;\n      const { lessonId } = req.body;\n      const progress = await storage.markLessonComplete(userId, lessonId);\n      res.status(201).json(progress);\n    } catch (error) {\n      res.status(500).json({ error: \"Failed to mark lesson complete\" });\n    }\n  });\n\n  // Invite validation route\n  app.get(\"/api/invites/:token\", async (req, res) => {\n    try {\n      const { token } = req.params;\n      const invite = await storage.getInviteByToken(token);\n      if (!invite || invite.usedAt || new Date() > invite.expiresAt) {\n        return res.status(404).json({ error: \"Invalid or expired invite\" });\n      }\n      res.json(invite);\n    } catch (error) {\n      res.status(500).json({ error: \"Failed to validate invite\" });\n    }\n  });\n\n  // Register import routes for GitHub repository content\n  registerImportRoutes(app);\n\n  const httpServer = createServer(app);\n  return httpServer;\n}\n","size_bytes":29756},"server/storage.ts":{"content":"import { \n  users, \n  tracks, \n  lessons, \n  quizzes, \n  questions, \n  attempts, \n  invites,\n  userProgress,\n  type User, \n  type InsertUser,\n  type Track,\n  type InsertTrack,\n  type Lesson,\n  type InsertLesson,\n  type Quiz,\n  type InsertQuiz,\n  type Question,\n  type InsertQuestion,\n  type Attempt,\n  type InsertAttempt,\n  type Invite,\n  type InsertInvite,\n  type UserProgress\n} from \"@shared/schema\";\nimport { db } from \"./db\";\nimport { eq, desc, and } from \"drizzle-orm\";\nimport { randomBytes } from \"crypto\";\n\nexport interface IStorage {\n  // User methods\n  getUser(id: string): Promise<User | undefined>;\n  getUserByEmail(email: string): Promise<User | undefined>;\n  createUser(user: InsertUser): Promise<User>;\n  \n  // Track methods\n  getAllTracks(): Promise<Track[]>;\n  getTrackBySlug(slug: string): Promise<(Track & { lessons: Lesson[] }) | undefined>;\n  createTrack(track: InsertTrack): Promise<Track>;\n  \n  // Lesson methods\n  getLessonById(id: string): Promise<Lesson | undefined>;\n  updateLesson(id: string, data: Partial<InsertLesson>): Promise<Lesson | undefined>;\n  createLesson(lesson: InsertLesson): Promise<Lesson>;\n  \n  // Quiz methods\n  getQuizByLessonId(lessonId: string): Promise<(Quiz & { questions: Question[] }) | undefined>;\n  createQuiz(quiz: InsertQuiz): Promise<Quiz>;\n  \n  // Question methods\n  createQuestion(question: InsertQuestion): Promise<Question>;\n  \n  // Attempt methods\n  createAttempt(attempt: InsertAttempt): Promise<Attempt>;\n  getUserAttempts(userId: string): Promise<Attempt[]>;\n  \n  // Invite methods\n  getAllInvites(): Promise<Invite[]>;\n  getInviteByToken(token: string): Promise<Invite | undefined>;\n  createInvite(invite: InsertInvite): Promise<Invite>;\n  deleteInvite(id: string): Promise<void>;\n  markInviteUsed(token: string): Promise<void>;\n  \n  // User progress methods\n  getUserProgress(userId: string): Promise<UserProgress[]>;\n  markLessonComplete(userId: string, lessonId: string): Promise<UserProgress>;\n}\n\nexport class DatabaseStorage implements IStorage {\n  async getUser(id: string): Promise<User | undefined> {\n    const [user] = await db.select().from(users).where(eq(users.id, id));\n    return user || undefined;\n  }\n\n  async getUserByEmail(email: string): Promise<User | undefined> {\n    const [user] = await db.select().from(users).where(eq(users.email, email));\n    return user || undefined;\n  }\n\n  async createUser(insertUser: InsertUser): Promise<User> {\n    const [user] = await db\n      .insert(users)\n      .values(insertUser)\n      .returning();\n    return user;\n  }\n\n  async getAllTracks(): Promise<Track[]> {\n    return await db.select().from(tracks).orderBy(tracks.title);\n  }\n\n  async getTrackBySlug(slug: string): Promise<(Track & { lessons: Lesson[] }) | undefined> {\n    const [track] = await db.select().from(tracks).where(eq(tracks.slug, slug));\n    if (!track) return undefined;\n\n    const trackLessons = await db\n      .select()\n      .from(lessons)\n      .where(eq(lessons.trackId, track.id))\n      .orderBy(lessons.order);\n\n    return { ...track, lessons: trackLessons };\n  }\n\n  async createTrack(insertTrack: InsertTrack): Promise<Track> {\n    const [track] = await db\n      .insert(tracks)\n      .values(insertTrack)\n      .returning();\n    return track;\n  }\n\n  async getLessonById(id: string): Promise<Lesson | undefined> {\n    const [lesson] = await db.select().from(lessons).where(eq(lessons.id, id));\n    return lesson || undefined;\n  }\n\n  async updateLesson(id: string, data: Partial<InsertLesson>): Promise<Lesson | undefined> {\n    const [lesson] = await db\n      .update(lessons)\n      .set({ ...data, updatedAt: new Date() })\n      .where(eq(lessons.id, id))\n      .returning();\n    return lesson || undefined;\n  }\n\n  async createLesson(insertLesson: InsertLesson): Promise<Lesson> {\n    const [lesson] = await db\n      .insert(lessons)\n      .values(insertLesson)\n      .returning();\n    return lesson;\n  }\n\n  async getQuizByLessonId(lessonId: string): Promise<(Quiz & { questions: Question[] }) | undefined> {\n    const [quiz] = await db.select().from(quizzes).where(eq(quizzes.lessonId, lessonId));\n    if (!quiz) return undefined;\n\n    const quizQuestions = await db\n      .select()\n      .from(questions)\n      .where(eq(questions.quizId, quiz.id))\n      .orderBy(questions.order);\n\n    return { ...quiz, questions: quizQuestions };\n  }\n\n  async createQuiz(insertQuiz: InsertQuiz): Promise<Quiz> {\n    const [quiz] = await db\n      .insert(quizzes)\n      .values(insertQuiz)\n      .returning();\n    return quiz;\n  }\n\n  async createQuestion(insertQuestion: InsertQuestion): Promise<Question> {\n    const [question] = await db\n      .insert(questions)\n      .values(insertQuestion)\n      .returning();\n    return question;\n  }\n\n  async createAttempt(insertAttempt: InsertAttempt): Promise<Attempt> {\n    const [attempt] = await db\n      .insert(attempts)\n      .values(insertAttempt)\n      .returning();\n    return attempt;\n  }\n\n  async getUserAttempts(userId: string): Promise<Attempt[]> {\n    return await db\n      .select()\n      .from(attempts)\n      .where(eq(attempts.userId, userId))\n      .orderBy(desc(attempts.completedAt));\n  }\n\n  async getAllInvites(): Promise<Invite[]> {\n    return await db\n      .select()\n      .from(invites)\n      .orderBy(desc(invites.createdAt));\n  }\n\n  async getInviteByToken(token: string): Promise<Invite | undefined> {\n    const [invite] = await db.select().from(invites).where(eq(invites.token, token));\n    return invite || undefined;\n  }\n\n  async createInvite(insertInvite: InsertInvite): Promise<Invite> {\n    const token = randomBytes(32).toString('hex');\n    const [invite] = await db\n      .insert(invites)\n      .values({\n        ...insertInvite,\n        token,\n      })\n      .returning();\n    return invite;\n  }\n\n  async deleteInvite(id: string): Promise<void> {\n    await db.delete(invites).where(eq(invites.id, id));\n  }\n\n  async markInviteUsed(token: string): Promise<void> {\n    await db\n      .update(invites)\n      .set({ usedAt: new Date() })\n      .where(eq(invites.token, token));\n  }\n\n  async getUserProgress(userId: string): Promise<UserProgress[]> {\n    return await db\n      .select()\n      .from(userProgress)\n      .where(eq(userProgress.userId, userId))\n      .orderBy(desc(userProgress.completedAt));\n  }\n\n  async markLessonComplete(userId: string, lessonId: string): Promise<UserProgress> {\n    const [progress] = await db\n      .insert(userProgress)\n      .values({\n        userId,\n        lessonId,\n      })\n      .returning();\n    return progress;\n  }\n}\n\nexport const storage = new DatabaseStorage();\n","size_bytes":6574},"server/vite.ts":{"content":"import express, { type Express } from \"express\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { createServer as createViteServer, createLogger } from \"vite\";\nimport { type Server } from \"http\";\nimport viteConfig from \"../vite.config\";\nimport { nanoid } from \"nanoid\";\n\nconst viteLogger = createLogger();\n\nexport function log(message: string, source = \"express\") {\n  const formattedTime = new Date().toLocaleTimeString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: true,\n  });\n\n  console.log(`${formattedTime} [${source}] ${message}`);\n}\n\nexport async function setupVite(app: Express, server: Server) {\n  const serverOptions = {\n    middlewareMode: true,\n    hmr: { server },\n    allowedHosts: true as const,\n  };\n\n  const vite = await createViteServer({\n    ...viteConfig,\n    configFile: false,\n    customLogger: {\n      ...viteLogger,\n      error: (msg, options) => {\n        viteLogger.error(msg, options);\n        process.exit(1);\n      },\n    },\n    server: serverOptions,\n    appType: \"custom\",\n  });\n\n  app.use(vite.middlewares);\n  app.use(\"*\", async (req, res, next) => {\n    const url = req.originalUrl;\n\n    try {\n      const clientTemplate = path.resolve(\n        import.meta.dirname,\n        \"..\",\n        \"client\",\n        \"index.html\",\n      );\n\n      // always reload the index.html file from disk incase it changes\n      let template = await fs.promises.readFile(clientTemplate, \"utf-8\");\n      template = template.replace(\n        `src=\"/src/main.tsx\"`,\n        `src=\"/src/main.tsx?v=${nanoid()}\"`,\n      );\n      const page = await vite.transformIndexHtml(url, template);\n      res.status(200).set({ \"Content-Type\": \"text/html\" }).end(page);\n    } catch (e) {\n      vite.ssrFixStacktrace(e as Error);\n      next(e);\n    }\n  });\n}\n\nexport function serveStatic(app: Express) {\n  const distPath = path.resolve(import.meta.dirname, \"public\");\n\n  if (!fs.existsSync(distPath)) {\n    throw new Error(\n      `Could not find the build directory: ${distPath}, make sure to build the client first`,\n    );\n  }\n\n  app.use(express.static(distPath));\n\n  // fall through to index.html if the file doesn't exist\n  app.use(\"*\", (_req, res) => {\n    res.sendFile(path.resolve(distPath, \"index.html\"));\n  });\n}\n","size_bytes":2263},"shared/schema.ts":{"content":"import { sql, relations } from \"drizzle-orm\";\nimport { pgTable, text, varchar, integer, timestamp, boolean, pgEnum, json } from \"drizzle-orm/pg-core\";\nimport { createInsertSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\n\nexport const roleEnum = pgEnum(\"role\", [\"USER\", \"ADMIN\", \"SUPER_ADMIN\", \"LIFETIME\", \"AFFILIATE\"]);\nexport const questionTypeEnum = pgEnum(\"question_type\", [\"MULTIPLE_CHOICE\", \"TRUE_FALSE\", \"SHORT_ANSWER\"]);\nexport const examTypeEnum = pgEnum(\"exam_type\", [\"QUIZ\", \"EXAM\", \"PRACTICE\"]);\nexport const certificationStatusEnum = pgEnum(\"certification_status\", [\"NOT_STARTED\", \"IN_PROGRESS\", \"COMPLETED\", \"EXPIRED\"]);\nexport const subscriptionTypeEnum = pgEnum(\"subscription_type\", [\"TRIAL\", \"MONTHLY\", \"ANNUAL\", \"LIFETIME\"]);\nexport const clientStatusEnum = pgEnum(\"client_status\", [\"ACTIVE\", \"PAUSED\", \"CANCELLED\"]);\n\nexport const users = pgTable(\"users\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  email: text(\"email\").notNull().unique(),\n  name: text(\"name\"),\n  role: roleEnum(\"role\").default(\"USER\").notNull(),\n  subscriptionType: subscriptionTypeEnum(\"subscription_type\").default(\"TRIAL\").notNull(),\n  trialExpiresAt: timestamp(\"trial_expires_at\"),\n  subscriptionStatus: clientStatusEnum(\"subscription_status\").default(\"ACTIVE\").notNull(),\n  stripeCustomerId: text(\"stripe_customer_id\"),\n  affiliateCode: varchar(\"affiliate_code\").unique(),\n  referredBy: varchar(\"referred_by\"), // affiliate code of referrer\n  commissionRate: integer(\"commission_rate\").default(0), // percentage (50 = 50%)\n  totalEarnings: integer(\"total_earnings\").default(0), // in cents\n  createdAt: timestamp(\"created_at\").defaultNow().notNull(),\n  updatedAt: timestamp(\"updated_at\").defaultNow().notNull(),\n});\n\nexport const accounts = pgTable(\"accounts\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  userId: varchar(\"user_id\").notNull().references(() => users.id, { onDelete: \"cascade\" }),\n  type: text(\"type\").notNull(),\n  provider: text(\"provider\").notNull(),\n  providerAccountId: text(\"provider_account_id\").notNull(),\n  refreshToken: text(\"refresh_token\"),\n  accessToken: text(\"access_token\"),\n  expiresAt: integer(\"expires_at\"),\n  tokenType: text(\"token_type\"),\n  scope: text(\"scope\"),\n  idToken: text(\"id_token\"),\n  sessionState: text(\"session_state\"),\n});\n\nexport const sessions = pgTable(\"sessions\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  sessionToken: text(\"session_token\").notNull().unique(),\n  userId: varchar(\"user_id\").notNull().references(() => users.id, { onDelete: \"cascade\" }),\n  expires: timestamp(\"expires\").notNull(),\n});\n\nexport const verificationTokens = pgTable(\"verification_tokens\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  identifier: text(\"identifier\").notNull(),\n  token: text(\"token\").notNull().unique(),\n  expires: timestamp(\"expires\").notNull(),\n});\n\nexport const invites = pgTable(\"invites\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  email: text(\"email\").notNull(),\n  token: text(\"token\").notNull().unique(),\n  createdAt: timestamp(\"created_at\").defaultNow().notNull(),\n  expiresAt: timestamp(\"expires_at\").notNull(),\n  usedAt: timestamp(\"used_at\"),\n  createdByUserId: varchar(\"created_by_user_id\").references(() => users.id),\n});\n\nexport const tracks = pgTable(\"tracks\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  title: text(\"title\").notNull(),\n  slug: text(\"slug\").notNull().unique(),\n  summary: text(\"summary\"),\n  aiTutorId: varchar(\"ai_tutor_id\").references(() => aiTutors.id),\n  difficulty: text(\"difficulty\").default(\"beginner\").notNull(), // beginner, intermediate, advanced\n  estimatedHours: integer(\"estimated_hours\").default(0),\n  createdAt: timestamp(\"created_at\").defaultNow().notNull(),\n  isPublished: boolean(\"is_published\").default(false).notNull(),\n});\n\nexport const lessons = pgTable(\"lessons\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  trackId: varchar(\"track_id\").notNull().references(() => tracks.id, { onDelete: \"cascade\" }),\n  title: text(\"title\").notNull(),\n  order: integer(\"order\").default(0).notNull(),\n  content: text(\"content\").notNull(),\n  objectives: json(\"objectives\").default([]), // Learning objectives array\n  estimatedMinutes: integer(\"estimated_minutes\").default(30),\n  isRequired: boolean(\"is_required\").default(true).notNull(),\n  createdAt: timestamp(\"created_at\").defaultNow().notNull(),\n  updatedAt: timestamp(\"updated_at\").defaultNow().notNull(),\n});\n\nexport const quizzes = pgTable(\"quizzes\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  lessonId: varchar(\"lesson_id\").notNull().references(() => lessons.id, { onDelete: \"cascade\" }),\n  title: text(\"title\").notNull(),\n  timeLimit: integer(\"time_limit\").default(30), // in minutes\n  examType: examTypeEnum(\"exam_type\").default(\"QUIZ\").notNull(),\n  passingScore: integer(\"passing_score\").default(70), // percentage\n  maxAttempts: integer(\"max_attempts\").default(3),\n  showFeedback: boolean(\"show_feedback\").default(true).notNull(),\n  createdAt: timestamp(\"created_at\").defaultNow().notNull(),\n});\n\nexport const questions = pgTable(\"questions\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  quizId: varchar(\"quiz_id\").notNull().references(() => quizzes.id, { onDelete: \"cascade\" }),\n  type: questionTypeEnum(\"type\").default(\"MULTIPLE_CHOICE\").notNull(),\n  prompt: text(\"prompt\").notNull(),\n  options: json(\"options\").default([]), // For multiple choice: [\"a\", \"b\", \"c\", \"d\"], for true/false: [\"true\", \"false\"]\n  correctAnswer: text(\"correct_answer\").notNull(), // For MC: \"a\", for T/F: \"true\"/\"false\", for SA: expected answer\n  explanation: text(\"explanation\"), // Detailed feedback explanation\n  points: integer(\"points\").default(1).notNull(),\n  order: integer(\"order\").default(0).notNull(),\n});\n\nexport const attempts = pgTable(\"attempts\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  userId: varchar(\"user_id\").notNull().references(() => users.id, { onDelete: \"cascade\" }),\n  quizId: varchar(\"quiz_id\").notNull().references(() => quizzes.id, { onDelete: \"cascade\" }),\n  score: integer(\"score\").notNull(),\n  maxScore: integer(\"max_score\").notNull(),\n  percentage: integer(\"percentage\").notNull(),\n  passed: boolean(\"passed\").notNull(),\n  timeSpent: integer(\"time_spent\"), // in seconds\n  answers: json(\"answers\").notNull(), // Detailed answer tracking\n  feedback: json(\"feedback\").default([]), // Question-by-question feedback\n  startedAt: timestamp(\"started_at\").defaultNow().notNull(),\n  completedAt: timestamp(\"completed_at\").defaultNow().notNull(),\n});\n\nexport const userProgress = pgTable(\"user_progress\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  userId: varchar(\"user_id\").notNull().references(() => users.id, { onDelete: \"cascade\" }),\n  lessonId: varchar(\"lesson_id\").notNull().references(() => lessons.id, { onDelete: \"cascade\" }),\n  timeSpent: integer(\"time_spent\").default(0), // in minutes\n  completionRate: integer(\"completion_rate\").default(0), // percentage 0-100\n  lastAccessedAt: timestamp(\"last_accessed_at\").defaultNow().notNull(),\n  completedAt: timestamp(\"completed_at\").defaultNow().notNull(),\n});\n\n// New tables for enhanced functionality\nexport const aiTutors = pgTable(\"ai_tutors\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  name: text(\"name\").notNull(),\n  specialty: text(\"specialty\").notNull(), // \"NDT\", \"Diver Medic\", \"Commercial Dive Supervisor\", etc.\n  description: text(\"description\").notNull(),\n  personality: json(\"personality\").default({}), // AI personality traits and teaching style\n  knowledgeBase: json(\"knowledge_base\").default([]), // Specialized knowledge topics\n  createdAt: timestamp(\"created_at\").defaultNow().notNull(),\n});\n\nexport const practiceScenarios = pgTable(\"practice_scenarios\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  lessonId: varchar(\"lesson_id\").notNull().references(() => lessons.id, { onDelete: \"cascade\" }),\n  title: text(\"title\").notNull(),\n  description: text(\"description\").notNull(),\n  scenario: json(\"scenario\").notNull(), // Detailed scenario data\n  expectedActions: json(\"expected_actions\").default([]), // Expected user responses\n  difficulty: text(\"difficulty\").default(\"intermediate\").notNull(),\n  estimatedMinutes: integer(\"estimated_minutes\").default(15),\n  createdAt: timestamp(\"created_at\").defaultNow().notNull(),\n});\n\nexport const certificates = pgTable(\"certificates\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  userId: varchar(\"user_id\").notNull().references(() => users.id, { onDelete: \"cascade\" }),\n  trackId: varchar(\"track_id\").notNull().references(() => tracks.id, { onDelete: \"cascade\" }),\n  status: certificationStatusEnum(\"status\").default(\"NOT_STARTED\").notNull(),\n  progress: integer(\"progress\").default(0), // percentage 0-100\n  finalScore: integer(\"final_score\"),\n  issuedAt: timestamp(\"issued_at\"),\n  expiresAt: timestamp(\"expires_at\"),\n  createdAt: timestamp(\"created_at\").defaultNow().notNull(),\n  updatedAt: timestamp(\"updated_at\").defaultNow().notNull(),\n});\n\nexport const scenarioAttempts = pgTable(\"scenario_attempts\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  userId: varchar(\"user_id\").notNull().references(() => users.id, { onDelete: \"cascade\" }),\n  scenarioId: varchar(\"scenario_id\").notNull().references(() => practiceScenarios.id, { onDelete: \"cascade\" }),\n  userActions: json(\"user_actions\").notNull(), // User's actions during scenario\n  score: integer(\"score\").notNull(),\n  feedback: text(\"feedback\"), // AI tutor feedback\n  timeSpent: integer(\"time_spent\"), // in seconds\n  completedAt: timestamp(\"completed_at\").defaultNow().notNull(),\n});\n\nexport const clients = pgTable(\"clients\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  name: text(\"name\").notNull(),\n  email: text(\"email\").notNull().unique(),\n  subscriptionType: subscriptionTypeEnum(\"subscription_type\").default(\"TRIAL\").notNull(),\n  status: clientStatusEnum(\"status\").default(\"ACTIVE\").notNull(),\n  subscriptionDate: timestamp(\"subscription_date\").defaultNow().notNull(),\n  monthlyRevenue: integer(\"monthly_revenue\").default(0).notNull(), // Revenue in cents (e.g., 2500 for $25.00)\n  notes: text(\"notes\"),\n  createdAt: timestamp(\"created_at\").defaultNow().notNull(),\n  updatedAt: timestamp(\"updated_at\").defaultNow().notNull(),\n});\n\nexport const learningPaths = pgTable(\"learning_paths\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  userId: varchar(\"user_id\").notNull().references(() => users.id, { onDelete: \"cascade\" }),\n  title: text(\"title\").notNull(),\n  description: text(\"description\"),\n  userProfile: json(\"user_profile\").notNull(), // Store user's profile data\n  suggestedTracks: json(\"suggested_tracks\").notNull(), // Array of track IDs with order and reasoning\n  confidence: integer(\"confidence\").default(0), // AI confidence score 0-100\n  reasoning: text(\"reasoning\"), // AI explanation for the suggestions\n  status: text(\"status\").default(\"ACTIVE\").notNull(), // ACTIVE, COMPLETED, PAUSED\n  progress: integer(\"progress\").default(0), // Overall progress percentage\n  createdAt: timestamp(\"created_at\").defaultNow().notNull(),\n  updatedAt: timestamp(\"updated_at\").defaultNow().notNull(),\n});\n\n// Relations\nexport const usersRelations = relations(users, ({ many }) => ({\n  accounts: many(accounts),\n  sessions: many(sessions),\n  attempts: many(attempts),\n  progress: many(userProgress),\n  createdInvites: many(invites),\n  certificates: many(certificates),\n  scenarioAttempts: many(scenarioAttempts),\n  learningPaths: many(learningPaths),\n}));\n\nexport const aiTutorsRelations = relations(aiTutors, ({ many }) => ({\n  tracks: many(tracks),\n}));\n\nexport const accountsRelations = relations(accounts, ({ one }) => ({\n  user: one(users, {\n    fields: [accounts.userId],\n    references: [users.id],\n  }),\n}));\n\nexport const sessionsRelations = relations(sessions, ({ one }) => ({\n  user: one(users, {\n    fields: [sessions.userId],\n    references: [users.id],\n  }),\n}));\n\nexport const invitesRelations = relations(invites, ({ one }) => ({\n  createdBy: one(users, {\n    fields: [invites.createdByUserId],\n    references: [users.id],\n  }),\n}));\n\nexport const tracksRelations = relations(tracks, ({ one, many }) => ({\n  lessons: many(lessons),\n  aiTutor: one(aiTutors, {\n    fields: [tracks.aiTutorId],\n    references: [aiTutors.id],\n  }),\n  certificates: many(certificates),\n}));\n\nexport const lessonsRelations = relations(lessons, ({ one, many }) => ({\n  track: one(tracks, {\n    fields: [lessons.trackId],\n    references: [tracks.id],\n  }),\n  quizzes: many(quizzes),\n  progress: many(userProgress),\n  practiceScenarios: many(practiceScenarios),\n}));\n\nexport const practiceScenariosRelations = relations(practiceScenarios, ({ one, many }) => ({\n  lesson: one(lessons, {\n    fields: [practiceScenarios.lessonId],\n    references: [lessons.id],\n  }),\n  attempts: many(scenarioAttempts),\n}));\n\nexport const scenarioAttemptsRelations = relations(scenarioAttempts, ({ one }) => ({\n  user: one(users, {\n    fields: [scenarioAttempts.userId],\n    references: [users.id],\n  }),\n  scenario: one(practiceScenarios, {\n    fields: [scenarioAttempts.scenarioId],\n    references: [practiceScenarios.id],\n  }),\n}));\n\nexport const certificatesRelations = relations(certificates, ({ one }) => ({\n  user: one(users, {\n    fields: [certificates.userId],\n    references: [users.id],\n  }),\n  track: one(tracks, {\n    fields: [certificates.trackId],\n    references: [tracks.id],\n  }),\n}));\n\nexport const quizzesRelations = relations(quizzes, ({ one, many }) => ({\n  lesson: one(lessons, {\n    fields: [quizzes.lessonId],\n    references: [lessons.id],\n  }),\n  questions: many(questions),\n  attempts: many(attempts),\n}));\n\nexport const questionsRelations = relations(questions, ({ one }) => ({\n  quiz: one(quizzes, {\n    fields: [questions.quizId],\n    references: [quizzes.id],\n  }),\n}));\n\nexport const attemptsRelations = relations(attempts, ({ one }) => ({\n  user: one(users, {\n    fields: [attempts.userId],\n    references: [users.id],\n  }),\n  quiz: one(quizzes, {\n    fields: [attempts.quizId],\n    references: [quizzes.id],\n  }),\n}));\n\nexport const userProgressRelations = relations(userProgress, ({ one }) => ({\n  user: one(users, {\n    fields: [userProgress.userId],\n    references: [users.id],\n  }),\n  lesson: one(lessons, {\n    fields: [userProgress.lessonId],\n    references: [lessons.id],\n  }),\n}));\n\nexport const learningPathsRelations = relations(learningPaths, ({ one }) => ({\n  user: one(users, {\n    fields: [learningPaths.userId],\n    references: [users.id],\n  }),\n}));\n\n// Insert Schemas\nexport const insertUserSchema = createInsertSchema(users).omit({\n  id: true,\n  createdAt: true,\n  updatedAt: true,\n});\n\nexport const insertAiTutorSchema = createInsertSchema(aiTutors).omit({\n  id: true,\n  createdAt: true,\n});\n\nexport const insertPracticeScenarioSchema = createInsertSchema(practiceScenarios).omit({\n  id: true,\n  createdAt: true,\n});\n\nexport const insertCertificateSchema = createInsertSchema(certificates).omit({\n  id: true,\n  createdAt: true,\n  updatedAt: true,\n});\n\nexport const insertScenarioAttemptSchema = createInsertSchema(scenarioAttempts).omit({\n  id: true,\n  completedAt: true,\n});\n\nexport const insertClientSchema = createInsertSchema(clients).omit({\n  id: true,\n  createdAt: true,\n  updatedAt: true,\n});\n\nexport const insertLearningPathSchema = createInsertSchema(learningPaths).omit({\n  id: true,\n  createdAt: true,\n  updatedAt: true,\n});\n\nexport const insertTrackSchema = createInsertSchema(tracks).omit({\n  id: true,\n  createdAt: true,\n});\n\nexport const insertLessonSchema = createInsertSchema(lessons).omit({\n  id: true,\n  createdAt: true,\n  updatedAt: true,\n});\n\nexport const insertQuizSchema = createInsertSchema(quizzes).omit({\n  id: true,\n  createdAt: true,\n});\n\nexport const insertQuestionSchema = createInsertSchema(questions).omit({\n  id: true,\n});\n\nexport const insertAttemptSchema = createInsertSchema(attempts).omit({\n  id: true,\n  completedAt: true,\n});\n\nexport const insertInviteSchema = createInsertSchema(invites).omit({\n  id: true,\n  createdAt: true,\n  usedAt: true,\n});\n\n// Types\nexport type User = typeof users.$inferSelect;\nexport type InsertUser = z.infer<typeof insertUserSchema>;\nexport type Track = typeof tracks.$inferSelect;\nexport type InsertTrack = z.infer<typeof insertTrackSchema>;\nexport type Lesson = typeof lessons.$inferSelect;\nexport type InsertLesson = z.infer<typeof insertLessonSchema>;\nexport type Quiz = typeof quizzes.$inferSelect;\nexport type InsertQuiz = z.infer<typeof insertQuizSchema>;\nexport type Question = typeof questions.$inferSelect;\nexport type InsertQuestion = z.infer<typeof insertQuestionSchema>;\nexport type Attempt = typeof attempts.$inferSelect;\nexport type InsertAttempt = z.infer<typeof insertAttemptSchema>;\nexport type Invite = typeof invites.$inferSelect;\nexport type InsertInvite = z.infer<typeof insertInviteSchema>;\nexport type UserProgress = typeof userProgress.$inferSelect;\nexport type AiTutor = typeof aiTutors.$inferSelect;\nexport type InsertAiTutor = z.infer<typeof insertAiTutorSchema>;\nexport type PracticeScenario = typeof practiceScenarios.$inferSelect;\nexport type InsertPracticeScenario = z.infer<typeof insertPracticeScenarioSchema>;\nexport type Certificate = typeof certificates.$inferSelect;\nexport type InsertCertificate = z.infer<typeof insertCertificateSchema>;\nexport type ScenarioAttempt = typeof scenarioAttempts.$inferSelect;\nexport type InsertScenarioAttempt = z.infer<typeof insertScenarioAttemptSchema>;\nexport type Client = typeof clients.$inferSelect;\nexport type InsertClient = z.infer<typeof insertClientSchema>;\nexport type LearningPath = typeof learningPaths.$inferSelect;\nexport type InsertLearningPath = z.infer<typeof insertLearningPathSchema>;\n","size_bytes":17918},"client/src/App.tsx":{"content":"import { Switch, Route } from \"wouter\";\nimport { queryClient } from \"./lib/queryClient\";\nimport { QueryClientProvider } from \"@tanstack/react-query\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport { TooltipProvider } from \"@/components/ui/tooltip\";\nimport NotFound from \"@/pages/not-found\";\nimport Home from \"@/pages/home\";\nimport Dashboard from \"@/pages/dashboard\";\nimport TrackDetail from \"@/pages/track-detail\";\nimport LessonDetail from \"@/pages/lesson-detail\";\nimport Quiz from \"@/pages/quiz\";\nimport AdminDashboard from \"@/pages/admin-dashboard\";\nimport AdminInvites from \"@/pages/admin-invites\";\nimport AdminLessonEditor from \"@/pages/admin-lesson-editor\";\nimport Analytics from \"@/pages/analytics\";\nimport CRMDashboard from \"@/pages/crm-dashboard\";\nimport Landing from \"@/pages/landing\";\nimport TrialSignup from \"@/pages/trial-signup\";\nimport Privacy from \"@/pages/privacy\";\nimport Contact from \"@/pages/contact\";\nimport AffiliateDashboard from \"@/pages/affiliate-dashboard\";\nimport MarkdownEditor from \"@/pages/markdown-editor\";\nimport Invite from \"@/pages/invite\";\nimport SignIn from \"@/pages/signin\";\nimport DemoUsers from \"@/pages/demo-users\";\nimport ProfileSettings from \"@/pages/profile-settings\";\nimport LearningPath from \"@/pages/learning-path\";\nimport ChatLaura from \"@/pages/chat-laura\";\nimport Operations from \"@/pages/operations\";\nimport Tracks from \"@/pages/tracks\";\nimport Terms from \"@/pages/terms\";\nimport ProfessionalExams from \"@/pages/professional-exams\";\nimport ExamInterface from \"@/pages/exam-interface\";\n\nfunction Router() {\n  return (\n    <Switch>\n      <Route path=\"/\" component={Landing} />\n      <Route path=\"/home\" component={Home} />\n      <Route path=\"/trial-signup\" component={TrialSignup} />\n      <Route path=\"/login\" component={SignIn} />\n      <Route path=\"/dashboard\" component={ProfessionalExams} />\n      <Route path=\"/exams\" component={ProfessionalExams} />\n      <Route path=\"/exams/:slug/start\" component={ExamInterface} />\n      <Route path=\"/exams/:slug/results\" component={ExamInterface} />\n      <Route path=\"/tracks/:slug\" component={TrackDetail} />\n      <Route path=\"/lessons/:id\" component={LessonDetail} />\n      <Route path=\"/lessons/:id/quiz\" component={Quiz} />\n      <Route path=\"/admin\" component={AdminDashboard} />\n      <Route path=\"/admin/invites\" component={AdminInvites} />\n      <Route path=\"/admin/lessons/:id\" component={AdminLessonEditor} />\n      <Route path=\"/analytics\" component={Analytics} />\n      <Route path=\"/crm\" component={CRMDashboard} />\n      <Route path=\"/privacy\" component={Privacy} />\n      <Route path=\"/contact\" component={Contact} />\n      <Route path=\"/affiliate\" component={AffiliateDashboard} />\n      <Route path=\"/markdown-editor\" component={MarkdownEditor} />\n      <Route path=\"/invite/:token\" component={Invite} />\n      <Route path=\"/signin\" component={SignIn} />\n      <Route path=\"/demo-users\" component={DemoUsers} />\n      <Route path=\"/profile-settings\" component={ProfileSettings} />\n      <Route path=\"/learning-path\" component={LearningPath} />\n      <Route path=\"/chat/laura\" component={ChatLaura} />\n      <Route path=\"/operations\" component={Operations} />\n      <Route path=\"/tracks\" component={Tracks} />\n      <Route path=\"/terms\" component={Terms} />\n      <Route component={NotFound} />\n    </Switch>\n  );\n}\n\nfunction App() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <TooltipProvider>\n        <Toaster />\n        <Router />\n      </TooltipProvider>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n","size_bytes":3556},"client/src/index.css":{"content":"@import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap');\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n:root {\n  --background: hsl(0 0% 100%);\n  --foreground: hsl(215 16% 46%);\n  --card: hsl(180 6.6667% 97.0588%);\n  --card-foreground: hsl(215 16% 46%);\n  --popover: hsl(0 0% 100%);\n  --popover-foreground: hsl(215 16% 46%);\n  --primary: hsl(214 100% 40%);\n  --primary-foreground: hsl(0 0% 100%);\n  --secondary: hsl(215 16% 46%);\n  --secondary-foreground: hsl(0 0% 100%);\n  --muted: hsl(240 1.9608% 90%);\n  --muted-foreground: hsl(215 16% 46%);\n  --accent: hsl(214 30% 95%);\n  --accent-foreground: hsl(214 100% 40%);\n  --destructive: hsl(356.3033 90.5579% 54.3137%);\n  --destructive-foreground: hsl(0 0% 100%);\n  --border: hsl(214 32% 91%);\n  --input: hsl(214 32% 97%);\n  --ring: hsl(214 100% 40%);\n  --chart-1: hsl(214 100% 40%);\n  --chart-2: hsl(159.7826 100% 36.0784%);\n  --chart-3: hsl(42.0290 92.8251% 56.2745%);\n  --chart-4: hsl(147.1429 78.5047% 41.9608%);\n  --chart-5: hsl(341.4894 75.2000% 50.9804%);\n  --sidebar: hsl(180 6.6667% 97.0588%);\n  --sidebar-foreground: hsl(215 16% 46%);\n  --sidebar-primary: hsl(214 100% 40%);\n  --sidebar-primary-foreground: hsl(0 0% 100%);\n  --sidebar-accent: hsl(214 30% 95%);\n  --sidebar-accent-foreground: hsl(214 100% 40%);\n  --sidebar-border: hsl(214 32% 91%);\n  --sidebar-ring: hsl(214 100% 40%);\n  --font-sans: Inter, system-ui, sans-serif;\n  --font-serif: Georgia, serif;\n  --font-mono: Menlo, monospace;\n  --radius: 0.5rem;\n  --primary-50: hsl(214 100% 97%);\n  --primary-100: hsl(214 95% 93%);\n  --primary-500: hsl(214 100% 40%);\n  --primary-600: hsl(214 84% 32%);\n  --primary-700: hsl(214 69% 27%);\n  --ocean-50: hsl(158 100% 96%);\n  --ocean-100: hsl(158 84% 86%);\n  --ocean-500: hsl(158 64% 52%);\n  --ocean-600: hsl(158 64% 42%);\n  --ocean-700: hsl(158 84% 32%);\n  --yellow-50: hsl(54 100% 96%);\n  --yellow-100: hsl(54 92% 88%);\n  --yellow-600: hsl(43 96% 56%);\n  --yellow-700: hsl(36 90% 48%);\n  --green-50: hsl(138 76% 97%);\n  --green-100: hsl(141 84% 93%);\n  --green-600: hsl(142 71% 45%);\n  --green-700: hsl(142 81% 36%);\n  --red-600: hsl(356 90% 54%);\n  --red-700: hsl(356 85% 45%);\n}\n\n.dark {\n  --background: hsl(0 0% 0%);\n  --foreground: hsl(200 6.6667% 91.1765%);\n  --card: hsl(228 9.8039% 10%);\n  --card-foreground: hsl(0 0% 85.0980%);\n  --popover: hsl(0 0% 0%);\n  --popover-foreground: hsl(200 6.6667% 91.1765%);\n  --primary: hsl(214 100% 50%);\n  --primary-foreground: hsl(0 0% 100%);\n  --secondary: hsl(195.0000 15.3846% 94.9020%);\n  --secondary-foreground: hsl(215 16% 46%);\n  --muted: hsl(0 0% 9.4118%);\n  --muted-foreground: hsl(210 3.3898% 46.2745%);\n  --accent: hsl(214 70% 7%);\n  --accent-foreground: hsl(214 100% 50%);\n  --destructive: hsl(356 90% 54%);\n  --destructive-foreground: hsl(0 0% 100%);\n  --border: hsl(210 5.2632% 14.9020%);\n  --input: hsl(207 27% 18%);\n  --ring: hsl(214 100% 50%);\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n\n  body {\n    @apply font-sans antialiased bg-background text-foreground;\n  }\n}\n\n.primary-50 { background-color: var(--primary-50); }\n.primary-100 { background-color: var(--primary-100); }\n.primary-500 { background-color: var(--primary-500); }\n.primary-600 { background-color: var(--primary-600); }\n.primary-700 { background-color: var(--primary-700); }\n.ocean-50 { background-color: var(--ocean-50); }\n.ocean-100 { background-color: var(--ocean-100); }\n.ocean-500 { background-color: var(--ocean-500); }\n.ocean-600 { background-color: var(--ocean-600); }\n.ocean-700 { background-color: var(--ocean-700); }\n.yellow-50 { background-color: var(--yellow-50); }\n.yellow-100 { background-color: var(--yellow-100); }\n.yellow-600 { background-color: var(--yellow-600); }\n.yellow-700 { background-color: var(--yellow-700); }\n.green-50 { background-color: var(--green-50); }\n.green-100 { background-color: var(--green-100); }\n.green-600 { background-color: var(--green-600); }\n.green-700 { background-color: var(--green-700); }\n\n.text-primary-50 { color: var(--primary-50); }\n.text-primary-100 { color: var(--primary-100); }\n.text-primary-500 { color: var(--primary-500); }\n.text-primary-600 { color: var(--primary-600); }\n.text-primary-700 { color: var(--primary-700); }\n.text-ocean-50 { color: var(--ocean-50); }\n.text-ocean-100 { color: var(--ocean-100); }\n.text-ocean-500 { color: var(--ocean-500); }\n.text-ocean-600 { color: var(--ocean-600); }\n.text-ocean-700 { color: var(--ocean-700); }\n.text-yellow-50 { color: var(--yellow-50); }\n.text-yellow-100 { color: var(--yellow-100); }\n.text-yellow-600 { color: var(--yellow-600); }\n.text-yellow-700 { color: var(--yellow-700); }\n.text-green-50 { color: var(--green-50); }\n.text-green-100 { color: var(--green-100); }\n.text-green-600 { color: var(--green-600); }\n.text-green-700 { color: var(--green-700); }\n\n.border-primary-50 { border-color: var(--primary-50); }\n.border-primary-100 { border-color: var(--primary-100); }\n.border-primary-200 { border-color: hsl(214 90% 85%); }\n.border-primary-500 { border-color: var(--primary-500); }\n.border-primary-600 { border-color: var(--primary-600); }\n.border-primary-700 { border-color: var(--primary-700); }\n.border-ocean-50 { border-color: var(--ocean-50); }\n.border-ocean-100 { border-color: var(--ocean-100); }\n.border-ocean-500 { border-color: var(--ocean-500); }\n.border-ocean-600 { border-color: var(--ocean-600); }\n.border-ocean-700 { border-color: var(--ocean-700); }\n\n.bg-primary-50 { background-color: var(--primary-50); }\n.bg-primary-100 { background-color: var(--primary-100); }\n.bg-primary-500 { background-color: var(--primary-500); }\n.bg-primary-600 { background-color: var(--primary-600); }\n.bg-primary-700 { background-color: var(--primary-700); }\n.bg-ocean-50 { background-color: var(--ocean-50); }\n.bg-ocean-100 { background-color: var(--ocean-100); }\n.bg-ocean-500 { background-color: var(--ocean-500); }\n.bg-ocean-600 { background-color: var(--ocean-600); }\n.bg-ocean-700 { background-color: var(--ocean-700); }\n.bg-yellow-50 { background-color: var(--yellow-50); }\n.bg-yellow-100 { background-color: var(--yellow-100); }\n.bg-yellow-600 { background-color: var(--yellow-600); }\n.bg-yellow-700 { background-color: var(--yellow-700); }\n.bg-green-50 { background-color: var(--green-50); }\n.bg-green-100 { background-color: var(--green-100); }\n.bg-green-600 { background-color: var(--green-600); }\n.bg-green-700 { background-color: var(--green-700); }\n\n.hover\\:bg-primary-600:hover { background-color: var(--primary-600); }\n.hover\\:bg-ocean-600:hover { background-color: var(--ocean-600); }\n.hover\\:text-primary-700:hover { color: var(--primary-700); }\n.hover\\:text-ocean-700:hover { color: var(--ocean-700); }\n.hover\\:border-primary-400:hover { border-color: hsl(214 80% 60%); }\n","size_bytes":6754},"client/src/main.tsx":{"content":"import { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n\ncreateRoot(document.getElementById(\"root\")!).render(<App />);\n","size_bytes":157},"client/src/components/hero-section.tsx":{"content":"import { Button } from \"@/components/ui/button\";\nimport { Link } from \"wouter\";\n\nexport default function HeroSection() {\n  return (\n    <section className=\"bg-gradient-to-br from-primary-50 to-ocean-50 rounded-2xl p-8 mb-8\">\n      <div className=\"flex flex-col lg:flex-row items-center justify-between\">\n        <div className=\"lg:w-2/3 mb-6 lg:mb-0\">\n          <h2 className=\"text-3xl lg:text-4xl font-bold text-slate-900 mb-4\">\n            Professional Diving Education Platform\n          </h2>\n          <p className=\"text-lg text-slate-600 mb-6 max-w-2xl\">\n            Master diving physiology, decompression theory, and advanced techniques through comprehensive tracks designed by industry experts.\n          </p>\n          <div className=\"flex flex-wrap gap-4\">\n            <Button \n              className=\"bg-primary-500 hover:bg-primary-600 text-white px-6 py-3 rounded-lg font-semibold\"\n              data-testid=\"button-start-learning\"\n            >\n              Start Learning\n            </Button>\n            <Link href=\"/dashboard\">\n              <Button \n                variant=\"outline\" \n                className=\"border border-slate-300 hover:border-slate-400 text-slate-700 px-6 py-3 rounded-lg font-semibold\"\n                data-testid=\"button-view-progress\"\n              >\n                View Progress\n              </Button>\n            </Link>\n          </div>\n        </div>\n        <div className=\"lg:w-1/3\">\n          <img \n            src=\"https://images.unsplash.com/photo-1583212292454-1fe6229603b7?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=800&h=600\" \n            alt=\"Professional diver underwater\" \n            className=\"rounded-xl shadow-lg w-full h-auto\"\n            data-testid=\"img-hero\"\n          />\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":1840},"client/src/components/navigation.tsx":{"content":"import { Link, useLocation } from \"wouter\";\nimport { LayoutDashboard, BookOpen, BarChart3, ChevronDown } from \"lucide-react\";\nimport { DropdownMenu, DropdownMenuContent, DropdownMenuItem, DropdownMenuTrigger } from \"@/components/ui/dropdown-menu\";\nimport { Button } from \"@/components/ui/button\";\nimport diverWellLogo from \"@assets/DIVER_WELL_TRAINING-500x500-rbg-preview_1756088331820.png\";\nimport UserProfileDropdown from \"@/components/user-profile-dropdown\";\nimport LauraAssistant from \"@/components/laura-assistant\";\n\nexport default function Navigation() {\n  const [location] = useLocation();\n\n  const isMoreMenuActive = [\"/admin\", \"/markdown-editor\", \"/learning-path\", \"/operations\", \"/crm\", \"/analytics\"].some(path => \n    location === path || location.startsWith(path)\n  );\n\n  return (\n    <nav className=\"bg-white border-b border-gray-200 sticky top-0 z-50\" data-testid=\"navigation\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"flex justify-between items-center h-16\">\n          <div className=\"flex items-center space-x-8\">\n            <Link href=\"/\" data-testid=\"link-home\">\n              <a className=\"flex items-center space-x-3\">\n                <img \n                  src={diverWellLogo} \n                  alt=\"Professional Diver - Diver Well Training\" \n                  className=\"w-10 h-10 rounded-lg\"\n                />\n                <div>\n                  <h1 className=\"text-lg font-bold text-slate-900\">Professional Diver</h1>\n                  <p className=\"text-xs text-slate-500\">Diver Well Training</p>\n                </div>\n              </a>\n            </Link>\n            <div className=\"hidden md:flex space-x-6\">\n              <Link href=\"/dashboard\" data-testid=\"link-dashboard\">\n                <a className={`font-medium transition-colors ${\n                  location === \"/dashboard\" \n                    ? \"text-slate-900\" \n                    : \"text-slate-600 hover:text-slate-900\"\n                }`}>\n                  Professional Exams\n                </a>\n              </Link>\n              <Link href=\"/tracks\" data-testid=\"link-tracks\">\n                <a className={`font-medium transition-colors ${\n                  location === \"/tracks\" \n                    ? \"text-slate-900\" \n                    : \"text-slate-600 hover:text-slate-900\"\n                }`}>\n                  Study Materials\n                </a>\n              </Link>\n              \n              {/* More Menu Dropdown */}\n              <DropdownMenu>\n                <DropdownMenuTrigger asChild>\n                  <Button \n                    variant=\"ghost\" \n                    className={`font-medium transition-colors px-0 h-auto ${\n                      isMoreMenuActive \n                        ? \"text-slate-900\" \n                        : \"text-slate-600 hover:text-slate-900\"\n                    }`}\n                    data-testid=\"button-more-menu\"\n                  >\n                    More <ChevronDown className=\"w-4 h-4 ml-1\" />\n                  </Button>\n                </DropdownMenuTrigger>\n                <DropdownMenuContent align=\"start\" className=\"w-56\">\n                  <DropdownMenuItem asChild>\n                    <Link href=\"/crm\" data-testid=\"link-crm\">\n                      <a className=\"w-full flex items-center space-x-2\">\n                        <BarChart3 className=\"w-4 h-4\" />\n                        <span>CRM</span>\n                      </a>\n                    </Link>\n                  </DropdownMenuItem>\n                  <DropdownMenuItem asChild>\n                    <Link href=\"/analytics\" data-testid=\"link-analytics\">\n                      <a className=\"w-full flex items-center space-x-2\">\n                        <BarChart3 className=\"w-4 h-4\" />\n                        <span>Analytics</span>\n                      </a>\n                    </Link>\n                  </DropdownMenuItem>\n                  <DropdownMenuItem asChild>\n                    <Link href=\"/admin\" data-testid=\"link-admin\">\n                      <a className=\"w-full flex items-center space-x-2\">\n                        <LayoutDashboard className=\"w-4 h-4\" />\n                        <span>Admin</span>\n                      </a>\n                    </Link>\n                  </DropdownMenuItem>\n                  <DropdownMenuItem asChild>\n                    <Link href=\"/markdown-editor\" data-testid=\"link-markdown-editor\">\n                      <a className=\"w-full flex items-center space-x-2\">\n                        <BookOpen className=\"w-4 h-4\" />\n                        <span>Content Editor</span>\n                      </a>\n                    </Link>\n                  </DropdownMenuItem>\n                  <DropdownMenuItem asChild>\n                    <Link href=\"/learning-path\" data-testid=\"link-learning-path\">\n                      <a className=\"w-full flex items-center space-x-2\">\n                        <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z\"/>\n                        </svg>\n                        <span>AI Learning Path</span>\n                      </a>\n                    </Link>\n                  </DropdownMenuItem>\n                  <DropdownMenuItem asChild>\n                    <Link href=\"/operations\" data-testid=\"link-operations\">\n                      <a className=\"w-full flex items-center space-x-2\">\n                        <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M19.428 15.428a2 2 0 00-1.022-.547l-2.387-.477a6 6 0 00-3.86.517l-.318.158a6 6 0 01-3.86.517L6.05 15.21a2 2 0 00-1.806.547M8 4h8l-1 1v5.172a2 2 0 00.586 1.414l5 5c1.26 1.26.367 3.414-1.415 3.414H4.828c-1.782 0-2.674-2.154-1.414-3.414l5-5A2 2 0 009 10.172V5L8 4z\"/>\n                        </svg>\n                        <span>Operations</span>\n                      </a>\n                    </Link>\n                  </DropdownMenuItem>\n                  \n                  <div className=\"border-t my-2\"></div>\n                  \n                  {/* Platform Links */}\n                  <DropdownMenuItem asChild>\n                    <Link href=\"/tracks\" data-testid=\"link-tracks-menu\">\n                      <a className=\"w-full flex items-center space-x-2\">\n                        <BookOpen className=\"w-4 h-4\" />\n                        <span>Learning Tracks</span>\n                      </a>\n                    </Link>\n                  </DropdownMenuItem>\n                  {/* Removed Free Trial and Login - these are for public access, not dashboard users */}\n                  \n                  <div className=\"border-t my-2\"></div>\n                  \n                  {/* Legal Links */}\n                  <DropdownMenuItem asChild>\n                    <Link href=\"/privacy\" data-testid=\"link-privacy\">\n                      <a className=\"w-full flex items-center space-x-2\">\n                        <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z\"/>\n                        </svg>\n                        <span>Privacy Policy</span>\n                      </a>\n                    </Link>\n                  </DropdownMenuItem>\n                  <DropdownMenuItem asChild>\n                    <Link href=\"/terms\" data-testid=\"link-terms\">\n                      <a className=\"w-full flex items-center space-x-2\">\n                        <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\"/>\n                        </svg>\n                        <span>Terms of Service</span>\n                      </a>\n                    </Link>\n                  </DropdownMenuItem>\n                  <DropdownMenuItem asChild>\n                    <button \n                      onClick={() => {\n                        const subject = encodeURIComponent('Data Request - Professional Diver Platform');\n                        const body = encodeURIComponent('Please specify what data you would like to request:\\n\\n1. Account information\\n2. Learning progress data\\n3. Billing history\\n4. Account deletion\\n5. Data export\\n\\nPlease provide details about your request:');\n                        window.open(`mailto:privacy@diverwell.app?subject=${subject}&body=${body}`, '_blank');\n                      }}\n                      className=\"w-full flex items-center space-x-2 text-left\"\n                    >\n                      <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\"/>\n                      </svg>\n                      <span>Data Requests</span>\n                    </button>\n                  </DropdownMenuItem>\n                  <DropdownMenuItem asChild>\n                    <Link href=\"/chat/laura\" data-testid=\"link-support-laura\">\n                      <a className=\"w-full flex items-center space-x-2\">\n                        <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M8.228 9c.549-1.165 2.03-2 3.772-2 2.21 0 4 1.343 4 3 0 1.4-1.278 2.575-3.006 2.907-.542.104-.994.54-.994 1.093m0 3h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n                        </svg>\n                        <span>Support (Chat with Laura)</span>\n                      </a>\n                    </Link>\n                  </DropdownMenuItem>\n                </DropdownMenuContent>\n              </DropdownMenu>\n            </div>\n          </div>\n          <div className=\"flex items-center space-x-4\">\n            <Link href=\"/affiliate\" data-testid=\"link-partners\">\n              <a className=\"text-slate-600 hover:text-slate-900 font-medium\">\n                Partners\n              </a>\n            </Link>\n            {/* Removed duplicate AI Consultant - Laura handles all AI assistance */}\n            <UserProfileDropdown />\n          </div>\n          \n          {/* Fixed position Laura Assistant */}\n          <LauraAssistant />\n        </div>\n      </div>\n    </nav>\n  );\n}","size_bytes":11102},"client/src/components/quiz-question.tsx":{"content":"import { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { ChevronLeft, ChevronRight } from \"lucide-react\";\n\ninterface QuizQuestionProps {\n  question: {\n    id: string;\n    prompt: string;\n    a: string;\n    b: string;\n    c: string;\n    d: string;\n    order: number;\n  };\n  currentQuestion: number;\n  totalQuestions: number;\n  selectedAnswer: string | null;\n  onAnswerSelect: (answer: string) => void;\n  onPrevious: () => void;\n  onNext: () => void;\n  onSubmit: () => void;\n  canGoNext: boolean;\n  canGoPrevious: boolean;\n  isLastQuestion: boolean;\n}\n\nexport default function QuizQuestion({\n  question,\n  currentQuestion,\n  totalQuestions,\n  selectedAnswer,\n  onAnswerSelect,\n  onPrevious,\n  onNext,\n  onSubmit,\n  canGoNext,\n  canGoPrevious,\n  isLastQuestion\n}: QuizQuestionProps) {\n  const progressPercentage = (currentQuestion / totalQuestions) * 100;\n  const options = [\n    { key: 'a', text: question.a },\n    { key: 'b', text: question.b },\n    { key: 'c', text: question.c },\n    { key: 'd', text: question.d }\n  ];\n\n  return (\n    <div className=\"p-6\">\n      {/* Progress indicator */}\n      <div className=\"mb-6\">\n        <div className=\"flex items-center justify-between mb-2\">\n          <span className=\"text-sm font-medium text-slate-700\" data-testid=\"text-question-progress\">\n            Question {currentQuestion} of {totalQuestions}\n          </span>\n          <span className=\"text-sm text-slate-500\" data-testid=\"text-completion-percentage\">\n            {Math.round(progressPercentage)}% Complete\n          </span>\n        </div>\n        <div className=\"w-full bg-gray-200 rounded-full h-2\">\n          <div \n            className=\"bg-primary-500 h-2 rounded-full transition-all\" \n            style={{ width: `${progressPercentage}%` }}\n            data-testid=\"progress-bar\"\n          ></div>\n        </div>\n      </div>\n\n      {/* Question */}\n      <div className=\"mb-8\">\n        <h3 className=\"text-lg font-semibold text-slate-900 mb-4\" data-testid=\"text-question-prompt\">\n          {question.prompt}\n        </h3>\n        \n        <div className=\"space-y-3\">\n          {options.map((option) => (\n            <label \n              key={option.key}\n              className={`flex items-center p-4 border rounded-lg cursor-pointer transition-colors ${\n                selectedAnswer === option.key\n                  ? \"border-primary-200 bg-primary-50\"\n                  : \"border-gray-200 hover:bg-gray-50\"\n              }`}\n              data-testid={`option-${option.key}`}\n            >\n              <input \n                type=\"radio\" \n                name={`question-${question.id}`}\n                value={option.key}\n                checked={selectedAnswer === option.key}\n                onChange={() => onAnswerSelect(option.key)}\n                className=\"sr-only\"\n              />\n              <div className={`flex items-center justify-center w-5 h-5 border-2 rounded-full mr-4 ${\n                selectedAnswer === option.key\n                  ? \"border-primary-500\"\n                  : \"border-gray-300\"\n              }`}>\n                {selectedAnswer === option.key && (\n                  <div className=\"w-2 h-2 bg-primary-500 rounded-full\"></div>\n                )}\n              </div>\n              <span className={`text-slate-700 ${selectedAnswer === option.key ? 'font-medium' : ''}`}>\n                {option.text}\n              </span>\n            </label>\n          ))}\n        </div>\n      </div>\n\n      {/* Navigation */}\n      <div className=\"flex items-center justify-between\">\n        <Button \n          variant=\"outline\"\n          onClick={onPrevious}\n          disabled={!canGoPrevious}\n          className=\"flex items-center\"\n          data-testid=\"button-previous\"\n        >\n          <ChevronLeft className=\"w-4 h-4 mr-2\" />\n          Previous\n        </Button>\n        \n        <div className=\"flex space-x-2\">\n          {Array.from({ length: totalQuestions }, (_, i) => (\n            <button\n              key={i}\n              className={`w-8 h-8 rounded-full text-sm font-medium ${\n                i + 1 < currentQuestion\n                  ? \"bg-ocean-500 text-white\"\n                  : i + 1 === currentQuestion\n                  ? \"bg-primary-500 text-white\"\n                  : \"border border-gray-300 text-slate-600 hover:border-gray-400\"\n              }`}\n              data-testid={`button-question-${i + 1}`}\n            >\n              {i + 1}\n            </button>\n          ))}\n        </div>\n        \n        {isLastQuestion ? (\n          <Button \n            onClick={onSubmit}\n            disabled={!selectedAnswer}\n            className=\"bg-ocean-500 hover:bg-ocean-600 text-white\"\n            data-testid=\"button-submit\"\n          >\n            Submit Quiz\n          </Button>\n        ) : (\n          <Button \n            onClick={onNext}\n            disabled={!canGoNext}\n            className=\"flex items-center bg-primary-500 hover:bg-primary-600 text-white\"\n            data-testid=\"button-next\"\n          >\n            Next\n            <ChevronRight className=\"w-4 h-4 ml-2\" />\n          </Button>\n        )}\n      </div>\n    </div>\n  );\n}\n","size_bytes":5159},"client/src/components/track-card.tsx":{"content":"import { Button } from \"@/components/ui/button\";\nimport { BookOpen, CheckCircle } from \"lucide-react\";\nimport { Link } from \"wouter\";\n\ninterface TrackCardProps {\n  track: {\n    id: string;\n    title: string;\n    slug: string;\n    summary: string | null;\n    isPublished: boolean;\n  };\n  progress?: {\n    completed: number;\n    total: number;\n  };\n  isLocked?: boolean;\n}\n\nexport default function TrackCard({ track, progress, isLocked }: TrackCardProps) {\n  const progressPercentage = progress ? (progress.completed / progress.total) * 100 : 0;\n\n  return (\n    <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 overflow-hidden hover:shadow-md transition-shadow\" data-testid={`card-track-${track.id}`}>\n      <div className=\"p-6\">\n        <div className=\"flex items-start justify-between mb-4\">\n          <div className=\"flex-1\">\n            <h3 className=\"text-xl font-semibold text-slate-900 mb-2\" data-testid={`text-track-title-${track.id}`}>\n              {track.title}\n            </h3>\n            <p className=\"text-slate-600 text-sm mb-4\" data-testid={`text-track-summary-${track.id}`}>\n              {track.summary}\n            </p>\n          </div>\n          <div className=\"flex items-center space-x-2\">\n            <span className={`px-2 py-1 text-xs font-medium rounded-full ${\n              isLocked \n                ? \"bg-gray-100 text-gray-700\" \n                : \"bg-ocean-100 text-ocean-700\"\n            }`}>\n              {isLocked ? \"Locked\" : \"Active\"}\n            </span>\n          </div>\n        </div>\n        \n        {progress && (\n          <div className=\"mb-4\">\n            <div className=\"flex items-center justify-between mb-2\">\n              <span className=\"text-sm text-slate-600\">Progress</span>\n              <span className=\"text-sm font-medium text-slate-900\" data-testid={`text-progress-${track.id}`}>\n                {progress.completed}/{progress.total} lessons\n              </span>\n            </div>\n            <div className=\"w-full bg-gray-200 rounded-full h-2\">\n              <div \n                className={`h-2 rounded-full ${isLocked ? \"bg-gray-300\" : \"bg-primary-500\"}`}\n                style={{ width: `${progressPercentage}%` }}\n              ></div>\n            </div>\n          </div>\n        )}\n\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-4 text-sm text-slate-500\">\n            <span className=\"flex items-center\">\n              <BookOpen className=\"w-4 h-4 mr-1\" />\n              {progress?.total || 0} lessons\n            </span>\n            <span className=\"flex items-center\">\n              <CheckCircle className=\"w-4 h-4 mr-1\" />\n              3 quizzes\n            </span>\n          </div>\n          {isLocked ? (\n            <Button \n              variant=\"outline\" \n              disabled\n              className=\"text-slate-400 cursor-not-allowed text-sm\"\n              data-testid={`button-locked-${track.id}`}\n            >\n              Complete Prerequisites\n            </Button>\n          ) : (\n            <Link href={`/tracks/${track.slug}`}>\n              <Button \n                className=\"bg-primary-500 hover:bg-primary-600 text-white px-4 py-2 rounded-lg font-medium text-sm\"\n                data-testid={`button-continue-${track.id}`}\n              >\n                Continue\n              </Button>\n            </Link>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":3448},"client/src/hooks/use-mobile.tsx":{"content":"import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n","size_bytes":565},"client/src/hooks/use-toast.ts":{"content":"import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","size_bytes":3895},"client/src/lib/queryClient.ts":{"content":"import { QueryClient, QueryFunction } from \"@tanstack/react-query\";\n\nasync function throwIfResNotOk(res: Response) {\n  if (!res.ok) {\n    const text = (await res.text()) || res.statusText;\n    throw new Error(`${res.status}: ${text}`);\n  }\n}\n\nexport async function apiRequest(\n  method: string,\n  url: string,\n  data?: unknown | undefined,\n): Promise<Response> {\n  const res = await fetch(url, {\n    method,\n    headers: data ? { \"Content-Type\": \"application/json\" } : {},\n    body: data ? JSON.stringify(data) : undefined,\n    credentials: \"include\",\n  });\n\n  await throwIfResNotOk(res);\n  return res;\n}\n\ntype UnauthorizedBehavior = \"returnNull\" | \"throw\";\nexport const getQueryFn: <T>(options: {\n  on401: UnauthorizedBehavior;\n}) => QueryFunction<T> =\n  ({ on401: unauthorizedBehavior }) =>\n  async ({ queryKey }) => {\n    const res = await fetch(queryKey.join(\"/\") as string, {\n      credentials: \"include\",\n    });\n\n    if (unauthorizedBehavior === \"returnNull\" && res.status === 401) {\n      return null;\n    }\n\n    await throwIfResNotOk(res);\n    return await res.json();\n  };\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      queryFn: getQueryFn({ on401: \"throw\" }),\n      refetchInterval: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      retry: false,\n    },\n    mutations: {\n      retry: false,\n    },\n  },\n});\n","size_bytes":1383},"client/src/lib/utils.ts":{"content":"import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","size_bytes":166},"client/src/pages/admin-dashboard.tsx":{"content":"import { useQuery } from \"@tanstack/react-query\";\nimport Navigation from \"@/components/navigation\";\nimport TrialCountdown from \"@/components/trial-countdown\";\nimport { Button } from \"@/components/ui/button\";\nimport { \n  Users, \n  FileText, \n  Clock, \n  CheckCircle, \n  Eye,\n  MoreVertical \n} from \"lucide-react\";\nimport { Link } from \"wouter\";\nimport type { Invite } from \"@shared/schema\";\n\ntype DashboardStats = {\n  activeUsers: number;\n  totalLessons: number;\n  completions: { month: string; completed: number }[];\n};\n\nexport default function AdminDashboard() {\n  const { data: invites } = useQuery<Invite[]>({\n    queryKey: [\"/api/admin/invites\"],\n  });\n\n  const { data: stats } = useQuery<DashboardStats>({\n    queryKey: [\"/api/admin/stats\"],\n  });\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 text-slate-900 font-sans\">\n      <Navigation />\n      \n      <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        {/* Trial User Management */}\n        <div className=\"mb-6\">\n          <TrialCountdown \n            expiresAt={new Date(Date.now() + 24 * 60 * 60 * 1000).toISOString()} \n            showUpgradeButton={false}\n          />\n        </div>\n\n        <section className=\"mb-12\">\n          <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 overflow-hidden\">\n            <div className=\"border-b border-gray-200 px-6 py-4\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <h2 className=\"text-xl font-semibold text-slate-900\" data-testid=\"text-admin-title\">\n                    Admin Dashboard\n                  </h2>\n                  <p className=\"text-sm text-slate-500\">Manage invites, content, and user progress</p>\n                </div>\n                <div className=\"flex space-x-3\">\n                  <Link href=\"/admin/invites\">\n                    <Button \n                      className=\"bg-primary-500 hover:bg-primary-600 text-white\"\n                      data-testid=\"button-new-invite\"\n                    >\n                      New Invite\n                    </Button>\n                  </Link>\n                  <Button \n                    variant=\"outline\"\n                    data-testid=\"button-export-data\"\n                  >\n                    Export Data\n                  </Button>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"p-6\">\n              {/* Stats Cards */}\n              <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6 mb-8\">\n                <div className=\"bg-primary-50 rounded-lg p-4\">\n                  <div className=\"flex items-center\">\n                    <div className=\"p-2 bg-primary-100 rounded-lg\">\n                      <Users className=\"w-6 h-6 text-primary-600\" />\n                    </div>\n                    <div className=\"ml-4\">\n                      <p className=\"text-sm font-medium text-primary-600\">Active Users</p>\n                      <p className=\"text-2xl font-bold text-primary-900\" data-testid=\"text-active-users\">\n                        {stats?.activeUsers || 127}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n                \n                <div className=\"bg-ocean-50 rounded-lg p-4\">\n                  <div className=\"flex items-center\">\n                    <div className=\"p-2 bg-ocean-100 rounded-lg\">\n                      <FileText className=\"w-6 h-6 text-ocean-600\" />\n                    </div>\n                    <div className=\"ml-4\">\n                      <p className=\"text-sm font-medium text-ocean-600\">Lessons</p>\n                      <p className=\"text-2xl font-bold text-ocean-900\" data-testid=\"text-total-lessons\">\n                        {stats?.totalLessons || 23}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n                \n                <div className=\"bg-yellow-50 rounded-lg p-4\">\n                  <div className=\"flex items-center\">\n                    <div className=\"p-2 bg-yellow-100 rounded-lg\">\n                      <Clock className=\"w-6 h-6 text-yellow-600\" />\n                    </div>\n                    <div className=\"ml-4\">\n                      <p className=\"text-sm font-medium text-yellow-600\">Pending Invites</p>\n                      <p className=\"text-2xl font-bold text-yellow-900\" data-testid=\"text-pending-invites\">\n                        {invites?.filter((invite: any) => !invite.usedAt).length || 8}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n                \n                <div className=\"bg-green-50 rounded-lg p-4\">\n                  <div className=\"flex items-center\">\n                    <div className=\"p-2 bg-green-100 rounded-lg\">\n                      <CheckCircle className=\"w-6 h-6 text-green-600\" />\n                    </div>\n                    <div className=\"ml-4\">\n                      <p className=\"text-sm font-medium text-green-600\">Completions</p>\n                      <p className=\"text-2xl font-bold text-green-900\" data-testid=\"text-completions\">\n                        {stats?.completions?.length || 89}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              {/* Invites Management */}\n              <div className=\"mb-8\">\n                <div className=\"flex items-center justify-between mb-4\">\n                  <h3 className=\"text-lg font-semibold text-slate-900\">Recent Invites</h3>\n                  <Link href=\"/admin/invites\">\n                    <button \n                      className=\"text-primary-600 hover:text-primary-700 font-medium text-sm\"\n                      data-testid=\"button-view-all-invites\"\n                    >\n                      View All\n                    </button>\n                  </Link>\n                </div>\n                \n                <div className=\"bg-gray-50 rounded-lg overflow-hidden\">\n                  <table className=\"min-w-full\">\n                    <thead className=\"bg-gray-100\">\n                      <tr>\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                          Email\n                        </th>\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                          Status\n                        </th>\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                          Created\n                        </th>\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                          Actions\n                        </th>\n                      </tr>\n                    </thead>\n                    <tbody className=\"bg-white divide-y divide-gray-200\">\n                      {invites && invites.length > 0 ? (\n                        invites.slice(0, 3).map((invite: any) => (\n                          <tr key={invite.id} data-testid={`invite-row-${invite.id}`}>\n                            <td className=\"px-6 py-4 whitespace-nowrap\">\n                              <span className=\"text-sm font-medium text-slate-900\">\n                                {invite.email}\n                              </span>\n                            </td>\n                            <td className=\"px-6 py-4 whitespace-nowrap\">\n                              <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${\n                                invite.usedAt \n                                  ? \"bg-green-100 text-green-800\" \n                                  : \"bg-yellow-100 text-yellow-800\"\n                              }`}>\n                                {invite.usedAt ? \"Accepted\" : \"Pending\"}\n                              </span>\n                            </td>\n                            <td className=\"px-6 py-4 whitespace-nowrap text-sm text-slate-500\">\n                              {new Date(invite.createdAt).toLocaleDateString()}\n                            </td>\n                            <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium space-x-2\">\n                              {!invite.usedAt && (\n                                <>\n                                  <button \n                                    className=\"text-primary-600 hover:text-primary-900\"\n                                    data-testid={`button-copy-link-${invite.id}`}\n                                  >\n                                    Copy Link\n                                  </button>\n                                  <button \n                                    className=\"text-red-600 hover:text-red-900\"\n                                    data-testid={`button-revoke-${invite.id}`}\n                                  >\n                                    Revoke\n                                  </button>\n                                </>\n                              )}\n                            </td>\n                          </tr>\n                        ))\n                      ) : (\n                        <tr>\n                          <td colSpan={4} className=\"px-6 py-4 text-center text-slate-500\">\n                            No invites found\n                          </td>\n                        </tr>\n                      )}\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n\n              {/* Content Management */}\n              <div>\n                <div className=\"flex items-center justify-between mb-4\">\n                  <h3 className=\"text-lg font-semibold text-slate-900\">Content Management</h3>\n                  <button \n                    className=\"text-primary-600 hover:text-primary-700 font-medium text-sm\"\n                    data-testid=\"button-manage-all\"\n                  >\n                    Manage All\n                  </button>\n                </div>\n                \n                <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n                  <div className=\"border border-gray-200 rounded-lg p-4\" data-testid=\"content-card-physiology\">\n                    <div className=\"flex items-center justify-between mb-3\">\n                      <h4 className=\"font-medium text-slate-900\">Physiology Basics</h4>\n                      <span className=\"text-xs text-green-600 bg-green-100 px-2 py-1 rounded-full\">\n                        Published\n                      </span>\n                    </div>\n                    <p className=\"text-sm text-slate-600 mb-4\">5 lessons, 3 quizzes</p>\n                    <div className=\"flex space-x-2\">\n                      <button className=\"text-sm text-primary-600 hover:text-primary-700 font-medium\">\n                        Edit\n                      </button>\n                      <button className=\"text-sm text-slate-600 hover:text-slate-700\">\n                        <Eye className=\"w-4 h-4 inline mr-1\" />\n                        Preview\n                      </button>\n                    </div>\n                  </div>\n                  \n                  <div className=\"border border-gray-200 rounded-lg p-4\" data-testid=\"content-card-decompression\">\n                    <div className=\"flex items-center justify-between mb-3\">\n                      <h4 className=\"font-medium text-slate-900\">Decompression Theory</h4>\n                      <span className=\"text-xs text-yellow-600 bg-yellow-100 px-2 py-1 rounded-full\">\n                        Draft\n                      </span>\n                    </div>\n                    <p className=\"text-sm text-slate-600 mb-4\">7 lessons, 5 quizzes</p>\n                    <div className=\"flex space-x-2\">\n                      <button className=\"text-sm text-primary-600 hover:text-primary-700 font-medium\">\n                        Edit\n                      </button>\n                      <button className=\"text-sm text-ocean-600 hover:text-ocean-700\">\n                        Publish\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n      </main>\n    </div>\n  );\n}\n","size_bytes":12411},"client/src/pages/admin-invites.tsx":{"content":"import { useState } from \"react\";\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport Navigation from \"@/components/navigation\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { \n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from \"@/components/ui/dialog\";\nimport { Label } from \"@/components/ui/label\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { Copy, Plus, Trash2 } from \"lucide-react\";\nimport type { Invite } from \"@shared/schema\";\n\nexport default function AdminInvites() {\n  const [email, setEmail] = useState(\"\");\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n  const { toast } = useToast();\n  const queryClient = useQueryClient();\n\n  const { data: invites, isLoading } = useQuery<Invite[]>({\n    queryKey: [\"/api/admin/invites\"],\n  });\n\n  const createInviteMutation = useMutation({\n    mutationFn: async (inviteData: { email: string; expiresAt: Date }) => {\n      return apiRequest(\"POST\", \"/api/admin/invites\", inviteData);\n    },\n    onSuccess: () => {\n      toast({\n        title: \"Invite Created!\",\n        description: \"The invitation has been created successfully.\",\n      });\n      queryClient.invalidateQueries({ queryKey: [\"/api/admin/invites\"] });\n      setEmail(\"\");\n      setIsDialogOpen(false);\n    },\n    onError: () => {\n      toast({\n        title: \"Error\",\n        description: \"Failed to create invite. Please try again.\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const deleteInviteMutation = useMutation({\n    mutationFn: async (inviteId: string) => {\n      return apiRequest(\"DELETE\", `/api/admin/invites/${inviteId}`, undefined);\n    },\n    onSuccess: () => {\n      toast({\n        title: \"Invite Revoked\",\n        description: \"The invitation has been revoked successfully.\",\n      });\n      queryClient.invalidateQueries({ queryKey: [\"/api/admin/invites\"] });\n    },\n    onError: () => {\n      toast({\n        title: \"Error\",\n        description: \"Failed to revoke invite. Please try again.\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const handleCreateInvite = () => {\n    if (!email) return;\n\n    const expiresAt = new Date();\n    expiresAt.setDate(expiresAt.getDate() + 7); // Expires in 7 days\n\n    createInviteMutation.mutate({\n      email,\n      expiresAt,\n    });\n  };\n\n  const handleCopyInviteLink = (token: string) => {\n    const inviteUrl = `${window.location.origin}/invite/${token}`;\n    navigator.clipboard.writeText(inviteUrl);\n    toast({\n      title: \"Link Copied!\",\n      description: \"The invite link has been copied to your clipboard.\",\n    });\n  };\n\n  const handleRevokeInvite = (inviteId: string) => {\n    deleteInviteMutation.mutate(inviteId);\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 text-slate-900 font-sans\">\n      <Navigation />\n      \n      <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 overflow-hidden\">\n          <div className=\"border-b border-gray-200 px-6 py-4\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <h2 className=\"text-xl font-semibold text-slate-900\" data-testid=\"text-invites-title\">\n                  Manage Invitations\n                </h2>\n                <p className=\"text-sm text-slate-500\">Create and manage user invitations</p>\n              </div>\n              <Dialog open={isDialogOpen} onOpenChange={setIsDialogOpen}>\n                <DialogTrigger asChild>\n                  <Button \n                    className=\"bg-primary-500 hover:bg-primary-600 text-white\"\n                    data-testid=\"button-create-invite\"\n                  >\n                    <Plus className=\"w-4 h-4 mr-2\" />\n                    Create Invite\n                  </Button>\n                </DialogTrigger>\n                <DialogContent className=\"sm:max-w-[425px]\">\n                  <DialogHeader>\n                    <DialogTitle>Create New Invite</DialogTitle>\n                    <DialogDescription>\n                      Send an invitation to a new user to join the platform.\n                    </DialogDescription>\n                  </DialogHeader>\n                  <div className=\"grid gap-4 py-4\">\n                    <div className=\"grid grid-cols-4 items-center gap-4\">\n                      <Label htmlFor=\"email\" className=\"text-right\">\n                        Email\n                      </Label>\n                      <Input\n                        id=\"email\"\n                        type=\"email\"\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                        placeholder=\"user@example.com\"\n                        className=\"col-span-3\"\n                        data-testid=\"input-email\"\n                      />\n                    </div>\n                  </div>\n                  <DialogFooter>\n                    <Button \n                      type=\"submit\" \n                      onClick={handleCreateInvite}\n                      disabled={!email || createInviteMutation.isPending}\n                      data-testid=\"button-send-invite\"\n                    >\n                      {createInviteMutation.isPending ? \"Creating...\" : \"Create Invite\"}\n                    </Button>\n                  </DialogFooter>\n                </DialogContent>\n              </Dialog>\n            </div>\n          </div>\n\n          <div className=\"p-6\">\n            {isLoading ? (\n              <div className=\"space-y-4\">\n                {[1, 2, 3].map((i) => (\n                  <div key={i} className=\"animate-pulse\">\n                    <div className=\"h-16 bg-gray-200 rounded\"></div>\n                  </div>\n                ))}\n              </div>\n            ) : invites && invites.length > 0 ? (\n              <div className=\"overflow-hidden\">\n                <table className=\"min-w-full\">\n                  <thead className=\"bg-gray-50\">\n                    <tr>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                        Email\n                      </th>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                        Status\n                      </th>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                        Created\n                      </th>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                        Expires\n                      </th>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                        Actions\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody className=\"bg-white divide-y divide-gray-200\">\n                    {invites.map((invite: any) => (\n                      <tr key={invite.id} data-testid={`invite-row-${invite.id}`}>\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\n                          <span className=\"text-sm font-medium text-slate-900\" data-testid={`text-email-${invite.id}`}>\n                            {invite.email}\n                          </span>\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\n                          <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${\n                            invite.usedAt \n                              ? \"bg-green-100 text-green-800\" \n                              : new Date() > new Date(invite.expiresAt)\n                              ? \"bg-red-100 text-red-800\"\n                              : \"bg-yellow-100 text-yellow-800\"\n                          }`}>\n                            {invite.usedAt \n                              ? \"Accepted\" \n                              : new Date() > new Date(invite.expiresAt)\n                              ? \"Expired\"\n                              : \"Pending\"\n                            }\n                          </span>\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-slate-500\">\n                          {new Date(invite.createdAt).toLocaleDateString()}\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-slate-500\">\n                          {new Date(invite.expiresAt).toLocaleDateString()}\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n                          <div className=\"flex space-x-2\">\n                            {!invite.usedAt && new Date() <= new Date(invite.expiresAt) && (\n                              <button\n                                onClick={() => handleCopyInviteLink(invite.token)}\n                                className=\"inline-flex items-center text-primary-600 hover:text-primary-900\"\n                                data-testid={`button-copy-${invite.id}`}\n                              >\n                                <Copy className=\"w-4 h-4 mr-1\" />\n                                Copy Link\n                              </button>\n                            )}\n                            {!invite.usedAt && (\n                              <button\n                                onClick={() => handleRevokeInvite(invite.id)}\n                                disabled={deleteInviteMutation.isPending}\n                                className=\"inline-flex items-center text-red-600 hover:text-red-900\"\n                                data-testid={`button-delete-${invite.id}`}\n                              >\n                                <Trash2 className=\"w-4 h-4 mr-1\" />\n                                Revoke\n                              </button>\n                            )}\n                          </div>\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            ) : (\n              <div className=\"text-center py-12\">\n                <p className=\"text-slate-500\" data-testid=\"text-no-invites\">\n                  No invitations found. Create your first invite to get started.\n                </p>\n              </div>\n            )}\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n}\n","size_bytes":10744},"client/src/pages/admin-lesson-editor.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { useRoute } from \"wouter\";\nimport Navigation from \"@/components/navigation\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Label } from \"@/components/ui/label\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { ChevronLeft, Save, Eye, Hash, Link, Bold, Italic } from \"lucide-react\";\nimport { Link as RouterLink } from \"wouter\";\nimport EnhancedMarkdownEditor from \"@/components/enhanced-markdown-editor\";\nimport type { Lesson, Track } from \"@shared/schema\";\n\nexport default function AdminLessonEditor() {\n  const [, params] = useRoute(\"/admin/lessons/:id\");\n  const [title, setTitle] = useState(\"\");\n  const [order, setOrder] = useState(1);\n  const [content, setContent] = useState(\"\");\n  const [trackId, setTrackId] = useState(\"\");\n  const { toast } = useToast();\n  const queryClient = useQueryClient();\n\n  const { data: lesson, isLoading } = useQuery<Lesson>({\n    queryKey: [\"/api/lessons\", params?.id],\n    enabled: !!params?.id,\n  });\n\n  const { data: tracks } = useQuery<Track[]>({\n    queryKey: [\"/api/tracks\"],\n  });\n\n  // Initialize form when lesson data loads\n  useEffect(() => {\n    if (lesson) {\n      setTitle(lesson.title || \"\");\n      setOrder(lesson.order || 1);\n      setContent(lesson.content || \"\");\n      setTrackId(lesson.trackId || \"\");\n    }\n  }, [lesson]);\n\n  const updateLessonMutation = useMutation({\n    mutationFn: async (lessonData: any) => {\n      return apiRequest(\"PATCH\", `/api/lessons/${params?.id}`, lessonData);\n    },\n    onSuccess: () => {\n      toast({\n        title: \"Lesson Updated!\",\n        description: \"The lesson has been saved successfully.\",\n      });\n      queryClient.invalidateQueries({ queryKey: [\"/api/lessons\", params?.id] });\n    },\n    onError: () => {\n      toast({\n        title: \"Error\",\n        description: \"Failed to update lesson. Please try again.\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const handleSave = () => {\n    updateLessonMutation.mutate({\n      title,\n      order,\n      content,\n      trackId,\n    });\n  };\n\n\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 text-slate-900 font-sans\">\n        <Navigation />\n        <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n          <div className=\"animate-pulse\">\n            <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 overflow-hidden\">\n              <div className=\"border-b border-gray-200 px-6 py-4\">\n                <div className=\"h-6 bg-gray-200 rounded w-1/3\"></div>\n              </div>\n              <div className=\"p-6 space-y-6\">\n                <div className=\"h-10 bg-gray-200 rounded\"></div>\n                <div className=\"grid grid-cols-2 gap-6\">\n                  <div className=\"h-10 bg-gray-200 rounded\"></div>\n                  <div className=\"h-10 bg-gray-200 rounded\"></div>\n                </div>\n                <div className=\"h-96 bg-gray-200 rounded\"></div>\n              </div>\n            </div>\n          </div>\n        </main>\n      </div>\n    );\n  }\n\n  if (!lesson) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 text-slate-900 font-sans\">\n        <Navigation />\n        <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n          <div className=\"text-center py-12\">\n            <p className=\"text-slate-500\" data-testid=\"text-lesson-not-found\">\n              Lesson not found\n            </p>\n          </div>\n        </main>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 text-slate-900 font-sans\">\n      <Navigation />\n      \n      <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        <section className=\"bg-white rounded-xl shadow-sm border border-gray-200 overflow-hidden\">\n          <div className=\"border-b border-gray-200 px-6 py-4\">\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center space-x-4\">\n                <RouterLink href=\"/admin\">\n                  <button className=\"text-slate-500 hover:text-slate-700\" data-testid=\"button-back\">\n                    <ChevronLeft className=\"w-5 h-5\" />\n                  </button>\n                </RouterLink>\n                <div>\n                  <h2 className=\"text-xl font-semibold text-slate-900\" data-testid=\"text-editor-title\">\n                    Edit Lesson: {title || lesson.title}\n                  </h2>\n                  <p className=\"text-sm text-slate-500\">\n                    Lesson {order}\n                  </p>\n                </div>\n              </div>\n              <div className=\"flex space-x-3\">\n                <Button \n                  onClick={handleSave}\n                  disabled={updateLessonMutation.isPending}\n                  className=\"bg-primary-500 hover:bg-primary-600 text-white\"\n                  data-testid=\"button-save\"\n                >\n                  <Save className=\"w-4 h-4 mr-2\" />\n                  {updateLessonMutation.isPending ? \"Saving...\" : \"Save Changes\"}\n                </Button>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"p-6\">\n            <form className=\"space-y-6\" onSubmit={(e) => { e.preventDefault(); handleSave(); }}>\n              {/* Title Field */}\n              <div>\n                <Label htmlFor=\"title\" className=\"block text-sm font-medium text-slate-700 mb-2\">\n                  Lesson Title\n                </Label>\n                <Input \n                  id=\"title\"\n                  type=\"text\" \n                  value={title}\n                  onChange={(e) => setTitle(e.target.value)}\n                  className=\"w-full\"\n                  placeholder=\"Enter lesson title\"\n                  data-testid=\"input-title\"\n                />\n              </div>\n\n              {/* Order and Track Fields */}\n              <div className=\"grid grid-cols-2 gap-6\">\n                <div>\n                  <Label htmlFor=\"order\" className=\"block text-sm font-medium text-slate-700 mb-2\">\n                    Lesson Order\n                  </Label>\n                  <Input \n                    id=\"order\"\n                    type=\"number\" \n                    value={order}\n                    onChange={(e) => setOrder(parseInt(e.target.value) || 1)}\n                    className=\"w-full\"\n                    min=\"1\"\n                    data-testid=\"input-order\"\n                  />\n                </div>\n                <div>\n                  <Label className=\"block text-sm font-medium text-slate-700 mb-2\">\n                    Track\n                  </Label>\n                  <Select value={trackId} onValueChange={setTrackId}>\n                    <SelectTrigger data-testid=\"select-track\">\n                      <SelectValue placeholder=\"Select a track\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                      {tracks?.map((track: any) => (\n                        <SelectItem key={track.id} value={track.id}>\n                          {track.title}\n                        </SelectItem>\n                      ))}\n                    </SelectContent>\n                  </Select>\n                </div>\n              </div>\n\n              {/* Enhanced Content Editor */}\n              <div>\n                <Label className=\"block text-sm font-medium text-slate-700 mb-2\">\n                  Lesson Content\n                </Label>\n                <EnhancedMarkdownEditor\n                  value={content}\n                  onChange={setContent}\n                  placeholder=\"Write your lesson content using Markdown. Use the toolbar for quick formatting or keyboard shortcuts like Ctrl+B for bold.\"\n                  height=\"600px\"\n                  showWordCount={true}\n                  showPreview={true}\n                />\n              </div>\n\n              {/* Action buttons */}\n              <div className=\"flex items-center justify-between pt-6 border-t border-gray-200\">\n                <RouterLink href=\"/admin\">\n                  <Button \n                    type=\"button\" \n                    variant=\"ghost\"\n                    data-testid=\"button-cancel\"\n                  >\n                    Cancel\n                  </Button>\n                </RouterLink>\n                <div className=\"space-x-3\">\n                  <Button \n                    type=\"button\" \n                    variant=\"outline\"\n                    data-testid=\"button-save-draft\"\n                  >\n                    Save as Draft\n                  </Button>\n                  <Button \n                    type=\"submit\"\n                    disabled={updateLessonMutation.isPending}\n                    className=\"bg-primary-500 hover:bg-primary-600 text-white\"\n                    data-testid=\"button-publish\"\n                  >\n                    {updateLessonMutation.isPending ? \"Publishing...\" : \"Publish Changes\"}\n                  </Button>\n                </div>\n              </div>\n            </form>\n          </div>\n        </section>\n      </main>\n    </div>\n  );\n}\n","size_bytes":9385},"client/src/pages/dashboard.tsx":{"content":"import { useQuery } from \"@tanstack/react-query\";\nimport Navigation from \"@/components/navigation\";\nimport UserStatusBadge from \"@/components/user-status-badge\";\nimport { CheckCircle, AlertTriangle, Flame } from \"lucide-react\";\nimport { Link } from \"wouter\";\n\nexport default function Dashboard() {\n  const { data: userProgress, isLoading } = useQuery({\n    queryKey: [\"/api/users/current/progress\"],\n  });\n\n  // Get current user data to determine role and subscription\n  const { data: currentUser } = useQuery({\n    queryKey: [\"/api/users/current\"],\n    queryFn: async () => {\n      // Check for email in localStorage or use demo email\n      const email = localStorage.getItem('userEmail') || 'lalabalavu.jon@gmail.com';\n      const response = await fetch(`/api/users/current?email=${email}`);\n      if (!response.ok) throw new Error('Failed to fetch user');\n      return response.json();\n    }\n  });\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 text-slate-900 font-sans\">\n      <Navigation />\n      \n      <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        {/* User Status Badge */}\n        <div className=\"mb-6\">\n          <UserStatusBadge \n            role={currentUser?.role || 'USER'}\n            subscriptionType={currentUser?.subscriptionType || 'TRIAL'}\n            subscriptionDate={currentUser?.subscriptionDate}\n            trialExpiresAt={currentUser?.trialExpiresAt || new Date(Date.now() + 24 * 60 * 60 * 1000).toISOString()}\n            userName={currentUser?.name}\n          />\n        </div>\n\n        <section className=\"mb-12\">\n          <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 overflow-hidden\">\n            <div className=\"border-b border-gray-200 px-6 py-4\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <h2 className=\"text-xl font-semibold text-slate-900\" data-testid=\"text-dashboard-title\">\n                    Your Learning Dashboard\n                  </h2>\n                  <p className=\"text-sm text-slate-500\">Track your progress and continue your diving education</p>\n                </div>\n                <div className=\"flex items-center space-x-4\">\n                  <div className=\"text-right\">\n                    <div className=\"text-sm text-slate-500\">Overall Progress</div>\n                    <div className=\"text-lg font-semibold text-slate-900\" data-testid=\"text-overall-progress\">45%</div>\n                  </div>\n                  <div className=\"w-16 h-16 relative\">\n                    <svg className=\"w-16 h-16 transform -rotate-90\" viewBox=\"0 0 64 64\">\n                      <circle cx=\"32\" cy=\"32\" r=\"28\" fill=\"none\" stroke=\"#E5E7EB\" strokeWidth=\"8\"/>\n                      <circle \n                        cx=\"32\" cy=\"32\" r=\"28\" fill=\"none\" stroke=\"#0066CC\" strokeWidth=\"8\" \n                        strokeDasharray=\"175.929\" strokeDashoffset=\"96.76\" strokeLinecap=\"round\"\n                      />\n                    </svg>\n                    <div className=\"absolute inset-0 flex items-center justify-center\">\n                      <span className=\"text-sm font-semibold text-slate-700\">45%</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"p-6\">\n              {/* Quick Stats */}\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-8\">\n                <div className=\"bg-gradient-to-br from-primary-50 to-primary-100 rounded-lg p-6\">\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <p className=\"text-primary-600 font-semibold\">Lessons Completed</p>\n                      <p className=\"text-3xl font-bold text-primary-900\" data-testid=\"text-lessons-completed\">8</p>\n                      <p className=\"text-sm text-primary-700\">of 12 total</p>\n                    </div>\n                    <div className=\"p-3 bg-primary-200 rounded-full\">\n                      <CheckCircle className=\"w-6 h-6 text-primary-700\" />\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"bg-gradient-to-br from-ocean-50 to-ocean-100 rounded-lg p-6\">\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <p className=\"text-ocean-600 font-semibold\">Quiz Average</p>\n                      <p className=\"text-3xl font-bold text-ocean-900\" data-testid=\"text-quiz-average\">87%</p>\n                      <p className=\"text-sm text-ocean-700\">across 5 quizzes</p>\n                    </div>\n                    <div className=\"p-3 bg-ocean-200 rounded-full\">\n                      <svg className=\"w-6 h-6 text-ocean-700\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\"/>\n                      </svg>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"bg-gradient-to-br from-yellow-50 to-yellow-100 rounded-lg p-6\">\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <p className=\"text-yellow-600 font-semibold\">Study Streak</p>\n                      <p className=\"text-3xl font-bold text-yellow-900\" data-testid=\"text-study-streak\">12</p>\n                      <p className=\"text-sm text-yellow-700\">days active</p>\n                    </div>\n                    <div className=\"p-3 bg-yellow-200 rounded-full\">\n                      <Flame className=\"w-6 h-6 text-yellow-700\" />\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              {/* AI Learning Path Suggestions */}\n              <div className=\"mb-8\">\n                <div className=\"bg-gradient-to-r from-purple-50 to-blue-50 rounded-lg p-6 border border-purple-200\">\n                  <div className=\"flex items-center justify-between mb-4\">\n                    <div className=\"flex items-center space-x-3\">\n                      <div className=\"p-2 bg-purple-100 rounded-lg\">\n                        <svg className=\"w-6 h-6 text-purple-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z\"/>\n                        </svg>\n                      </div>\n                      <div>\n                        <h3 className=\"text-lg font-semibold text-slate-900\">AI Learning Path Suggestions</h3>\n                        <p className=\"text-sm text-slate-600\">Get personalized recommendations powered by AI</p>\n                      </div>\n                    </div>\n                    <button \n                      onClick={() => window.location.href = '/learning-path'}\n                      className=\"bg-purple-500 hover:bg-purple-600 text-white px-6 py-2 rounded-lg font-medium transition-colors\"\n                      data-testid=\"button-ai-suggestions\"\n                    >\n                      Get AI Suggestions\n                    </button>\n                  </div>\n                  <div className=\"flex items-center space-x-4 text-sm text-slate-600\">\n                    <div className=\"flex items-center space-x-1\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500\" />\n                      <span>Personalized recommendations</span>\n                    </div>\n                    <div className=\"flex items-center space-x-1\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500\" />\n                      <span>Career path guidance</span>\n                    </div>\n                    <div className=\"flex items-center space-x-1\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500\" />\n                      <span>Learning style analysis</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              {/* Current Progress */}\n              <div className=\"mb-8\">\n                <h3 className=\"text-lg font-semibold text-slate-900 mb-4\">Continue Learning</h3>\n                <div className=\"bg-gradient-to-r from-primary-50 to-ocean-50 rounded-lg p-6 border border-primary-200\">\n                  <div className=\"flex items-center justify-between mb-4\">\n                    <div>\n                      <h4 className=\"font-semibold text-slate-900\" data-testid=\"text-current-track\">Physiology Basics</h4>\n                      <p className=\"text-sm text-slate-600\">Next: Circulatory System</p>\n                    </div>\n                    <Link href=\"/tracks/diving-physiology-basics\">\n                      <button className=\"bg-primary-500 hover:bg-primary-600 text-white px-6 py-2 rounded-lg font-medium transition-colors\" data-testid=\"button-continue\">\n                        Continue\n                      </button>\n                    </Link>\n                  </div>\n                  <div className=\"w-full bg-white/50 rounded-full h-2\">\n                    <div className=\"bg-primary-500 h-2 rounded-full\" style={{ width: \"60%\" }}></div>\n                  </div>\n                  <p className=\"text-sm text-slate-600 mt-2\">3 of 5 lessons completed</p>\n                </div>\n              </div>\n\n              {/* Recent Quiz Results */}\n              <div>\n                <div className=\"flex items-center justify-between mb-4\">\n                  <h3 className=\"text-lg font-semibold text-slate-900\">Recent Quiz Results</h3>\n                  <Link href=\"/analytics\">\n                    <button className=\"text-primary-600 hover:text-primary-700 font-medium text-sm\" data-testid=\"button-view-all\">\n                      View All\n                    </button>\n                  </Link>\n                </div>\n                \n                <div className=\"space-y-3\">\n                  <div className=\"flex items-center justify-between p-4 bg-gray-50 rounded-lg\" data-testid=\"quiz-result-1\">\n                    <div className=\"flex items-center space-x-4\">\n                      <div className=\"w-10 h-10 bg-green-100 rounded-full flex items-center justify-center\">\n                        <CheckCircle className=\"w-5 h-5 text-green-600\" />\n                      </div>\n                      <div>\n                        <h4 className=\"font-medium text-slate-900\">Respiratory System Quiz</h4>\n                        <p className=\"text-sm text-slate-500\">2 days ago</p>\n                      </div>\n                    </div>\n                    <div className=\"text-right\">\n                      <span className=\"text-lg font-semibold text-green-600\">90%</span>\n                      <p className=\"text-sm text-slate-500\">1st attempt</p>\n                    </div>\n                  </div>\n\n                  <div className=\"flex items-center justify-between p-4 bg-gray-50 rounded-lg\" data-testid=\"quiz-result-2\">\n                    <div className=\"flex items-center space-x-4\">\n                      <div className=\"w-10 h-10 bg-yellow-100 rounded-full flex items-center justify-center\">\n                        <AlertTriangle className=\"w-5 h-5 text-yellow-600\" />\n                      </div>\n                      <div>\n                        <h4 className=\"font-medium text-slate-900\">Gas Laws Fundamentals</h4>\n                        <p className=\"text-sm text-slate-500\">5 days ago</p>\n                      </div>\n                    </div>\n                    <div className=\"text-right\">\n                      <span className=\"text-lg font-semibold text-yellow-600\">72%</span>\n                      <p className=\"text-sm text-slate-500\">2nd attempt</p>\n                    </div>\n                  </div>\n\n                  <div className=\"flex items-center justify-between p-4 bg-gray-50 rounded-lg\" data-testid=\"quiz-result-3\">\n                    <div className=\"flex items-center space-x-4\">\n                      <div className=\"w-10 h-10 bg-green-100 rounded-full flex items-center justify-center\">\n                        <CheckCircle className=\"w-5 h-5 text-green-600\" />\n                      </div>\n                      <div>\n                        <h4 className=\"font-medium text-slate-900\">Pressure Effects Quiz</h4>\n                        <p className=\"text-sm text-slate-500\">1 week ago</p>\n                      </div>\n                    </div>\n                    <div className=\"text-right\">\n                      <span className=\"text-lg font-semibold text-green-600\">95%</span>\n                      <p className=\"text-sm text-slate-500\">1st attempt</p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n      </main>\n    </div>\n  );\n}\n","size_bytes":13221},"client/src/pages/home.tsx":{"content":"import { useQuery } from \"@tanstack/react-query\";\nimport Navigation from \"@/components/navigation\";\nimport HeroSection from \"@/components/hero-section\";\nimport TrackCard from \"@/components/track-card\";\nimport { LayoutDashboard, List } from \"lucide-react\";\nimport type { Track } from \"@shared/schema\";\n\nexport default function Home() {\n  const { data: tracks, isLoading } = useQuery<Track[]>({\n    queryKey: [\"/api/tracks\"],\n  });\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 text-slate-900 font-sans\">\n      <Navigation />\n      \n      <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        <HeroSection />\n        \n        <section id=\"tracks\" className=\"mb-12\">\n          <div className=\"flex items-center justify-between mb-8\">\n            <div>\n              <h2 className=\"text-2xl font-bold text-slate-900 mb-2\" data-testid=\"text-learning-tracks\">\n                Learning Tracks\n              </h2>\n              <p className=\"text-slate-600\">Comprehensive courses designed for professional divers</p>\n            </div>\n            <div className=\"hidden md:flex items-center space-x-2\">\n              <span className=\"text-sm text-slate-500\">View:</span>\n              <button \n                className=\"p-2 rounded-md bg-slate-100 text-slate-700\"\n                data-testid=\"button-list-view\"\n              >\n                <List className=\"w-4 h-4\" />\n              </button>\n              <button \n                className=\"p-2 rounded-md text-slate-500 hover:bg-slate-100\"\n                data-testid=\"button-grid-view\"\n              >\n                <LayoutDashboard className=\"w-4 h-4\" />\n              </button>\n            </div>\n          </div>\n\n          {isLoading ? (\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n              {[1, 2].map((i) => (\n                <div key={i} className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6\">\n                  <div className=\"animate-pulse\">\n                    <div className=\"h-6 bg-gray-200 rounded w-3/4 mb-2\"></div>\n                    <div className=\"h-4 bg-gray-200 rounded w-full mb-4\"></div>\n                    <div className=\"h-2 bg-gray-200 rounded w-full mb-4\"></div>\n                    <div className=\"flex justify-between\">\n                      <div className=\"h-4 bg-gray-200 rounded w-1/4\"></div>\n                      <div className=\"h-8 bg-gray-200 rounded w-1/4\"></div>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          ) : tracks && tracks.length > 0 ? (\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n              {tracks.map((track, index: number) => (\n                <TrackCard \n                  key={track.id} \n                  track={track}\n                  progress={{ completed: index === 0 ? 3 : 0, total: index === 0 ? 5 : 7 }}\n                  isLocked={index > 0}\n                />\n              ))}\n            </div>\n          ) : (\n            <div className=\"text-center py-12\">\n              <p className=\"text-slate-500\" data-testid=\"text-no-tracks\">\n                No learning tracks available yet.\n              </p>\n            </div>\n          )}\n        </section>\n      </main>\n\n      <footer className=\"bg-white border-t border-gray-200 mt-12\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n          <div className=\"flex flex-col md:flex-row items-center justify-between\">\n            <div className=\"flex items-center space-x-3 mb-4 md:mb-0\">\n              <div className=\"w-8 h-8 bg-primary-500 rounded-lg flex items-center justify-center\">\n                <LayoutDashboard className=\"w-5 h-5 text-white\" />\n              </div>\n              <span className=\"font-semibold text-slate-900\">Diver Well Training</span>\n            </div>\n            <div className=\"flex items-center space-x-6 text-sm text-slate-500\">\n              <a href=\"#\" className=\"hover:text-slate-700\">Privacy Policy</a>\n              <a href=\"#\" className=\"hover:text-slate-700\">Terms of Service</a>\n              <a href=\"#\" className=\"hover:text-slate-700\">Support</a>\n            </div>\n          </div>\n        </div>\n      </footer>\n    </div>\n  );\n}\n","size_bytes":4238},"client/src/pages/invite.tsx":{"content":"import { useState } from \"react\";\nimport { useQuery, useMutation } from \"@tanstack/react-query\";\nimport { useRoute } from \"wouter\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Alert, AlertDescription } from \"@/components/ui/alert\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { LayoutDashboard, Mail, CheckCircle, AlertCircle } from \"lucide-react\";\nimport type { Invite } from \"@shared/schema\";\n\nexport default function Invite() {\n  const [, params] = useRoute(\"/invite/:token\");\n  const [email, setEmail] = useState(\"\");\n  const [isRequesting, setIsRequesting] = useState(false);\n  const { toast } = useToast();\n\n  const { data: invite, isLoading, error } = useQuery<Invite>({\n    queryKey: [\"/api/invites\", params?.token],\n    enabled: !!params?.token,\n  });\n\n  const requestMagicLinkMutation = useMutation({\n    mutationFn: async (emailData: { email: string; token: string }) => {\n      // This would integrate with Auth.js to send a magic link\n      return apiRequest(\"POST\", \"/api/auth/magic-link\", emailData);\n    },\n    onSuccess: () => {\n      setIsRequesting(true);\n      toast({\n        title: \"Magic Link Sent!\",\n        description: \"Check your email for a sign-in link.\",\n      });\n    },\n    onError: () => {\n      toast({\n        title: \"Error\",\n        description: \"Failed to send magic link. Please try again.\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const handleRequestMagicLink = () => {\n    if (!email || !params?.token) return;\n    requestMagicLinkMutation.mutate({\n      email,\n      token: params.token,\n    });\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <Card className=\"w-full max-w-md mx-4\">\n          <CardContent className=\"pt-6\">\n            <div className=\"animate-pulse\">\n              <div className=\"h-8 bg-gray-200 rounded w-3/4 mb-4\"></div>\n              <div className=\"h-4 bg-gray-200 rounded w-full mb-2\"></div>\n              <div className=\"h-4 bg-gray-200 rounded w-2/3 mb-4\"></div>\n              <div className=\"h-10 bg-gray-200 rounded w-full mb-2\"></div>\n              <div className=\"h-10 bg-gray-200 rounded w-full\"></div>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    );\n  }\n\n  if (error || !invite) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <Card className=\"w-full max-w-md mx-4\">\n          <CardContent className=\"pt-6\">\n            <div className=\"flex mb-4 gap-2 items-center\">\n              <AlertCircle className=\"h-8 w-8 text-red-500\" />\n              <h1 className=\"text-2xl font-bold text-gray-900\" data-testid=\"text-invalid-invite\">\n                Invalid Invite\n              </h1>\n            </div>\n            <Alert className=\"mb-4\">\n              <AlertCircle className=\"h-4 w-4\" />\n              <AlertDescription>\n                This invitation link is invalid, expired, or has already been used.\n              </AlertDescription>\n            </Alert>\n            <Button \n              onClick={() => window.location.href = '/'}\n              className=\"w-full\"\n              data-testid=\"button-home\"\n            >\n              Go to Home\n            </Button>\n          </CardContent>\n        </Card>\n      </div>\n    );\n  }\n\n  if (invite.usedAt) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <Card className=\"w-full max-w-md mx-4\">\n          <CardContent className=\"pt-6\">\n            <div className=\"flex mb-4 gap-2 items-center\">\n              <CheckCircle className=\"h-8 w-8 text-green-500\" />\n              <h1 className=\"text-2xl font-bold text-gray-900\" data-testid=\"text-invite-used\">\n                Invite Already Used\n              </h1>\n            </div>\n            <Alert className=\"mb-4\">\n              <CheckCircle className=\"h-4 w-4\" />\n              <AlertDescription>\n                This invitation has already been accepted. Please sign in to access your account.\n              </AlertDescription>\n            </Alert>\n            <Button \n              onClick={() => window.location.href = '/signin'}\n              className=\"w-full\"\n              data-testid=\"button-signin\"\n            >\n              Sign In\n            </Button>\n          </CardContent>\n        </Card>\n      </div>\n    );\n  }\n\n  if (new Date() > new Date(invite.expiresAt)) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <Card className=\"w-full max-w-md mx-4\">\n          <CardContent className=\"pt-6\">\n            <div className=\"flex mb-4 gap-2 items-center\">\n              <AlertCircle className=\"h-8 w-8 text-yellow-500\" />\n              <h1 className=\"text-2xl font-bold text-gray-900\" data-testid=\"text-invite-expired\">\n                Invite Expired\n              </h1>\n            </div>\n            <Alert className=\"mb-4\">\n              <AlertCircle className=\"h-4 w-4\" />\n              <AlertDescription>\n                This invitation has expired. Please contact an administrator for a new invitation.\n              </AlertDescription>\n            </Alert>\n            <Button \n              onClick={() => window.location.href = '/'}\n              className=\"w-full\"\n              data-testid=\"button-home-expired\"\n            >\n              Go to Home\n            </Button>\n          </CardContent>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n      <Card className=\"w-full max-w-md mx-4\">\n        <CardHeader className=\"text-center\">\n          <div className=\"mx-auto mb-4\">\n            <div className=\"w-12 h-12 bg-primary-500 rounded-lg flex items-center justify-center\">\n              <LayoutDashboard className=\"w-6 h-6 text-white\" />\n            </div>\n          </div>\n          <CardTitle className=\"text-2xl font-bold text-gray-900\" data-testid=\"text-welcome\">\n            Welcome to Diver Well Training\n          </CardTitle>\n          <CardDescription className=\"text-slate-600\">\n            You've been invited to join our professional diving education platform.\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"mb-6\">\n            <Alert className=\"border-primary-200 bg-primary-50\">\n              <Mail className=\"h-4 w-4 text-primary-600\" />\n              <AlertDescription className=\"text-primary-700\">\n                <strong>Invited Email:</strong> {invite.email}\n              </AlertDescription>\n            </Alert>\n          </div>\n\n          {isRequesting ? (\n            <div className=\"text-center\">\n              <div className=\"mb-4\">\n                <CheckCircle className=\"h-12 w-12 text-green-500 mx-auto mb-3\" />\n                <h3 className=\"text-lg font-semibold text-gray-900\" data-testid=\"text-magic-link-sent\">\n                  Magic Link Sent!\n                </h3>\n                <p className=\"text-slate-600 mt-2\">\n                  Check your email for a sign-in link. The link will be valid for 15 minutes.\n                </p>\n              </div>\n              <Button \n                variant=\"outline\" \n                onClick={() => setIsRequesting(false)}\n                className=\"w-full\"\n                data-testid=\"button-try-different-email\"\n              >\n                Try Different Email\n              </Button>\n            </div>\n          ) : (\n            <div className=\"space-y-4\">\n              <div>\n                <label htmlFor=\"email\" className=\"block text-sm font-medium text-slate-700 mb-2\">\n                  Email Address\n                </label>\n                <Input\n                  id=\"email\"\n                  type=\"email\"\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                  placeholder=\"Enter your email address\"\n                  className=\"w-full\"\n                  data-testid=\"input-email\"\n                />\n                <p className=\"text-xs text-slate-500 mt-1\">\n                  Enter the email address where you received this invitation.\n                </p>\n              </div>\n\n              <Button \n                onClick={handleRequestMagicLink}\n                disabled={!email || requestMagicLinkMutation.isPending}\n                className=\"w-full bg-primary-500 hover:bg-primary-600 text-white\"\n                data-testid=\"button-request-magic-link\"\n              >\n                {requestMagicLinkMutation.isPending ? (\n                  <>\n                    <Mail className=\"w-4 h-4 mr-2 animate-spin\" />\n                    Sending Magic Link...\n                  </>\n                ) : (\n                  <>\n                    <Mail className=\"w-4 h-4 mr-2\" />\n                    Request Magic Link\n                  </>\n                )}\n              </Button>\n\n              <div className=\"text-center\">\n                <p className=\"text-xs text-slate-500\">\n                  By continuing, you agree to our{\" \"}\n                  <a href=\"#\" className=\"text-primary-600 hover:text-primary-700\">\n                    Terms of Service\n                  </a>{\" \"}\n                  and{\" \"}\n                  <a href=\"#\" className=\"text-primary-600 hover:text-primary-700\">\n                    Privacy Policy\n                  </a>\n                  .\n                </p>\n              </div>\n            </div>\n          )}\n\n          <div className=\"mt-6 pt-4 border-t border-gray-200 text-center\">\n            <p className=\"text-xs text-slate-500\">\n              Need help?{\" \"}\n              <a href=\"#\" className=\"text-primary-600 hover:text-primary-700\">\n                Contact Support\n              </a>\n            </p>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":10031},"client/src/pages/lesson-detail.tsx":{"content":"import { useQuery } from \"@tanstack/react-query\";\nimport { useRoute } from \"wouter\";\nimport Navigation from \"@/components/navigation\";\nimport AITutor from \"@/components/ai-tutor\";\nimport PracticeScenario from \"@/components/practice-scenario\";\nimport { Button } from \"@/components/ui/button\";\nimport { ChevronLeft, ChevronRight, Bookmark, FileText, Video } from \"lucide-react\";\nimport { Link } from \"wouter\";\nimport type { Lesson } from \"@shared/schema\";\n\nexport default function LessonDetail() {\n  const [, params] = useRoute(\"/lessons/:id\");\n  const { data: lesson, isLoading } = useQuery<Lesson>({\n    queryKey: [\"/api/lessons\", params?.id],\n    enabled: !!params?.id,\n  });\n\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 text-slate-900 font-sans\">\n        <Navigation />\n        <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n          <div className=\"animate-pulse\">\n            <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 overflow-hidden\">\n              <div className=\"border-b border-gray-200 px-6 py-4\">\n                <div className=\"h-6 bg-gray-200 rounded w-1/3\"></div>\n              </div>\n              <div className=\"p-6\">\n                <div className=\"space-y-4\">\n                  <div className=\"h-4 bg-gray-200 rounded\"></div>\n                  <div className=\"h-4 bg-gray-200 rounded w-3/4\"></div>\n                  <div className=\"h-4 bg-gray-200 rounded w-1/2\"></div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </main>\n      </div>\n    );\n  }\n\n  if (!lesson) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 text-slate-900 font-sans\">\n        <Navigation />\n        <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n          <div className=\"text-center py-12\">\n            <p className=\"text-slate-500\" data-testid=\"text-lesson-not-found\">Lesson not found</p>\n          </div>\n        </main>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 text-slate-900 font-sans\">\n      <Navigation />\n      \n      <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        <section className=\"bg-white rounded-xl shadow-sm border border-gray-200 overflow-hidden\">\n          <div className=\"border-b border-gray-200 px-6 py-4\">\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center space-x-4\">\n                <Link href=\"/tracks\">\n                  <button className=\"text-slate-500 hover:text-slate-700\" data-testid=\"button-back\">\n                    <ChevronLeft className=\"w-5 h-5\" />\n                  </button>\n                </Link>\n                <div>\n                  <h2 className=\"text-xl font-semibold text-slate-900\" data-testid=\"text-lesson-title\">\n                    {lesson.title}\n                  </h2>\n                  <p className=\"text-sm text-slate-500\" data-testid=\"text-lesson-meta\">\n                    Lesson {lesson.order || 1} of 5\n                  </p>\n                </div>\n              </div>\n              <div className=\"flex items-center space-x-2\">\n                <Link href={`/admin/lessons/${lesson.id}`}>\n                  <button className=\"text-sm text-primary-600 hover:text-primary-700 font-medium\" data-testid=\"button-edit\">\n                    Edit Content\n                  </button>\n                </Link>\n                <button className=\"p-2 text-slate-500 hover:text-slate-700 rounded-lg hover:bg-gray-100\" data-testid=\"button-bookmark\">\n                  <Bookmark className=\"w-5 h-5\" />\n                </button>\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"flex\">\n            <div className=\"flex-1 p-6\">\n              <article className=\"prose prose-slate max-w-none\" data-testid=\"lesson-content\">\n                <div dangerouslySetInnerHTML={{ __html: lesson.content || \"No content available.\" }} />\n              </article>\n\n              <div className=\"mt-8 pt-6 border-t border-gray-200\">\n                <div className=\"flex items-center justify-between\">\n                  <Button variant=\"outline\" data-testid=\"button-previous-lesson\">\n                    <ChevronLeft className=\"w-5 h-5 mr-2\" />\n                    Previous Lesson\n                  </Button>\n                  <Link href={`/lessons/${lesson.id}/quiz`}>\n                    <Button \n                      className=\"bg-primary-500 hover:bg-primary-600 text-white px-6 py-2 rounded-lg font-medium\"\n                      data-testid=\"button-take-quiz\"\n                    >\n                      Take Quiz\n                    </Button>\n                  </Link>\n                  <Button variant=\"outline\" data-testid=\"button-next-lesson\">\n                    Next Lesson\n                    <ChevronRight className=\"w-5 h-5 ml-2\" />\n                  </Button>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"w-80 border-l border-gray-200 bg-gray-50 p-6\">\n              <div className=\"mb-6\">\n                <h3 className=\"font-semibold text-slate-900 mb-3\">Lesson Progress</h3>\n                <div className=\"space-y-3\">\n                  <div className=\"flex items-center\">\n                    <div className=\"w-6 h-6 bg-ocean-500 rounded-full flex items-center justify-center mr-3\">\n                      <svg className=\"w-3 h-3 text-white\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                        <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\"/>\n                      </svg>\n                    </div>\n                    <span className=\"text-sm text-slate-600\">Content Reading</span>\n                  </div>\n                  <div className=\"flex items-center\">\n                    <div className=\"w-6 h-6 border-2 border-primary-500 rounded-full flex items-center justify-center mr-3\">\n                      <div className=\"w-2 h-2 bg-primary-500 rounded-full\"></div>\n                    </div>\n                    <span className=\"text-sm text-slate-900 font-medium\">Quiz Attempt</span>\n                  </div>\n                  <div className=\"flex items-center\">\n                    <div className=\"w-6 h-6 border-2 border-gray-300 rounded-full mr-3\"></div>\n                    <span className=\"text-sm text-slate-400\">Completion</span>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"mb-6\">\n                <h3 className=\"font-semibold text-slate-900 mb-3\">Track Outline</h3>\n                <div className=\"space-y-2\">\n                  <div className=\"flex items-center p-2 bg-primary-50 rounded-lg border border-primary-200\">\n                    <div className=\"w-2 h-2 bg-primary-500 rounded-full mr-3\"></div>\n                    <span className=\"text-sm font-medium text-primary-700\">Respiratory System</span>\n                  </div>\n                  <div className=\"flex items-center p-2 hover:bg-gray-100 rounded-lg cursor-pointer\">\n                    <div className=\"w-2 h-2 bg-gray-300 rounded-full mr-3\"></div>\n                    <span className=\"text-sm text-slate-600\">Circulatory System</span>\n                  </div>\n                  <div className=\"flex items-center p-2 hover:bg-gray-100 rounded-lg cursor-pointer\">\n                    <div className=\"w-2 h-2 bg-gray-300 rounded-full mr-3\"></div>\n                    <span className=\"text-sm text-slate-600\">Gas Laws</span>\n                  </div>\n                  <div className=\"flex items-center p-2 hover:bg-gray-100 rounded-lg cursor-pointer\">\n                    <div className=\"w-2 h-2 bg-gray-300 rounded-full mr-3\"></div>\n                    <span className=\"text-sm text-slate-600\">Pressure Effects</span>\n                  </div>\n                  <div className=\"flex items-center p-2 hover:bg-gray-100 rounded-lg cursor-pointer\">\n                    <div className=\"w-2 h-2 bg-gray-300 rounded-full mr-3\"></div>\n                    <span className=\"text-sm text-slate-600\">Final Assessment</span>\n                  </div>\n                </div>\n              </div>\n\n              <div>\n                <h3 className=\"font-semibold text-slate-900 mb-3\">Resources</h3>\n                <div className=\"space-y-2\">\n                  <a href=\"#\" className=\"flex items-center p-2 text-primary-600 hover:bg-primary-50 rounded-lg\" data-testid=\"link-diagrams\">\n                    <FileText className=\"w-4 h-4 mr-2\" />\n                    <span className=\"text-sm\">Anatomy Diagrams</span>\n                  </a>\n                  <a href=\"#\" className=\"flex items-center p-2 text-primary-600 hover:bg-primary-50 rounded-lg\" data-testid=\"link-video\">\n                    <Video className=\"w-4 h-4 mr-2\" />\n                    <span className=\"text-sm\">Video Tutorial</span>\n                  </a>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n\n        {/* AI Tutor Integration */}\n        <AITutor trackSlug=\"inspection-ndt\" lessonTitle={lesson.title} />\n        \n        {/* Practice Scenarios */}\n        <PracticeScenario trackSlug=\"inspection-ndt\" />\n      </main>\n    </div>\n  );\n}\n","size_bytes":9283},"client/src/pages/not-found.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { AlertCircle } from \"lucide-react\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center bg-gray-50\">\n      <Card className=\"w-full max-w-md mx-4\">\n        <CardContent className=\"pt-6\">\n          <div className=\"flex mb-4 gap-2\">\n            <AlertCircle className=\"h-8 w-8 text-red-500\" />\n            <h1 className=\"text-2xl font-bold text-gray-900\">404 Page Not Found</h1>\n          </div>\n\n          <p className=\"mt-4 text-sm text-gray-600\">\n            Did you forget to add the page to the router?\n          </p>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":711},"client/src/pages/quiz.tsx":{"content":"import { useState, useEffect, useCallback } from \"react\";\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { useRoute } from \"wouter\";\nimport Navigation from \"@/components/navigation\";\nimport QuizQuestion from \"@/components/quiz-question\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { AlertCircle, Clock } from \"lucide-react\";\nimport { Alert, AlertDescription } from \"@/components/ui/alert\";\nimport type { Quiz, Question } from \"@shared/schema\";\n\ntype QuizWithQuestions = Quiz & { questions: Question[] };\n\nexport default function Quiz() {\n  const [, params] = useRoute(\"/lessons/:id/quiz\");\n  const [currentQuestion, setCurrentQuestion] = useState(1);\n  const [answers, setAnswers] = useState<Record<string, string>>({});\n  const [timeRemaining, setTimeRemaining] = useState<number | null>(null);\n  const [quizStarted, setQuizStarted] = useState(false);\n  const [quizSubmitted, setQuizSubmitted] = useState(false);\n  const [showTimeWarning, setShowTimeWarning] = useState(false);\n  const { toast } = useToast();\n  const queryClient = useQueryClient();\n\n  const { data: quiz, isLoading } = useQuery<QuizWithQuestions>({\n    queryKey: [\"/api/quizzes/lesson\", params?.id],\n    enabled: !!params?.id,\n    onSuccess: (data) => {\n      if (data && !quizStarted && timeRemaining === null) {\n        const timeLimit = data.timeLimit || 30; // Default 30 minutes\n        setTimeRemaining(timeLimit * 60); // Convert to seconds\n      }\n    },\n  });\n\n  const submitAttemptMutation = useMutation({\n    mutationFn: async (attemptData: any) => {\n      return apiRequest(\"POST\", \"/api/quiz-attempts\", attemptData);\n    },\n    onSuccess: () => {\n      toast({\n        title: \"Quiz Submitted!\",\n        description: \"Your quiz has been submitted successfully.\",\n      });\n      queryClient.invalidateQueries({ queryKey: [\"/api/users\"] });\n    },\n    onError: () => {\n      toast({\n        title: \"Error\",\n        description: \"Failed to submit quiz. Please try again.\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  // Auto-submit quiz function\n  const autoSubmitQuiz = useCallback(() => {\n    if (!quizSubmitted) {\n      const score = Object.entries(answers).reduce((correct, [questionId, answer]) => {\n        const question = quiz?.questions.find((q: any) => q.id === questionId);\n        return question?.answer === answer ? correct + 1 : correct;\n      }, 0);\n\n      submitAttemptMutation.mutate({\n        userId: \"current-user\",\n        quizId: quiz?.id,\n        score,\n        totalQuestions: quiz?.questions.length || 0,\n        answers: JSON.stringify(answers),\n      });\n      \n      toast({\n        title: \"Time's Up!\",\n        description: \"Quiz has been automatically submitted.\",\n        variant: \"destructive\",\n      });\n    }\n  }, [quizSubmitted, answers, quiz, submitAttemptMutation, toast]);\n\n  // Timer countdown effect\n  useEffect(() => {\n    if (!quizStarted || timeRemaining === null || timeRemaining <= 0 || quizSubmitted) {\n      return;\n    }\n\n    const timer = setInterval(() => {\n      setTimeRemaining((prev) => {\n        if (prev === null || prev <= 1) {\n          autoSubmitQuiz();\n          return 0;\n        }\n        \n        // Show warning at 5 minutes (300 seconds)\n        if (prev === 301) {\n          setShowTimeWarning(true);\n          toast({\n            title: \"Time Warning!\",\n            description: \"5 minutes remaining in your exam.\",\n            variant: \"destructive\",\n          });\n        }\n        \n        // Show final warning at 1 minute (60 seconds)\n        if (prev === 61) {\n          toast({\n            title: \"Final Warning!\",\n            description: \"1 minute remaining in your exam.\",\n            variant: \"destructive\",\n          });\n        }\n        \n        return prev - 1;\n      });\n    }, 1000);\n\n    return () => clearInterval(timer);\n  }, [quizStarted, timeRemaining, quizSubmitted, autoSubmitQuiz, toast]);\n\n  // Start quiz function\n  const startQuiz = () => {\n    setQuizStarted(true);\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 text-slate-900 font-sans\">\n        <Navigation />\n        <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n          <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6\">\n            <div className=\"animate-pulse\">\n              <div className=\"h-6 bg-gray-200 rounded w-1/3 mb-4\"></div>\n              <div className=\"h-2 bg-gray-200 rounded w-full mb-6\"></div>\n              <div className=\"h-4 bg-gray-200 rounded w-3/4 mb-4\"></div>\n              <div className=\"space-y-2\">\n                {[1, 2, 3, 4].map((i) => (\n                  <div key={i} className=\"h-12 bg-gray-200 rounded\"></div>\n                ))}\n              </div>\n            </div>\n          </div>\n        </main>\n      </div>\n    );\n  }\n\n  if (!quiz || !quiz.questions || quiz.questions.length === 0) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 text-slate-900 font-sans\">\n        <Navigation />\n        <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n          <div className=\"text-center py-12\">\n            <p className=\"text-slate-500\" data-testid=\"text-quiz-not-found\">\n              Quiz not available for this lesson.\n            </p>\n          </div>\n        </main>\n      </div>\n    );\n  }\n\n  const currentQuestionData = quiz.questions[currentQuestion - 1];\n  const selectedAnswer = answers[currentQuestionData.id];\n  const totalQuestions = quiz.questions.length;\n  \n  const formatTime = (seconds: number) => {\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    return `${minutes.toString().padStart(2, '0')}:${remainingSeconds.toString().padStart(2, '0')}`;\n  };\n\n  const handleAnswerSelect = (answer: string) => {\n    setAnswers(prev => ({\n      ...prev,\n      [currentQuestionData.id]: answer\n    }));\n  };\n\n  const handleNext = () => {\n    if (currentQuestion < totalQuestions) {\n      setCurrentQuestion(prev => prev + 1);\n    }\n  };\n\n  const handlePrevious = () => {\n    if (currentQuestion > 1) {\n      setCurrentQuestion(prev => prev - 1);\n    }\n  };\n\n  const handleSubmit = () => {\n    const score = Object.entries(answers).reduce((correct, [questionId, answer]) => {\n      const question = quiz.questions.find((q: any) => q.id === questionId);\n      return question?.answer === answer ? correct + 1 : correct;\n    }, 0);\n\n    submitAttemptMutation.mutate({\n      userId: \"current-user\", // This would come from auth context\n      quizId: quiz.id,\n      score,\n      totalQuestions: quiz.questions.length,\n      answers: JSON.stringify(answers),\n    });\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 text-slate-900 font-sans\">\n      <Navigation />\n      \n      <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        <section className=\"bg-white rounded-xl shadow-sm border border-gray-200 overflow-hidden\">\n          <div className=\"border-b border-gray-200 px-6 py-4\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <h2 className=\"text-xl font-semibold text-slate-900\" data-testid=\"text-quiz-title\">\n                  {quiz.title}\n                </h2>\n                <p className=\"text-sm text-slate-500\" data-testid=\"text-quiz-meta\">\n                  {totalQuestions} questions • {quiz.timeLimit || 10} minutes\n                </p>\n              </div>\n              <div className=\"text-right\">\n                <div className=\"text-sm text-slate-500\">Time Remaining</div>\n                <div className=\"text-lg font-mono font-semibold text-slate-900\" data-testid=\"text-time-remaining\">\n                  {formatTime(timeRemaining)}\n                </div>\n              </div>\n            </div>\n          </div>\n          \n          <QuizQuestion\n            question={currentQuestionData}\n            currentQuestion={currentQuestion}\n            totalQuestions={totalQuestions}\n            selectedAnswer={selectedAnswer}\n            onAnswerSelect={handleAnswerSelect}\n            onPrevious={handlePrevious}\n            onNext={handleNext}\n            onSubmit={handleSubmit}\n            canGoNext={!!selectedAnswer}\n            canGoPrevious={currentQuestion > 1}\n            isLastQuestion={currentQuestion === totalQuestions}\n          />\n        </section>\n      </main>\n    </div>\n  );\n}\n","size_bytes":8427},"client/src/pages/signin.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { useMutation } from \"@tanstack/react-query\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Alert, AlertDescription } from \"@/components/ui/alert\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { LayoutDashboard, Mail, Eye, EyeOff, AlertCircle } from \"lucide-react\";\nimport { Link } from \"wouter\";\nimport diverWellLogo from \"@assets/DIVER_WELL_TRAINING-500x500-rbg-preview_1756088331820.png\";\n\nexport default function SignIn() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [showPassword, setShowPassword] = useState(false);\n  const [isCredentials, setIsCredentials] = useState(true);\n  const [magicLinkSent, setMagicLinkSent] = useState(false);\n  const [rememberMe, setRememberMe] = useState(false);\n  const { toast } = useToast();\n\n  // Load remembered credentials on component mount\n  useEffect(() => {\n    const rememberedEmail = localStorage.getItem('rememberedEmail');\n    const rememberedPassword = localStorage.getItem('rememberedPassword');\n    if (rememberedEmail) {\n      setEmail(rememberedEmail);\n      setRememberMe(true);\n    }\n    if (rememberedPassword) {\n      setPassword(rememberedPassword);\n    }\n  }, []);\n\n  const credentialsSignInMutation = useMutation({\n    mutationFn: async (credentials: { email: string; password: string; rememberMe: boolean }) => {\n      return apiRequest(\"POST\", \"/api/auth/credentials\", credentials);\n    },\n    onSuccess: (data) => {\n      // Handle remember me functionality\n      if (rememberMe) {\n        localStorage.setItem('rememberedEmail', email);\n        localStorage.setItem('rememberedPassword', password);\n        localStorage.setItem('userEmail', email); // For current session\n      } else {\n        localStorage.removeItem('rememberedEmail');\n        localStorage.removeItem('rememberedPassword');\n        localStorage.setItem('userEmail', email); // Still set for current session\n      }\n\n      toast({\n        title: \"Welcome back!\",\n        description: \"You have been signed in successfully.\",\n      });\n      // Redirect to dashboard\n      window.location.href = '/dashboard';\n    },\n    onError: (error: any) => {\n      toast({\n        title: \"Sign In Failed\",\n        description: error.message || \"Invalid email or password. Please try again.\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const magicLinkMutation = useMutation({\n    mutationFn: async (emailData: { email: string }) => {\n      return apiRequest(\"POST\", \"/api/auth/magic-link\", emailData);\n    },\n    onSuccess: () => {\n      setMagicLinkSent(true);\n      toast({\n        title: \"Magic Link Sent!\",\n        description: \"Check your email for a sign-in link.\",\n      });\n    },\n    onError: () => {\n      toast({\n        title: \"Error\",\n        description: \"Failed to send magic link. Please try again.\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const handleCredentialsSignIn = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!email || !password) return;\n    credentialsSignInMutation.mutate({ email, password, rememberMe });\n  };\n\n  const handleMagicLinkRequest = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!email) return;\n    magicLinkMutation.mutate({ email });\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n      <Card className=\"w-full max-w-md mx-4\">\n        <CardHeader className=\"text-center\">\n          <div className=\"mx-auto mb-4\">\n            <Link href=\"/\">\n              <a className=\"flex items-center justify-center space-x-3\">\n                <img \n                  src={diverWellLogo} \n                  alt=\"Professional Diver - Diver Well Training\" \n                  className=\"w-12 h-12 rounded-lg\"\n                />\n                <div>\n                  <div className=\"text-lg font-bold text-slate-900\">Professional Diver</div>\n                  <div className=\"text-xs text-slate-500\">Diver Well Training</div>\n                </div>\n              </a>\n            </Link>\n          </div>\n          <CardTitle className=\"text-2xl font-bold text-gray-900\" data-testid=\"text-signin-title\">\n            Sign In\n          </CardTitle>\n          <CardDescription className=\"text-slate-600\">\n            Access your diving education account\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          {magicLinkSent && !isCredentials ? (\n            <div className=\"text-center\">\n              <div className=\"mb-4\">\n                <Mail className=\"h-12 w-12 text-green-500 mx-auto mb-3\" />\n                <h3 className=\"text-lg font-semibold text-gray-900\" data-testid=\"text-check-email\">\n                  Check Your Email\n                </h3>\n                <p className=\"text-slate-600 mt-2\">\n                  We sent a sign-in link to <strong>{email}</strong>. Click the link to access your account.\n                </p>\n              </div>\n              <Button \n                variant=\"outline\" \n                onClick={() => setMagicLinkSent(false)}\n                className=\"w-full mb-2\"\n                data-testid=\"button-try-again\"\n              >\n                Try Different Email\n              </Button>\n              <Button \n                variant=\"ghost\" \n                onClick={() => setIsCredentials(true)}\n                className=\"w-full text-sm\"\n                data-testid=\"button-use-password\"\n              >\n                Use password instead\n              </Button>\n            </div>\n          ) : (\n            <>\n              {/* Sign In Method Toggle */}\n              <div className=\"flex border border-gray-200 rounded-lg mb-6\" data-testid=\"signin-method-toggle\">\n                <button\n                  onClick={() => setIsCredentials(true)}\n                  className={`flex-1 py-2 px-4 text-sm font-medium rounded-l-lg transition-colors ${\n                    isCredentials\n                      ? \"bg-primary-500 text-white\"\n                      : \"text-slate-600 hover:text-slate-900\"\n                  }`}\n                  data-testid=\"button-credentials\"\n                >\n                  Password\n                </button>\n                <button\n                  onClick={() => setIsCredentials(false)}\n                  className={`flex-1 py-2 px-4 text-sm font-medium rounded-r-lg transition-colors ${\n                    !isCredentials\n                      ? \"bg-primary-500 text-white\"\n                      : \"text-slate-600 hover:text-slate-900\"\n                  }`}\n                  data-testid=\"button-magic-link\"\n                >\n                  Magic Link\n                </button>\n              </div>\n\n              {/* Credentials Form */}\n              {isCredentials ? (\n                <form onSubmit={handleCredentialsSignIn} className=\"space-y-4\">\n                  <div>\n                    <label htmlFor=\"email\" className=\"block text-sm font-medium text-slate-700 mb-2\">\n                      Email Address\n                    </label>\n                    <Input\n                      id=\"email\"\n                      type=\"email\"\n                      value={email}\n                      onChange={(e) => setEmail(e.target.value)}\n                      placeholder=\"Enter your email\"\n                      required\n                      className=\"w-full\"\n                      data-testid=\"input-email\"\n                    />\n                  </div>\n\n                  <div>\n                    <label htmlFor=\"password\" className=\"block text-sm font-medium text-slate-700 mb-2\">\n                      Password\n                    </label>\n                    <div className=\"relative\">\n                      <Input\n                        id=\"password\"\n                        type={showPassword ? \"text\" : \"password\"}\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                        placeholder=\"Enter your password\"\n                        required\n                        className=\"w-full pr-10\"\n                        data-testid=\"input-password\"\n                      />\n                      <button\n                        type=\"button\"\n                        onClick={() => setShowPassword(!showPassword)}\n                        className=\"absolute inset-y-0 right-0 pr-3 flex items-center\"\n                        data-testid=\"button-toggle-password\"\n                      >\n                        {showPassword ? (\n                          <EyeOff className=\"h-4 w-4 text-slate-400\" />\n                        ) : (\n                          <Eye className=\"h-4 w-4 text-slate-400\" />\n                        )}\n                      </button>\n                    </div>\n                  </div>\n\n                  {/* Remember Me Checkbox */}\n                  <div className=\"flex items-center space-x-2\">\n                    <Checkbox \n                      id=\"remember-me\"\n                      checked={rememberMe}\n                      onCheckedChange={(checked) => setRememberMe(checked as boolean)}\n                      data-testid=\"checkbox-remember-me\"\n                    />\n                    <label \n                      htmlFor=\"remember-me\" \n                      className=\"text-sm font-medium text-slate-700 cursor-pointer\"\n                    >\n                      Remember me\n                    </label>\n                  </div>\n\n                  <Button \n                    type=\"submit\"\n                    disabled={!email || !password || credentialsSignInMutation.isPending}\n                    className=\"w-full bg-primary-500 hover:bg-primary-600 text-white\"\n                    data-testid=\"button-signin-credentials\"\n                  >\n                    {credentialsSignInMutation.isPending ? \"Signing In...\" : \"Sign In\"}\n                  </Button>\n                </form>\n              ) : (\n                /* Magic Link Form */\n                <form onSubmit={handleMagicLinkRequest} className=\"space-y-4\">\n                  <div>\n                    <label htmlFor=\"magic-email\" className=\"block text-sm font-medium text-slate-700 mb-2\">\n                      Email Address\n                    </label>\n                    <Input\n                      id=\"magic-email\"\n                      type=\"email\"\n                      value={email}\n                      onChange={(e) => setEmail(e.target.value)}\n                      placeholder=\"Enter your email\"\n                      required\n                      className=\"w-full\"\n                      data-testid=\"input-magic-email\"\n                    />\n                    <p className=\"text-xs text-slate-500 mt-1\">\n                      We'll send you a secure link to sign in without a password.\n                    </p>\n                  </div>\n\n                  <Button \n                    type=\"submit\"\n                    disabled={!email || magicLinkMutation.isPending}\n                    className=\"w-full bg-primary-500 hover:bg-primary-600 text-white\"\n                    data-testid=\"button-request-magic-link\"\n                  >\n                    {magicLinkMutation.isPending ? (\n                      <>\n                        <Mail className=\"w-4 h-4 mr-2 animate-spin\" />\n                        Sending...\n                      </>\n                    ) : (\n                      <>\n                        <Mail className=\"w-4 h-4 mr-2\" />\n                        Send Magic Link\n                      </>\n                    )}\n                  </Button>\n                </form>\n              )}\n\n              {/* Demo Account Alert */}\n              <Alert className=\"mt-6 border-primary-200 bg-primary-50\">\n                <AlertCircle className=\"h-4 w-4 text-primary-600\" />\n                <AlertDescription className=\"text-primary-700\">\n                  <strong>Demo Account:</strong> admin@diverwell.app / admin123\n                </AlertDescription>\n              </Alert>\n\n              {/* Footer Links */}\n              <div className=\"mt-6 text-center\">\n                <p className=\"text-sm text-slate-600\">\n                  Don't have an account?{\" \"}\n                  <span className=\"text-slate-500\">\n                    Contact an administrator for an invitation.\n                  </span>\n                </p>\n              </div>\n            </>\n          )}\n\n          <div className=\"mt-6 pt-4 border-t border-gray-200 text-center\">\n            <Link href=\"/dashboard\">\n              <a className=\"text-sm text-primary-600 hover:text-primary-700\" data-testid=\"link-back-dashboard\">\n                ← Back to Dashboard\n              </a>\n            </Link>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":13025},"client/src/pages/track-detail.tsx":{"content":"import { useQuery } from \"@tanstack/react-query\";\nimport { useRoute } from \"wouter\";\nimport Navigation from \"@/components/navigation\";\nimport { Button } from \"@/components/ui/button\";\nimport { ChevronLeft } from \"lucide-react\";\nimport { Link } from \"wouter\";\nimport type { Track, Lesson } from \"@shared/schema\";\n\ntype TrackWithLessons = Track & { lessons: Lesson[] };\n\nexport default function TrackDetail() {\n  const [, params] = useRoute(\"/tracks/:slug\");\n  const { data: track, isLoading } = useQuery<TrackWithLessons>({\n    queryKey: [\"/api/tracks\", params?.slug],\n    enabled: !!params?.slug,\n  });\n\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 text-slate-900 font-sans\">\n        <Navigation />\n        <main className=\"max-w-3xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n          <div className=\"animate-pulse\">\n            <div className=\"h-8 bg-gray-200 rounded w-1/4 mb-4\"></div>\n            <div className=\"h-10 bg-gray-200 rounded w-3/4 mb-2\"></div>\n            <div className=\"h-4 bg-gray-200 rounded w-full mb-8\"></div>\n            <div className=\"space-y-2\">\n              {[1, 2, 3].map((i) => (\n                <div key={i} className=\"h-12 bg-gray-200 rounded\"></div>\n              ))}\n            </div>\n          </div>\n        </main>\n      </div>\n    );\n  }\n\n  if (!track) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 text-slate-900 font-sans\">\n        <Navigation />\n        <main className=\"max-w-3xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n          <div className=\"text-center py-12\">\n            <p className=\"text-slate-500\" data-testid=\"text-track-not-found\">Track not found</p>\n          </div>\n        </main>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 text-slate-900 font-sans\">\n      <Navigation />\n      \n      <main className=\"max-w-3xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        <div className=\"mb-6\">\n          <Link href=\"/tracks\">\n            <Button variant=\"ghost\" className=\"mb-4\" data-testid=\"button-back\">\n              <ChevronLeft className=\"w-4 h-4 mr-2\" />\n              Back to Tracks\n            </Button>\n          </Link>\n          \n          <h1 className=\"text-2xl font-bold text-slate-900\" data-testid=\"text-track-title\">\n            {track.title}\n          </h1>\n          {track.summary && (\n            <p className=\"mt-2 text-slate-600\" data-testid=\"text-track-summary\">\n              {track.summary}\n            </p>\n          )}\n        </div>\n\n        {track.lessons && track.lessons.length > 0 ? (\n          <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 overflow-hidden\">\n            <div className=\"border-b border-gray-200 px-6 py-4\">\n              <h2 className=\"text-lg font-semibold text-slate-900\">Lessons</h2>\n            </div>\n            <ul className=\"divide-y divide-gray-200\">\n              {track.lessons.map((lesson: any, index: number) => (\n                <li key={lesson.id} className=\"p-6 hover:bg-gray-50 transition-colors\">\n                  <div className=\"flex items-center justify-between\">\n                    <div className=\"flex items-center space-x-4\">\n                      <div className={`w-8 h-8 rounded-full flex items-center justify-center text-sm font-medium ${\n                        index === 0 \n                          ? \"bg-primary-500 text-white\" \n                          : \"bg-gray-100 text-gray-600\"\n                      }`}>\n                        {lesson.order || index + 1}\n                      </div>\n                      <div>\n                        <h3 className=\"font-medium text-slate-900\" data-testid={`text-lesson-title-${lesson.id}`}>\n                          {lesson.title}\n                        </h3>\n                        <p className=\"text-sm text-slate-500\">\n                          {index === 0 ? \"Current lesson\" : \"Locked\"}\n                        </p>\n                      </div>\n                    </div>\n                    <div className=\"flex items-center space-x-2\">\n                      {index === 0 ? (\n                        <Link href={`/lessons/${lesson.id}`}>\n                          <Button \n                            size=\"sm\"\n                            className=\"bg-primary-500 hover:bg-primary-600 text-white\"\n                            data-testid={`button-start-lesson-${lesson.id}`}\n                          >\n                            Start Lesson\n                          </Button>\n                        </Link>\n                      ) : (\n                        <Button \n                          size=\"sm\" \n                          variant=\"outline\" \n                          disabled\n                          data-testid={`button-locked-lesson-${lesson.id}`}\n                        >\n                          Locked\n                        </Button>\n                      )}\n                    </div>\n                  </div>\n                </li>\n              ))}\n            </ul>\n          </div>\n        ) : (\n          <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6\">\n            <p className=\"text-slate-500 text-center\" data-testid=\"text-no-lessons\">\n              No lessons available for this track yet.\n            </p>\n          </div>\n        )}\n      </main>\n    </div>\n  );\n}\n","size_bytes":5304},"client/src/components/ui/accordion.tsx":{"content":"import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n","size_bytes":1977},"client/src/components/ui/alert-dialog.tsx":{"content":"import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n","size_bytes":4420},"client/src/components/ui/alert.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","size_bytes":1584},"client/src/components/ui/aspect-ratio.tsx":{"content":"import * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\"\n\nconst AspectRatio = AspectRatioPrimitive.Root\n\nexport { AspectRatio }\n","size_bytes":140},"client/src/components/ui/avatar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n","size_bytes":1419},"client/src/components/ui/badge.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n","size_bytes":1128},"client/src/components/ui/breadcrumb.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:w-3.5 [&>svg]:h-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n","size_bytes":2712},"client/src/components/ui/button.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","size_bytes":1901},"client/src/components/ui/calendar.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n","size_bytes":2695},"client/src/components/ui/card.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","size_bytes":1858},"client/src/components/ui/carousel.tsx":{"content":"import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n","size_bytes":6210},"client/src/components/ui/chart.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n","size_bytes":10481},"client/src/components/ui/checkbox.tsx":{"content":"import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","size_bytes":1056},"client/src/components/ui/collapsible.tsx":{"content":"\"use client\"\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n","size_bytes":329},"client/src/components/ui/command.tsx":{"content":"import * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\nconst CommandDialog = ({ children, ...props }: DialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n","size_bytes":4885},"client/src/components/ui/context-menu.tsx":{"content":"import * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </ContextMenuPrimitive.SubTrigger>\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"z-50 max-h-[--radix-context-menu-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n","size_bytes":7428},"client/src/components/ui/dialog.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","size_bytes":3848},"client/src/components/ui/drawer.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n","size_bytes":3021},"client/src/components/ui/dropdown-menu.tsx":{"content":"import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","size_bytes":7609},"client/src/components/ui/form.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","size_bytes":4120},"client/src/components/ui/hover-card.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-hover-card-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n","size_bytes":1251},"client/src/components/ui/input-otp.tsx":{"content":"import * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Dot } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive && \"z-10 ring-2 ring-ring ring-offset-background\",\n        className\n      )}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <Dot />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n","size_bytes":2154},"client/src/components/ui/input.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","size_bytes":791},"client/src/components/ui/label.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","size_bytes":710},"client/src/components/ui/menubar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction MenubarMenu({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {\n  return <MenubarPrimitive.Menu {...props} />\n}\n\nfunction MenubarGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Group>) {\n  return <MenubarPrimitive.Group {...props} />\n}\n\nfunction MenubarPortal({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {\n  return <MenubarPrimitive.Portal {...props} />\n}\n\nfunction MenubarRadioGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {\n  return <MenubarPrimitive.RadioGroup {...props} />\n}\n\nfunction MenubarSub({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {\n  return <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />\n}\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n","size_bytes":8605},"client/src/components/ui/navigation-menu.tsx":{"content":"import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[state=open]:text-accent-foreground data-[state=open]:bg-accent/50 data-[state=open]:hover:bg-accent data-[state=open]:focus:bg-accent\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n","size_bytes":5128},"client/src/components/ui/pagination.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps, buttonVariants } from \"@/components/ui/button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n","size_bytes":2751},"client/src/components/ui/popover.tsx":{"content":"import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-popover-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","size_bytes":1280},"client/src/components/ui/progress.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n","size_bytes":791},"client/src/components/ui/radio-group.tsx":{"content":"import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","size_bytes":1467},"client/src/components/ui/resizable.tsx":{"content":"\"use client\"\n\nimport { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <GripVertical className=\"h-2.5 w-2.5\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n","size_bytes":1723},"client/src/components/ui/scroll-area.tsx":{"content":"import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","size_bytes":1642},"client/src/components/ui/select.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","size_bytes":5742},"client/src/components/ui/separator.tsx":{"content":"import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","size_bytes":756},"client/src/components/ui/sheet.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n","size_bytes":4281},"client/src/components/ui/sidebar.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { VariantProps, cva } from \"class-variance-authority\"\nimport { PanelLeft } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContextProps = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContextProps | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nconst SidebarProvider = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    defaultOpen?: boolean\n    open?: boolean\n    onOpenChange?: (open: boolean) => void\n  }\n>(\n  (\n    {\n      defaultOpen = true,\n      open: openProp,\n      onOpenChange: setOpenProp,\n      className,\n      style,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const isMobile = useIsMobile()\n    const [openMobile, setOpenMobile] = React.useState(false)\n\n    // This is the internal state of the sidebar.\n    // We use openProp and setOpenProp for control from outside the component.\n    const [_open, _setOpen] = React.useState(defaultOpen)\n    const open = openProp ?? _open\n    const setOpen = React.useCallback(\n      (value: boolean | ((value: boolean) => boolean)) => {\n        const openState = typeof value === \"function\" ? value(open) : value\n        if (setOpenProp) {\n          setOpenProp(openState)\n        } else {\n          _setOpen(openState)\n        }\n\n        // This sets the cookie to keep the sidebar state.\n        document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n      },\n      [setOpenProp, open]\n    )\n\n    // Helper to toggle the sidebar.\n    const toggleSidebar = React.useCallback(() => {\n      return isMobile\n        ? setOpenMobile((open) => !open)\n        : setOpen((open) => !open)\n    }, [isMobile, setOpen, setOpenMobile])\n\n    // Adds a keyboard shortcut to toggle the sidebar.\n    React.useEffect(() => {\n      const handleKeyDown = (event: KeyboardEvent) => {\n        if (\n          event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n          (event.metaKey || event.ctrlKey)\n        ) {\n          event.preventDefault()\n          toggleSidebar()\n        }\n      }\n\n      window.addEventListener(\"keydown\", handleKeyDown)\n      return () => window.removeEventListener(\"keydown\", handleKeyDown)\n    }, [toggleSidebar])\n\n    // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n    // This makes it easier to style the sidebar with Tailwind classes.\n    const state = open ? \"expanded\" : \"collapsed\"\n\n    const contextValue = React.useMemo<SidebarContextProps>(\n      () => ({\n        state,\n        open,\n        setOpen,\n        isMobile,\n        openMobile,\n        setOpenMobile,\n        toggleSidebar,\n      }),\n      [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n    )\n\n    return (\n      <SidebarContext.Provider value={contextValue}>\n        <TooltipProvider delayDuration={0}>\n          <div\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH,\n                \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n                ...style,\n              } as React.CSSProperties\n            }\n            className={cn(\n              \"group/sidebar-wrapper flex min-h-svh w-full has-[[data-variant=inset]]:bg-sidebar\",\n              className\n            )}\n            ref={ref}\n            {...props}\n          >\n            {children}\n          </div>\n        </TooltipProvider>\n      </SidebarContext.Provider>\n    )\n  }\n)\nSidebarProvider.displayName = \"SidebarProvider\"\n\nconst Sidebar = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    side?: \"left\" | \"right\"\n    variant?: \"sidebar\" | \"floating\" | \"inset\"\n    collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n  }\n>(\n  (\n    {\n      side = \"left\",\n      variant = \"sidebar\",\n      collapsible = \"offcanvas\",\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n    if (collapsible === \"none\") {\n      return (\n        <div\n          className={cn(\n            \"flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground\",\n            className\n          )}\n          ref={ref}\n          {...props}\n        >\n          {children}\n        </div>\n      )\n    }\n\n    if (isMobile) {\n      return (\n        <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n          <SheetContent\n            data-sidebar=\"sidebar\"\n            data-mobile=\"true\"\n            className=\"w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden\"\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n              } as React.CSSProperties\n            }\n            side={side}\n          >\n            <SheetHeader className=\"sr-only\">\n              <SheetTitle>Sidebar</SheetTitle>\n              <SheetDescription>Displays the mobile sidebar.</SheetDescription>\n            </SheetHeader>\n            <div className=\"flex h-full w-full flex-col\">{children}</div>\n          </SheetContent>\n        </Sheet>\n      )\n    }\n\n    return (\n      <div\n        ref={ref}\n        className=\"group peer hidden text-sidebar-foreground md:block\"\n        data-state={state}\n        data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n        data-variant={variant}\n        data-side={side}\n      >\n        {/* This is what handles the sidebar gap on desktop */}\n        <div\n          className={cn(\n            \"relative w-[--sidebar-width] bg-transparent transition-[width] duration-200 ease-linear\",\n            \"group-data-[collapsible=offcanvas]:w-0\",\n            \"group-data-[side=right]:rotate-180\",\n            variant === \"floating\" || variant === \"inset\"\n              ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon]\"\n          )}\n        />\n        <div\n          className={cn(\n            \"fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] duration-200 ease-linear md:flex\",\n            side === \"left\"\n              ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n              : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n            // Adjust the padding for floating and inset variants.\n            variant === \"floating\" || variant === \"inset\"\n              ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n            className\n          )}\n          {...props}\n        >\n          <div\n            data-sidebar=\"sidebar\"\n            className=\"flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow\"\n          >\n            {children}\n          </div>\n        </div>\n      </div>\n    )\n  }\n)\nSidebar.displayName = \"Sidebar\"\n\nconst SidebarTrigger = React.forwardRef<\n  React.ElementRef<typeof Button>,\n  React.ComponentProps<typeof Button>\n>(({ className, onClick, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      ref={ref}\n      data-sidebar=\"trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeft />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n})\nSidebarTrigger.displayName = \"SidebarTrigger\"\n\nconst SidebarRail = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\">\n>(({ className, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <button\n      ref={ref}\n      data-sidebar=\"rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-sidebar-border group-data-[side=left]:-right-4 group-data-[side=right]:left-0 sm:flex\",\n        \"[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarRail.displayName = \"SidebarRail\"\n\nconst SidebarInset = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"main\">\n>(({ className, ...props }, ref) => {\n  return (\n    <main\n      ref={ref}\n      className={cn(\n        \"relative flex w-full flex-1 flex-col bg-background\",\n        \"md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInset.displayName = \"SidebarInset\"\n\nconst SidebarInput = React.forwardRef<\n  React.ElementRef<typeof Input>,\n  React.ComponentProps<typeof Input>\n>(({ className, ...props }, ref) => {\n  return (\n    <Input\n      ref={ref}\n      data-sidebar=\"input\"\n      className={cn(\n        \"h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInput.displayName = \"SidebarInput\"\n\nconst SidebarHeader = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarHeader.displayName = \"SidebarHeader\"\n\nconst SidebarFooter = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarFooter.displayName = \"SidebarFooter\"\n\nconst SidebarSeparator = React.forwardRef<\n  React.ElementRef<typeof Separator>,\n  React.ComponentProps<typeof Separator>\n>(({ className, ...props }, ref) => {\n  return (\n    <Separator\n      ref={ref}\n      data-sidebar=\"separator\"\n      className={cn(\"mx-2 w-auto bg-sidebar-border\", className)}\n      {...props}\n    />\n  )\n})\nSidebarSeparator.displayName = \"SidebarSeparator\"\n\nconst SidebarContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarContent.displayName = \"SidebarContent\"\n\nconst SidebarGroup = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarGroup.displayName = \"SidebarGroup\"\n\nconst SidebarGroupLabel = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupLabel.displayName = \"SidebarGroupLabel\"\n\nconst SidebarGroupAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupAction.displayName = \"SidebarGroupAction\"\n\nconst SidebarGroupContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"group-content\"\n    className={cn(\"w-full text-sm\", className)}\n    {...props}\n  />\n))\nSidebarGroupContent.displayName = \"SidebarGroupContent\"\n\nconst SidebarMenu = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu\"\n    className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n    {...props}\n  />\n))\nSidebarMenu.displayName = \"SidebarMenu\"\n\nconst SidebarMenuItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    data-sidebar=\"menu-item\"\n    className={cn(\"group/menu-item relative\", className)}\n    {...props}\n  />\n))\nSidebarMenuItem.displayName = \"SidebarMenuItem\"\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:!p-0\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst SidebarMenuButton = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    isActive?: boolean\n    tooltip?: string | React.ComponentProps<typeof TooltipContent>\n  } & VariantProps<typeof sidebarMenuButtonVariants>\n>(\n  (\n    {\n      asChild = false,\n      isActive = false,\n      variant = \"default\",\n      size = \"default\",\n      tooltip,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    const Comp = asChild ? Slot : \"button\"\n    const { isMobile, state } = useSidebar()\n\n    const button = (\n      <Comp\n        ref={ref}\n        data-sidebar=\"menu-button\"\n        data-size={size}\n        data-active={isActive}\n        className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n        {...props}\n      />\n    )\n\n    if (!tooltip) {\n      return button\n    }\n\n    if (typeof tooltip === \"string\") {\n      tooltip = {\n        children: tooltip,\n      }\n    }\n\n    return (\n      <Tooltip>\n        <TooltipTrigger asChild>{button}</TooltipTrigger>\n        <TooltipContent\n          side=\"right\"\n          align=\"center\"\n          hidden={state !== \"collapsed\" || isMobile}\n          {...tooltip}\n        />\n      </Tooltip>\n    )\n  }\n)\nSidebarMenuButton.displayName = \"SidebarMenuButton\"\n\nconst SidebarMenuAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    showOnHover?: boolean\n  }\n>(({ className, asChild = false, showOnHover = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuAction.displayName = \"SidebarMenuAction\"\n\nconst SidebarMenuBadge = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"menu-badge\"\n    className={cn(\n      \"pointer-events-none absolute right-1 flex h-5 min-w-5 select-none items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground\",\n      \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n      \"peer-data-[size=sm]/menu-button:top-1\",\n      \"peer-data-[size=default]/menu-button:top-1.5\",\n      \"peer-data-[size=lg]/menu-button:top-2.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuBadge.displayName = \"SidebarMenuBadge\"\n\nconst SidebarMenuSkeleton = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    showIcon?: boolean\n  }\n>(({ className, showIcon = false, ...props }, ref) => {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"flex h-8 items-center gap-2 rounded-md px-2\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 max-w-[--skeleton-width] flex-1\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n})\nSidebarMenuSkeleton.displayName = \"SidebarMenuSkeleton\"\n\nconst SidebarMenuSub = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu-sub\"\n    className={cn(\n      \"mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuSub.displayName = \"SidebarMenuSub\"\n\nconst SidebarMenuSubItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ ...props }, ref) => <li ref={ref} {...props} />)\nSidebarMenuSubItem.displayName = \"SidebarMenuSubItem\"\n\nconst SidebarMenuSubButton = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentProps<\"a\"> & {\n    asChild?: boolean\n    size?: \"sm\" | \"md\"\n    isActive?: boolean\n  }\n>(({ asChild = false, size = \"md\", isActive, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuSubButton.displayName = \"SidebarMenuSubButton\"\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n","size_bytes":23567},"client/src/components/ui/skeleton.tsx":{"content":"import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","size_bytes":261},"client/src/components/ui/slider.tsx":{"content":"import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n","size_bytes":1077},"client/src/components/ui/switch.tsx":{"content":"import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","size_bytes":1139},"client/src/components/ui/table.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","size_bytes":2765},"client/src/components/ui/tabs.tsx":{"content":"import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","size_bytes":1883},"client/src/components/ui/textarea.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","size_bytes":689},"client/src/components/ui/toast.tsx":{"content":"import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","size_bytes":4845},"client/src/components/ui/toaster.tsx":{"content":"import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","size_bytes":772},"client/src/components/ui/toggle-group.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n","size_bytes":1753},"client/src/components/ui/toggle.tsx":{"content":"import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 gap-2\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3 min-w-10\",\n        sm: \"h-9 px-2.5 min-w-9\",\n        lg: \"h-11 px-5 min-w-11\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n","size_bytes":1527},"client/src/components/ui/tooltip.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","size_bytes":1209},"client/src/components/ai-assistant.tsx":{"content":"import { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Dialog, DialogContent, DialogHeader, DialogTitle } from \"@/components/ui/dialog\";\nimport { MessageCircle, X, ExternalLink, Bot, Headphones } from \"lucide-react\";\n\nexport default function AIAssistant() {\n  const [isOpen, setIsOpen] = useState(false);\n  const [showIframe, setShowIframe] = useState(false);\n\n  const consultantUrl = \"https://chatgpt.com/g/g-6897d42d3ba48191b48883a4839c09bf-diver-well-commercial-diver-ai-consultant\";\n\n  const handleOpenConsultant = () => {\n    window.open(consultantUrl, '_blank', 'width=800,height=600,scrollbars=yes,resizable=yes');\n  };\n\n  const handleEmbedConsultant = () => {\n    setShowIframe(true);\n    setIsOpen(false);\n  };\n\n  return (\n    <>\n      {/* Floating AI Assistant Button */}\n      <div className=\"fixed bottom-6 right-6 z-50\">\n        <Button\n          onClick={() => setIsOpen(true)}\n          className=\"w-14 h-14 rounded-full bg-primary-500 hover:bg-primary-600 shadow-lg hover:shadow-xl transition-all duration-300 group\"\n          data-testid=\"button-ai-assistant\"\n        >\n          <div className=\"flex flex-col items-center\">\n            <Bot className=\"w-6 h-6 text-white group-hover:scale-110 transition-transform\" />\n          </div>\n        </Button>\n      </div>\n\n      {/* AI Assistant Options Dialog */}\n      <Dialog open={isOpen} onOpenChange={setIsOpen}>\n        <DialogContent className=\"sm:max-w-md\">\n          <DialogHeader>\n            <DialogTitle className=\"flex items-center gap-2\">\n              <Bot className=\"w-5 h-5 text-primary-600\" />\n              Diver Well AI Consultant\n            </DialogTitle>\n          </DialogHeader>\n          <div className=\"space-y-4\">\n            <p className=\"text-sm text-slate-600\">\n              Connect with your Commercial Diving AI Consultant for expert guidance, safety protocols, and professional diving advice.\n            </p>\n            \n            <div className=\"space-y-3\">\n              <Button\n                onClick={handleOpenConsultant}\n                className=\"w-full justify-start bg-primary-500 hover:bg-primary-600 text-white\"\n                data-testid=\"button-open-consultant\"\n              >\n                <ExternalLink className=\"w-4 h-4 mr-2\" />\n                Open AI Consultant (New Window)\n              </Button>\n              \n              <Button\n                onClick={handleEmbedConsultant}\n                variant=\"outline\"\n                className=\"w-full justify-start\"\n                data-testid=\"button-embed-consultant\"\n              >\n                <MessageCircle className=\"w-4 h-4 mr-2\" />\n                Chat Here (Embedded)\n              </Button>\n            </div>\n\n            <div className=\"bg-blue-50 p-3 rounded-lg\">\n              <div className=\"flex items-start gap-2\">\n                <Headphones className=\"w-4 h-4 text-blue-600 mt-0.5\" />\n                <div className=\"text-xs text-blue-800\">\n                  <strong>Your AI Diving Expert:</strong> Get instant answers about diving safety, equipment, regulations, emergency procedures, and commercial diving best practices.\n                </div>\n              </div>\n            </div>\n          </div>\n        </DialogContent>\n      </Dialog>\n\n      {/* Embedded ChatGPT Dialog */}\n      <Dialog open={showIframe} onOpenChange={setShowIframe}>\n        <DialogContent className=\"sm:max-w-4xl h-[80vh] p-0\">\n          <DialogHeader className=\"p-6 pb-2\">\n            <div className=\"flex items-center justify-between\">\n              <DialogTitle className=\"flex items-center gap-2\">\n                <Bot className=\"w-5 h-5 text-primary-600\" />\n                Diver Well - Commercial Diving AI Consultant\n              </DialogTitle>\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                onClick={() => setShowIframe(false)}\n                data-testid=\"button-close-embedded\"\n              >\n                <X className=\"w-4 h-4\" />\n              </Button>\n            </div>\n          </DialogHeader>\n          <div className=\"flex-1 p-6 pt-2\">\n            <div className=\"w-full h-full bg-gray-100 rounded-lg flex items-center justify-center\">\n              <div className=\"text-center space-y-4\">\n                <Bot className=\"w-12 h-12 text-primary-500 mx-auto\" />\n                <div className=\"space-y-2\">\n                  <h3 className=\"font-semibold text-lg\">AI Consultant Loading...</h3>\n                  <p className=\"text-sm text-slate-600 max-w-md\">\n                    For the best experience, we recommend opening the AI consultant in a new window.\n                  </p>\n                  <Button\n                    onClick={handleOpenConsultant}\n                    className=\"bg-primary-500 hover:bg-primary-600 text-white\"\n                  >\n                    <ExternalLink className=\"w-4 h-4 mr-2\" />\n                    Open in New Window\n                  </Button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </DialogContent>\n      </Dialog>\n    </>\n  );\n}","size_bytes":5193},"client/src/components/ai-tutor.tsx":{"content":"import { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { MessageSquare, Brain, Lightbulb, HelpCircle } from \"lucide-react\";\nimport { Alert, AlertDescription } from \"@/components/ui/alert\";\n\n// AI Tutor data for each track\nconst AI_TUTORS = {\n  \"inspection-ndt\": {\n    name: \"Sarah\",\n    specialty: \"NDT - a highly trained AI expert in the field of Non-Destructive Testing ready for real time Tutoring\",\n    avatar: \"👩‍🔬\",\n    background: \"20+ years in underwater inspection, PhD in Materials Engineering\",\n    traits: [\"Detail-oriented\", \"Technical expert\", \"Patient teacher\"],\n    responses: {\n      greeting: \"Hello! I'm Sarah, your AI tutor for underwater inspection and NDT. I've spent over 20 years perfecting underwater inspection techniques. What would you like to explore today?\",\n      concepts: [\n        \"Let's discuss cathodic protection systems and how they prevent corrosion in underwater structures.\",\n        \"I'll explain the physics behind ultrasonic thickness gauging - it's fascinating how sound waves help us see inside materials!\",\n        \"Would you like me to walk you through the magnetic particle inspection process step by step?\"\n      ],\n      tips: [\n        \"💡 Always calibrate your thickness gauge in the same medium you'll be testing - water affects ultrasonic readings.\",\n        \"⚠️ Remember: Visual inspection comes first, NDT methods confirm what we suspect.\",\n        \"🔍 Document everything! Your inspection report could save lives and prevent millions in damage.\"\n      ]\n    }\n  },\n  \"diver-medic-technician\": {\n    name: \"Mike\",\n    specialty: \"DMT - a highly trained AI expert in the field of Dive Medicine ready for real time Tutoring\",\n    avatar: \"👨‍⚕️\",\n    background: \"Emergency medicine physician, hyperbaric specialist\",\n    traits: [\"Emergency-focused\", \"Clear communicator\", \"Life-saving expertise\"],\n    responses: {\n      greeting: \"I'm Mike, your medical AI tutor. As an emergency physician specializing in diving medicine, I'm here to help you master life-saving techniques. Ready to learn?\",\n      concepts: [\n        \"Let's review the ABCDE assessment protocol - it's your foundation for any diving emergency.\",\n        \"I want to show you how to recognize and treat decompression sickness quickly and effectively.\",\n        \"Understanding nitrogen narcosis symptoms could save a diver's life - let me explain the signs.\"\n      ],\n      tips: [\n        \"🚨 In diving emergencies, time is brain tissue - act fast but think faster.\",\n        \"💨 High-flow oxygen is your best friend in almost every diving accident.\",\n        \"📞 Always have emergency contact numbers memorized - seconds count in real emergencies.\"\n      ]\n    }\n  },\n  \"commercial-dive-supervisor\": {\n    name: \"David\",\n    specialty: \"Commercial Dive Supervisor Training - a highly trained AI expert in the field of Commercial Diving Operations ready for real time Tutoring\",\n    avatar: \"👨‍✈️\",\n    background: \"30 years commercial diving, former Navy dive supervisor\",\n    traits: [\"Leadership-focused\", \"Safety-first\", \"Decision maker\"],\n    responses: {\n      greeting: \"David here! I've supervised thousands of commercial dives. Leadership underwater requires split-second decisions and absolute safety focus. Let's build your command skills.\",\n      concepts: [\n        \"Risk assessment isn't just a checklist - it's a mindset that saves lives. Let me show you my approach.\",\n        \"Communication protocols can make or break a dive operation. I'll teach you the standards that matter.\",\n        \"Emergency response planning: Hope for the best, prepare for the worst. Here's how we do it.\"\n      ],\n      tips: [\n        \"🎯 A good supervisor is always thinking three steps ahead of the current operation.\",\n        \"📋 Your pre-dive briefing sets the tone for safety - make every word count.\",\n        \"⚡ When things go wrong, stay calm, communicate clearly, execute the plan.\"\n      ]\n    }\n  },\n  \"air-diving-life-support-technician\": {\n    name: \"Jennifer\",\n    specialty: \"ALST - a highly trained AI expert in the field of Air Diving Life Support ready for real time Tutoring\",\n    avatar: \"👩‍⚕️\",\n    background: \"Life support systems specialist, 15+ years commercial diving\",\n    traits: [\"Systems-focused\", \"Safety expert\", \"Technical precision\"],\n    responses: {\n      greeting: \"I'm Jennifer, your life support AI tutor. I specialize in keeping divers alive through proper air systems management. Ready to master life support systems?\",\n      concepts: [\n        \"Let's explore how breathing gas mixtures affect diver performance and safety underwater.\",\n        \"I'll show you how to calculate surface air consumption rates and plan gas supplies accordingly.\",\n        \"Understanding compressor maintenance is critical - contaminated air kills divers.\"\n      ],\n      tips: [\n        \"🔧 Regular compressor maintenance isn't optional - it's life insurance for your divers.\",\n        \"📊 Always monitor gas consumption rates - they tell you everything about diver stress and efficiency.\",\n        \"⚠️ Never compromise on air quality testing - your reputation and lives depend on it.\"\n      ]\n    }\n  },\n  \"limited-surface-supplied-tender\": {\n    name: \"Robert\", \n    specialty: \"LST - a highly trained AI expert in the field of Limited Surface Supply ready for real time Tutoring\",\n    avatar: \"👨‍🔧\",\n    background: \"Surface supply specialist, tender operations expert\",\n    traits: [\"Detail-oriented\", \"Communication expert\", \"Reliability-focused\"],\n    responses: {\n      greeting: \"Robert here! I'm your surface supply AI tutor. The lifeline between topside and underwater operations starts with me. Let's ensure perfect communication and supply.\",\n      concepts: [\n        \"Proper tender procedures can save a diver's life - let me show you the critical steps.\",\n        \"Communication protocols between tender and diver must be flawless - here's how we achieve that.\",\n        \"Understanding umbilical management prevents entanglement and ensures continuous life support.\"\n      ],\n      tips: [\n        \"🎧 Clear communication saves lives - always confirm your messages are understood.\",\n        \"🔄 Keep your umbilical organized - a tangled line can become a death trap.\",\n        \"👁️ Watch your diver's bubbles - they tell you everything about their condition below.\"\n      ]\n    }\n  },\n  \"saturation-diving\": {\n    name: \"Lisa\",\n    specialty: \"SAT - a highly trained AI expert in the field of Saturation Diving ready for real time Tutoring\", \n    avatar: \"👩‍🚀\",\n    background: \"Saturation diving specialist, deep water operations expert\",\n    traits: [\"Precision-focused\", \"System expert\", \"Deep-water specialist\"],\n    responses: {\n      greeting: \"I'm Lisa, your saturation diving AI tutor. Sat diving is the ultimate test of diving technology and human endurance. Ready to explore the deep?\",\n      concepts: [\n        \"Saturation physiology changes everything we know about diving - let me explain the science.\",\n        \"Decompression planning for sat diving requires mathematical precision - here's the approach.\",\n        \"Life support systems in saturation must be redundant and flawless - I'll show you why.\"\n      ],\n      tips: [\n        \"📈 In sat diving, small mistakes compound into major problems - attention to detail is everything.\",\n        \"🏠 The sat system is your home for days or weeks - treat it with respect and understanding.\",\n        \"⏰ Decompression can't be rushed - patience and precision save lives in sat operations.\"\n      ]\n    }\n  },\n  \"scientific-and-education-diving\": {\n    name: \"Amanda\",\n    specialty: \"SSED - a highly trained AI expert in the field of Scientific & Educational Diving ready for real time Tutoring\",\n    avatar: \"👩‍🎓\", \n    background: \"Scientific diving operations, marine research specialist\",\n    traits: [\"Research-focused\", \"Educational\", \"Environmentally conscious\"],\n    responses: {\n      greeting: \"I'm Amanda, your scientific diving AI tutor. Combining rigorous science with safe diving practices opens underwater worlds for research. Let's explore together!\",\n      concepts: [\n        \"Scientific diving protocols balance research objectives with absolute safety requirements.\",\n        \"Data collection underwater requires specialized techniques and equipment - I'll guide you through them.\",\n        \"Environmental awareness in scientific diving protects both divers and marine ecosystems.\"\n      ],\n      tips: [\n        \"📋 Document everything during scientific dives - your data might change the world.\",\n        \"🌊 Respect the marine environment - we're visitors in their world.\",\n        \"🔬 Proper sample collection techniques ensure data integrity and environmental protection.\"\n      ]\n    }\n  }\n};\n\ninterface AITutorProps {\n  trackSlug: string;\n  lessonTitle?: string;\n}\n\nexport default function AITutor({ trackSlug, lessonTitle }: AITutorProps) {\n  const [activeTab, setActiveTab] = useState<\"chat\" | \"concepts\" | \"tips\">(\"chat\");\n  const [messages, setMessages] = useState<Array<{ type: \"tutor\" | \"user\"; content: string }>>([]);\n  const [inputMessage, setInputMessage] = useState(\"\");\n\n  const tutor = AI_TUTORS[trackSlug as keyof typeof AI_TUTORS];\n\n  if (!tutor) {\n    return null;\n  }\n\n  const handleSendMessage = () => {\n    if (!inputMessage.trim()) return;\n\n    const newMessages = [\n      ...messages,\n      { type: \"user\" as const, content: inputMessage },\n      { \n        type: \"tutor\" as const, \n        content: generateTutorResponse(inputMessage, tutor, lessonTitle) \n      }\n    ];\n    \n    setMessages(newMessages);\n    setInputMessage(\"\");\n  };\n\n  const startConversation = () => {\n    if (messages.length === 0) {\n      setMessages([{ type: \"tutor\", content: tutor.responses.greeting }]);\n      setActiveTab(\"chat\");\n    }\n  };\n\n  return (\n    <Card className=\"mt-8 border-blue-200 bg-gradient-to-br from-blue-50 to-indigo-50\">\n      <CardHeader className=\"pb-4\">\n        <div className=\"flex items-center space-x-4\">\n          <div className=\"text-4xl\">{tutor.avatar}</div>\n          <div>\n            <CardTitle className=\"text-xl text-blue-900\" data-testid=\"text-tutor-name\">\n              {tutor.name}\n            </CardTitle>\n            <p className=\"text-blue-700 font-medium\">{tutor.specialty}</p>\n            <p className=\"text-sm text-blue-600\">{tutor.background}</p>\n          </div>\n        </div>\n        <div className=\"flex gap-2 mt-3\">\n          {tutor.traits.map((trait, index) => (\n            <Badge key={index} variant=\"secondary\" className=\"bg-blue-100 text-blue-800\">\n              {trait}\n            </Badge>\n          ))}\n        </div>\n      </CardHeader>\n\n      <CardContent>\n        <div className=\"flex space-x-2 mb-4\">\n          <Button\n            variant={activeTab === \"chat\" ? \"default\" : \"outline\"}\n            size=\"sm\"\n            onClick={() => setActiveTab(\"chat\")}\n            className=\"flex items-center gap-2\"\n            data-testid=\"button-chat-tab\"\n          >\n            <MessageSquare className=\"w-4 h-4\" />\n            Chat\n          </Button>\n          <Button\n            variant={activeTab === \"concepts\" ? \"default\" : \"outline\"}\n            size=\"sm\"\n            onClick={() => setActiveTab(\"concepts\")}\n            className=\"flex items-center gap-2\"\n            data-testid=\"button-concepts-tab\"\n          >\n            <Brain className=\"w-4 h-4\" />\n            Key Concepts\n          </Button>\n          <Button\n            variant={activeTab === \"tips\" ? \"default\" : \"outline\"}\n            size=\"sm\"\n            onClick={() => setActiveTab(\"tips\")}\n            className=\"flex items-center gap-2\"\n            data-testid=\"button-tips-tab\"\n          >\n            <Lightbulb className=\"w-4 h-4\" />\n            Pro Tips\n          </Button>\n        </div>\n\n        {activeTab === \"chat\" && (\n          <div className=\"space-y-4\">\n            {messages.length === 0 ? (\n              <div className=\"text-center py-8\">\n                <MessageSquare className=\"w-12 h-12 mx-auto text-blue-400 mb-4\" />\n                <p className=\"text-blue-700 mb-4\">Start a conversation with your AI tutor!</p>\n                <Button onClick={startConversation} data-testid=\"button-start-chat\">\n                  Begin Learning Session\n                </Button>\n              </div>\n            ) : (\n              <div className=\"space-y-3 max-h-64 overflow-y-auto\">\n                {messages.map((message, index) => (\n                  <div\n                    key={index}\n                    className={`p-3 rounded-lg ${\n                      message.type === \"tutor\"\n                        ? \"bg-blue-100 text-blue-900\"\n                        : \"bg-white text-slate-900 ml-8\"\n                    }`}\n                    data-testid={`message-${message.type}`}\n                  >\n                    <strong>{message.type === \"tutor\" ? tutor.name : \"You\"}:</strong> {message.content}\n                  </div>\n                ))}\n              </div>\n            )}\n            \n            {messages.length > 0 && (\n              <div className=\"flex gap-2\">\n                <input\n                  type=\"text\"\n                  value={inputMessage}\n                  onChange={(e) => setInputMessage(e.target.value)}\n                  onKeyPress={(e) => e.key === \"Enter\" && handleSendMessage()}\n                  placeholder=\"Ask your tutor a question...\"\n                  className=\"flex-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  data-testid=\"input-chat-message\"\n                />\n                <Button onClick={handleSendMessage} data-testid=\"button-send-message\">\n                  Send\n                </Button>\n              </div>\n            )}\n          </div>\n        )}\n\n        {activeTab === \"concepts\" && (\n          <div className=\"space-y-3\">\n            {tutor.responses.concepts.map((concept, index) => (\n              <Alert key={index} className=\"border-blue-200 bg-blue-50\">\n                <Brain className=\"h-4 w-4 text-blue-600\" />\n                <AlertDescription className=\"text-blue-800\">\n                  {concept}\n                </AlertDescription>\n              </Alert>\n            ))}\n          </div>\n        )}\n\n        {activeTab === \"tips\" && (\n          <div className=\"space-y-3\">\n            {tutor.responses.tips.map((tip, index) => (\n              <Alert key={index} className=\"border-amber-200 bg-amber-50\">\n                <Lightbulb className=\"h-4 w-4 text-amber-600\" />\n                <AlertDescription className=\"text-amber-800\">\n                  {tip}\n                </AlertDescription>\n              </Alert>\n            ))}\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  );\n}\n\n// Generate contextual responses based on user input and lesson content\nfunction generateTutorResponse(userInput: string, tutor: any, lessonTitle?: string): string {\n  const input = userInput.toLowerCase();\n  \n  // Context-aware responses based on lesson title and user input\n  if (input.includes(\"help\") || input.includes(\"explain\")) {\n    return `I'd be happy to help! Based on what we're covering${lessonTitle ? ` in \"${lessonTitle}\"` : \"\"}, here's my explanation: ${tutor.responses.concepts[0]}`;\n  }\n  \n  if (input.includes(\"emergency\") || input.includes(\"danger\")) {\n    return \"Emergency situations require immediate, methodical response. Remember your training: assess the situation, ensure safety, then act decisively. What specific emergency scenario would you like to discuss?\";\n  }\n  \n  if (input.includes(\"equipment\") || input.includes(\"tool\")) {\n    return \"Equipment knowledge is crucial for safety and efficiency. Each tool has its specific purpose and limitations. What equipment would you like to learn more about?\";\n  }\n  \n  if (input.includes(\"safety\") || input.includes(\"risk\")) {\n    return \"Safety is paramount in our field. Every procedure, every decision, every action should be evaluated through the lens of risk management. What safety concern can I help address?\";\n  }\n  \n  // Default encouraging response\n  const encouragingResponses = [\n    \"That's a great question! Let me share my experience with that topic.\",\n    \"I appreciate your curiosity. In my years of experience, I've found that...\",\n    \"Excellent thinking! This is exactly the kind of question that shows you're developing professional judgment.\",\n    \"Your question demonstrates good awareness. Here's what I've learned over the years...\"\n  ];\n  \n  return encouragingResponses[Math.floor(Math.random() * encouragingResponses.length)] + \" Feel free to ask me more specific questions about the techniques and procedures we're covering.\";\n}","size_bytes":16938},"client/src/components/practice-scenario.tsx":{"content":"import { useState } from \"react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Alert, AlertDescription } from \"@/components/ui/alert\";\nimport { Play, CheckCircle, AlertTriangle, Wrench, Users, Clock } from \"lucide-react\";\n\n// Practice scenarios for each track\nconst PRACTICE_SCENARIOS = {\n  \"inspection-ndt\": [\n    {\n      id: \"pier-inspection\",\n      title: \"Offshore Platform Pier Inspection\",\n      difficulty: \"Intermediate\",\n      duration: \"45 minutes\",\n      scenario: \"You're tasked with inspecting the underwater foundations of an offshore drilling platform. Recent storms have raised concerns about structural integrity.\",\n      objectives: [\n        \"Conduct visual inspection of concrete piers\",\n        \"Perform ultrasonic thickness testing on critical joints\",\n        \"Document any signs of corrosion or cracking\",\n        \"Recommend immediate actions if critical issues found\"\n      ],\n      challenges: [\n        \"Limited visibility due to murky water\",\n        \"Strong currents requiring careful positioning\",\n        \"Time pressure due to weather window\",\n        \"Critical infrastructure - zero tolerance for errors\"\n      ],\n      tools: [\"Ultrasonic thickness gauge\", \"Underwater camera\", \"Crack measurement tools\", \"Documentation slate\"],\n      outcome: \"Based on your findings, determine if the platform can continue operations or requires immediate repairs.\"\n    },\n    {\n      id: \"ship-hull-survey\",\n      title: \"Commercial Ship Hull Survey\",\n      difficulty: \"Advanced\",\n      duration: \"60 minutes\",\n      scenario: \"A cargo vessel requires mandatory 5-year hull inspection. Insurance and port authorities need comprehensive documentation.\",\n      objectives: [\n        \"Complete hull thickness measurements at specified points\",\n        \"Inspect propeller and rudder assemblies\",\n        \"Check sea chest and through-hull fittings\",\n        \"Generate certification-ready report\"\n      ],\n      challenges: [\n        \"Large surface area to cover systematically\",\n        \"Varying steel thickness across hull zones\",\n        \"Port scheduling pressure\",\n        \"International certification standards\"\n      ],\n      tools: [\"Multi-frequency thickness gauge\", \"Magnetic particle test kit\", \"High-resolution camera\", \"Measurement tools\"],\n      outcome: \"Produce inspection report meeting classification society standards for vessel certification.\"\n    }\n  ],\n  \"diver-medic-technician\": [\n    {\n      id: \"decompression-emergency\",\n      title: \"Decompression Sickness Emergency\",\n      difficulty: \"Expert\",\n      duration: \"30 minutes\",\n      scenario: \"A commercial diver surfaces rapidly after a deep saturation dive. They're experiencing joint pain, dizziness, and difficulty breathing.\",\n      objectives: [\n        \"Rapid assessment using ABCDE protocol\",\n        \"Identify decompression sickness symptoms\",\n        \"Initiate appropriate emergency treatment\",\n        \"Coordinate hyperbaric chamber transport\"\n      ],\n      challenges: [\n        \"Multiple symptoms presenting simultaneously\",\n        \"Patient anxiety affecting cooperation\",\n        \"Remote location - limited resources\",\n        \"Weather affecting evacuation options\"\n      ],\n      tools: [\"High-flow oxygen delivery\", \"Vital signs monitoring\", \"IV access kit\", \"Emergency medications\"],\n      outcome: \"Stabilize patient and ensure safe transport to hyperbaric treatment facility.\"\n    },\n    {\n      id: \"near-drowning-rescue\",\n      title: \"Near-Drowning Incident Response\",\n      difficulty: \"Advanced\",\n      duration: \"25 minutes\",\n      scenario: \"An unconscious diver has been brought to the surface. They're not breathing and show no signs of circulation.\",\n      objectives: [\n        \"Immediate airway assessment and management\",\n        \"Begin CPR if indicated\",\n        \"Manage potential cervical spine injury\",\n        \"Prepare for advanced life support\"\n      ],\n      challenges: [\n        \"Potential water in lungs complicating ventilation\",\n        \"Unknown duration of submersion\",\n        \"Possible hypothermia\",\n        \"Need to protect cervical spine\"\n      ],\n      tools: [\"BVM resuscitator\", \"Cervical collar\", \"Suction device\", \"AED\"],\n      outcome: \"Restore breathing and circulation, prepare for emergency medical transport.\"\n    }\n  ],\n  \"commercial-dive-supervisor\": [\n    {\n      id: \"emergency-ascent-procedure\",\n      title: \"Emergency Ascent Situation\",\n      difficulty: \"Expert\",\n      duration: \"40 minutes\",\n      scenario: \"Your diver reports equipment malfunction at 100ft depth. Life support systems are failing and emergency ascent may be required.\",\n      objectives: [\n        \"Assess diver's condition and equipment status\",\n        \"Evaluate ascent options and risks\",\n        \"Coordinate surface support team\",\n        \"Execute emergency response protocol\"\n      ],\n      challenges: [\n        \"Decompression obligations vs. life threat\",\n        \"Equipment failure diagnosis under pressure\",\n        \"Team coordination under stress\",\n        \"Multiple contingency plans needed\"\n      ],\n      tools: [\"Surface communication system\", \"Emergency gas supplies\", \"Decompression tables\", \"Dive computer\"],\n      outcome: \"Safely recover diver while minimizing decompression injury risk.\"\n    },\n    {\n      id: \"lost-diver-search\",\n      title: \"Lost Diver Search & Rescue\",\n      difficulty: \"Advanced\",\n      duration: \"50 minutes\",\n      scenario: \"A diver has missed their scheduled check-in by 15 minutes. Last known position was near underwater obstructions.\",\n      objectives: [\n        \"Organize systematic search pattern\",\n        \"Deploy backup divers safely\",\n        \"Coordinate with surface vessels\",\n        \"Maintain communication protocols\"\n      ],\n      challenges: [\n        \"Time pressure affecting decision quality\",\n        \"Limited underwater visibility\",\n        \"Multiple team coordination\",\n        \"Balancing speed vs. safety\"\n      ],\n      tools: [\"Search patterns chart\", \"Backup diving systems\", \"Surface communication\", \"GPS positioning\"],\n      outcome: \"Locate missing diver and coordinate safe recovery operation.\"\n    }\n  ]\n};\n\ninterface PracticeScenarioProps {\n  trackSlug: string;\n}\n\nexport default function PracticeScenario({ trackSlug }: PracticeScenarioProps) {\n  const [selectedScenario, setSelectedScenario] = useState<string | null>(null);\n  const [scenarioPhase, setScenarioPhase] = useState<\"briefing\" | \"active\" | \"debrief\">(\"briefing\");\n  const [userActions, setUserActions] = useState<string[]>([]);\n\n  const scenarios = PRACTICE_SCENARIOS[trackSlug as keyof typeof PRACTICE_SCENARIOS] || [];\n\n  if (scenarios.length === 0) {\n    return null;\n  }\n\n  const currentScenario = scenarios.find(s => s.id === selectedScenario);\n\n  const startScenario = (scenarioId: string) => {\n    setSelectedScenario(scenarioId);\n    setScenarioPhase(\"briefing\");\n    setUserActions([]);\n  };\n\n  const beginScenario = () => {\n    setScenarioPhase(\"active\");\n  };\n\n  const completeScenario = () => {\n    setScenarioPhase(\"debrief\");\n  };\n\n  const resetScenario = () => {\n    setSelectedScenario(null);\n    setScenarioPhase(\"briefing\");\n    setUserActions([]);\n  };\n\n  if (!selectedScenario) {\n    return (\n      <Card className=\"mt-8 border-green-200 bg-gradient-to-br from-green-50 to-emerald-50\">\n        <CardHeader>\n          <CardTitle className=\"text-xl text-green-900 flex items-center gap-2\">\n            <Play className=\"w-5 h-5\" />\n            Practice Scenarios\n          </CardTitle>\n          <p className=\"text-green-700\">\n            Test your skills with realistic diving scenarios based on real-world situations.\n          </p>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid gap-4\">\n            {scenarios.map((scenario) => (\n              <div\n                key={scenario.id}\n                className=\"border border-green-200 rounded-lg p-4 hover:bg-green-50 transition-colors\"\n                data-testid={`scenario-card-${scenario.id}`}\n              >\n                <div className=\"flex items-center justify-between mb-3\">\n                  <h3 className=\"font-semibold text-green-900\">{scenario.title}</h3>\n                  <div className=\"flex gap-2\">\n                    <Badge \n                      variant={scenario.difficulty === \"Expert\" ? \"destructive\" : scenario.difficulty === \"Advanced\" ? \"default\" : \"secondary\"}\n                      className=\"text-xs\"\n                    >\n                      {scenario.difficulty}\n                    </Badge>\n                    <Badge variant=\"outline\" className=\"text-xs flex items-center gap-1\">\n                      <Clock className=\"w-3 h-3\" />\n                      {scenario.duration}\n                    </Badge>\n                  </div>\n                </div>\n                <p className=\"text-sm text-green-700 mb-3\">{scenario.scenario}</p>\n                <div className=\"flex items-center gap-4 text-xs text-green-600\">\n                  <span className=\"flex items-center gap-1\">\n                    <Users className=\"w-3 h-3\" />\n                    {scenario.objectives.length} objectives\n                  </span>\n                  <span className=\"flex items-center gap-1\">\n                    <AlertTriangle className=\"w-3 h-3\" />\n                    {scenario.challenges.length} challenges\n                  </span>\n                  <span className=\"flex items-center gap-1\">\n                    <Wrench className=\"w-3 h-3\" />\n                    {scenario.tools.length} tools\n                  </span>\n                </div>\n                <Button\n                  onClick={() => startScenario(scenario.id)}\n                  className=\"w-full mt-3 bg-green-600 hover:bg-green-700\"\n                  data-testid={`button-start-${scenario.id}`}\n                >\n                  Start Scenario\n                </Button>\n              </div>\n            ))}\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  if (!currentScenario) return null;\n\n  return (\n    <Card className=\"mt-8 border-green-200 bg-gradient-to-br from-green-50 to-emerald-50\">\n      <CardHeader>\n        <div className=\"flex items-center justify-between\">\n          <CardTitle className=\"text-xl text-green-900\">{currentScenario.title}</CardTitle>\n          <Button variant=\"outline\" onClick={resetScenario} data-testid=\"button-exit-scenario\">\n            Exit Scenario\n          </Button>\n        </div>\n        <div className=\"flex gap-2\">\n          <Badge variant={currentScenario.difficulty === \"Expert\" ? \"destructive\" : \"default\"}>\n            {currentScenario.difficulty}\n          </Badge>\n          <Badge variant=\"outline\" className=\"flex items-center gap-1\">\n            <Clock className=\"w-3 h-3\" />\n            {currentScenario.duration}\n          </Badge>\n        </div>\n      </CardHeader>\n\n      <CardContent>\n        {scenarioPhase === \"briefing\" && (\n          <div className=\"space-y-6\">\n            <Alert className=\"border-blue-200 bg-blue-50\">\n              <AlertTriangle className=\"h-4 w-4 text-blue-600\" />\n              <AlertDescription className=\"text-blue-800\">\n                <strong>Scenario:</strong> {currentScenario.scenario}\n              </AlertDescription>\n            </Alert>\n\n            <div>\n              <h3 className=\"font-semibold text-green-900 mb-3\">Mission Objectives:</h3>\n              <ul className=\"space-y-2\">\n                {currentScenario.objectives.map((objective, index) => (\n                  <li key={index} className=\"flex items-start gap-2 text-green-800\">\n                    <CheckCircle className=\"w-4 h-4 mt-0.5 text-green-600\" />\n                    {objective}\n                  </li>\n                ))}\n              </ul>\n            </div>\n\n            <div>\n              <h3 className=\"font-semibold text-green-900 mb-3\">Expected Challenges:</h3>\n              <ul className=\"space-y-2\">\n                {currentScenario.challenges.map((challenge, index) => (\n                  <li key={index} className=\"flex items-start gap-2 text-amber-800\">\n                    <AlertTriangle className=\"w-4 h-4 mt-0.5 text-amber-600\" />\n                    {challenge}\n                  </li>\n                ))}\n              </ul>\n            </div>\n\n            <div>\n              <h3 className=\"font-semibold text-green-900 mb-3\">Available Tools:</h3>\n              <div className=\"flex flex-wrap gap-2\">\n                {currentScenario.tools.map((tool, index) => (\n                  <Badge key={index} variant=\"secondary\" className=\"bg-green-100 text-green-800\">\n                    {tool}\n                  </Badge>\n                ))}\n              </div>\n            </div>\n\n            <Alert className=\"border-green-200 bg-green-50\">\n              <CheckCircle className=\"h-4 w-4 text-green-600\" />\n              <AlertDescription className=\"text-green-800\">\n                <strong>Success Criteria:</strong> {currentScenario.outcome}\n              </AlertDescription>\n            </Alert>\n\n            <Button\n              onClick={beginScenario}\n              className=\"w-full bg-green-600 hover:bg-green-700\"\n              data-testid=\"button-begin-scenario\"\n            >\n              Begin Scenario\n            </Button>\n          </div>\n        )}\n\n        {scenarioPhase === \"active\" && (\n          <div className=\"space-y-6\">\n            <Alert className=\"border-amber-200 bg-amber-50\">\n              <Play className=\"h-4 w-4 text-amber-600\" />\n              <AlertDescription className=\"text-amber-800\">\n                <strong>Scenario Active:</strong> Use your training to work through this situation step by step.\n              </AlertDescription>\n            </Alert>\n\n            <div className=\"text-center py-12\">\n              <div className=\"text-6xl mb-4\">🤿</div>\n              <h3 className=\"text-xl font-semibold text-green-900 mb-4\">You are now in the scenario</h3>\n              <p className=\"text-green-700 mb-6\">\n                Apply your knowledge and training to handle this situation. Consider each step carefully.\n              </p>\n              <Button\n                onClick={completeScenario}\n                className=\"bg-green-600 hover:bg-green-700\"\n                data-testid=\"button-complete-scenario\"\n              >\n                Complete Scenario\n              </Button>\n            </div>\n          </div>\n        )}\n\n        {scenarioPhase === \"debrief\" && (\n          <div className=\"space-y-6\">\n            <Alert className=\"border-green-200 bg-green-50\">\n              <CheckCircle className=\"h-4 w-4 text-green-600\" />\n              <AlertDescription className=\"text-green-800\">\n                <strong>Scenario Complete!</strong> Well done working through this challenging situation.\n              </AlertDescription>\n            </Alert>\n\n            <div>\n              <h3 className=\"font-semibold text-green-900 mb-3\">Key Learning Points:</h3>\n              <ul className=\"space-y-2 text-green-800\">\n                <li>• Systematic approach to emergency situations</li>\n                <li>• Importance of following established protocols</li>\n                <li>• Communication and teamwork under pressure</li>\n                <li>• Balancing speed with safety considerations</li>\n              </ul>\n            </div>\n\n            <div className=\"flex gap-3\">\n              <Button\n                onClick={resetScenario}\n                variant=\"outline\"\n                className=\"flex-1\"\n                data-testid=\"button-try-another\"\n              >\n                Try Another Scenario\n              </Button>\n              <Button\n                onClick={() => setScenarioPhase(\"briefing\")}\n                className=\"flex-1 bg-green-600 hover:bg-green-700\"\n                data-testid=\"button-retry-scenario\"\n              >\n                Retry This Scenario\n              </Button>\n            </div>\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  );\n}","size_bytes":16074},"client/src/pages/analytics.tsx":{"content":"import { useQuery } from \"@tanstack/react-query\";\nimport Navigation from \"@/components/navigation\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, LineChart, Line, PieChart, Pie, Cell } from 'recharts';\nimport { TrendingUp, Users, BookOpen, Award, Clock, Target, Download, Activity } from \"lucide-react\";\nimport { Alert, AlertDescription } from \"@/components/ui/alert\";\n\ninterface QuizAnalytics {\n  quizStats: Array<{\n    id: string;\n    title: string;\n    lesson_title: string;\n    track_title: string;\n    total_attempts: number;\n    avg_score: number;\n    max_score: number;\n    min_score: number;\n  }>;\n  trackStats: Array<{\n    id: string;\n    title: string;\n    total_lessons: number;\n    total_quizzes: number;\n    total_attempts: number;\n    avg_score: number;\n  }>;\n  recentAttempts: Array<{\n    id: string;\n    score: number;\n    total_questions: number;\n    created_at: string;\n    quiz_title: string;\n    lesson_title: string;\n    track_title: string;\n  }>;\n}\n\nexport default function Analytics() {\n  const { data: analytics, isLoading } = useQuery<QuizAnalytics>({\n    queryKey: [\"/api/analytics/quiz\"],\n  });\n\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 text-slate-900 font-sans\">\n        <Navigation />\n        <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n          <div className=\"animate-pulse\">\n            <div className=\"h-8 bg-gray-200 rounded w-1/3 mb-6\"></div>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\">\n              {[1, 2, 3, 4].map((i) => (\n                <div key={i} className=\"h-32 bg-gray-200 rounded-lg\"></div>\n              ))}\n            </div>\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n              <div className=\"h-64 bg-gray-200 rounded-lg\"></div>\n              <div className=\"h-64 bg-gray-200 rounded-lg\"></div>\n            </div>\n          </div>\n        </main>\n      </div>\n    );\n  }\n\n  if (!analytics) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 text-slate-900 font-sans\">\n        <Navigation />\n        <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n          <Alert className=\"border-red-200 bg-red-50\">\n            <AlertDescription className=\"text-red-800\">\n              Unable to load analytics data. Please try again later.\n            </AlertDescription>\n          </Alert>\n        </main>\n      </div>\n    );\n  }\n\n  // Calculate overview metrics\n  const totalAttempts = analytics.trackStats.reduce((sum, track) => sum + (track.total_attempts || 0), 0);\n  const totalQuizzes = analytics.trackStats.reduce((sum, track) => sum + (track.total_quizzes || 0), 0);\n  const totalTracks = analytics.trackStats.length;\n  const overallAvgScore = analytics.trackStats.length > 0 \n    ? analytics.trackStats.reduce((sum, track) => sum + (track.avg_score || 0), 0) / analytics.trackStats.length \n    : 0;\n\n  // Prepare chart data\n  const trackChartData = analytics.trackStats.map(track => ({\n    name: track.title?.substring(0, 20) + (track.title?.length > 20 ? '...' : ''),\n    attempts: track.total_attempts || 0,\n    avgScore: Math.round((track.avg_score || 0) * 10) / 10,\n    quizzes: track.total_quizzes || 0\n  }));\n\n  const pieChartData = analytics.trackStats.map((track, index) => ({\n    name: track.title?.substring(0, 15) + (track.title?.length > 15 ? '...' : ''),\n    value: track.total_attempts || 0,\n    color: `hsl(${(index * 60) % 360}, 70%, 50%)`\n  }));\n\n  const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#8884D8', '#82CA9D', '#FFC658'];\n\n  const formatTime = (dateString: string) => {\n    const date = new Date(dateString);\n    return date.toLocaleDateString() + ' ' + date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n  };\n\n  const getScoreColor = (score: number, total: number) => {\n    const percentage = (score / total) * 100;\n    if (percentage >= 80) return 'text-green-600';\n    if (percentage >= 60) return 'text-yellow-600';\n    return 'text-red-600';\n  };\n\n  const exportData = () => {\n    const csvContent = [\n      ['Track', 'Total Lessons', 'Total Quizzes', 'Total Attempts', 'Average Score'],\n      ...analytics.trackStats.map(track => [\n        track.title,\n        track.total_lessons,\n        track.total_quizzes,\n        track.total_attempts,\n        track.avg_score?.toFixed(2) || '0'\n      ])\n    ].map(row => row.join(',')).join('\\n');\n\n    const blob = new Blob([csvContent], { type: 'text/csv' });\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'quiz-analytics.csv';\n    a.click();\n    window.URL.revokeObjectURL(url);\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 text-slate-900 font-sans\">\n      <Navigation />\n      \n      <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        <div className=\"flex items-center justify-between mb-8\">\n          <div>\n            <h1 className=\"text-3xl font-bold text-slate-900\" data-testid=\"text-analytics-title\">\n              Quiz Analytics Dashboard\n            </h1>\n            <p className=\"text-slate-600 mt-2\">\n              Comprehensive insights into quiz performance and learning outcomes\n            </p>\n          </div>\n          <Button onClick={exportData} className=\"flex items-center gap-2\" data-testid=\"button-export-analytics\">\n            <Download className=\"w-4 h-4\" />\n            Export Data\n          </Button>\n        </div>\n\n        {/* Overview Cards */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\">\n          <Card className=\"bg-gradient-to-br from-blue-50 to-blue-100 border-blue-200\">\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n              <CardTitle className=\"text-sm font-medium text-blue-800\">Total Attempts</CardTitle>\n              <Users className=\"h-4 w-4 text-blue-600\" />\n            </CardHeader>\n            <CardContent>\n              <div className=\"text-2xl font-bold text-blue-900\" data-testid=\"text-total-attempts\">\n                {totalAttempts.toLocaleString()}\n              </div>\n              <p className=\"text-xs text-blue-700 mt-1\">Across all quizzes</p>\n            </CardContent>\n          </Card>\n\n          <Card className=\"bg-gradient-to-br from-green-50 to-green-100 border-green-200\">\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n              <CardTitle className=\"text-sm font-medium text-green-800\">Active Quizzes</CardTitle>\n              <BookOpen className=\"h-4 w-4 text-green-600\" />\n            </CardHeader>\n            <CardContent>\n              <div className=\"text-2xl font-bold text-green-900\" data-testid=\"text-total-quizzes\">\n                {totalQuizzes}\n              </div>\n              <p className=\"text-xs text-green-700 mt-1\">Available assessments</p>\n            </CardContent>\n          </Card>\n\n          <Card className=\"bg-gradient-to-br from-purple-50 to-purple-100 border-purple-200\">\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n              <CardTitle className=\"text-sm font-medium text-purple-800\">Training Tracks</CardTitle>\n              <Target className=\"h-4 w-4 text-purple-600\" />\n            </CardHeader>\n            <CardContent>\n              <div className=\"text-2xl font-bold text-purple-900\" data-testid=\"text-total-tracks\">\n                {totalTracks}\n              </div>\n              <p className=\"text-xs text-purple-700 mt-1\">Professional programs</p>\n            </CardContent>\n          </Card>\n\n          <Card className=\"bg-gradient-to-br from-amber-50 to-amber-100 border-amber-200\">\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n              <CardTitle className=\"text-sm font-medium text-amber-800\">Average Score</CardTitle>\n              <Award className=\"h-4 w-4 text-amber-600\" />\n            </CardHeader>\n            <CardContent>\n              <div className=\"text-2xl font-bold text-amber-900\" data-testid=\"text-avg-score\">\n                {overallAvgScore.toFixed(1)}%\n              </div>\n              <p className=\"text-xs text-amber-700 mt-1\">Platform average</p>\n            </CardContent>\n          </Card>\n        </div>\n\n        {/* Charts Section */}\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8\">\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"flex items-center gap-2\">\n                <TrendingUp className=\"w-5 h-5\" />\n                Quiz Attempts by Track\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              <ResponsiveContainer width=\"100%\" height={300}>\n                <BarChart data={trackChartData}>\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis dataKey=\"name\" tick={{ fontSize: 12 }} />\n                  <YAxis />\n                  <Tooltip />\n                  <Bar dataKey=\"attempts\" fill=\"#3b82f6\" />\n                </BarChart>\n              </ResponsiveContainer>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"flex items-center gap-2\">\n                <Activity className=\"w-5 h-5\" />\n                Average Scores by Track\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              <ResponsiveContainer width=\"100%\" height={300}>\n                <LineChart data={trackChartData}>\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis dataKey=\"name\" tick={{ fontSize: 12 }} />\n                  <YAxis domain={[0, 100]} />\n                  <Tooltip />\n                  <Line type=\"monotone\" dataKey=\"avgScore\" stroke=\"#10b981\" strokeWidth={2} />\n                </LineChart>\n              </ResponsiveContainer>\n            </CardContent>\n          </Card>\n        </div>\n\n        {/* Distribution and Recent Activity */}\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6 mb-8\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Attempt Distribution</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <ResponsiveContainer width=\"100%\" height={250}>\n                <PieChart>\n                  <Pie\n                    data={pieChartData}\n                    cx=\"50%\"\n                    cy=\"50%\"\n                    outerRadius={80}\n                    dataKey=\"value\"\n                    label={({ name, percent }) => `${name} ${(percent * 100).toFixed(0)}%`}\n                  >\n                    {pieChartData.map((entry, index) => (\n                      <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n                    ))}\n                  </Pie>\n                  <Tooltip />\n                </PieChart>\n              </ResponsiveContainer>\n            </CardContent>\n          </Card>\n\n          <Card className=\"lg:col-span-2\">\n            <CardHeader>\n              <CardTitle className=\"flex items-center gap-2\">\n                <Clock className=\"w-5 h-5\" />\n                Recent Quiz Attempts\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-3 max-h-64 overflow-y-auto\">\n                {analytics.recentAttempts.length > 0 ? (\n                  analytics.recentAttempts.map((attempt) => (\n                    <div\n                      key={attempt.id}\n                      className=\"flex items-center justify-between p-3 bg-gray-50 rounded-lg\"\n                      data-testid={`recent-attempt-${attempt.id}`}\n                    >\n                      <div className=\"flex-1\">\n                        <div className=\"font-medium text-slate-900\">\n                          {attempt.quiz_title || 'Unknown Quiz'}\n                        </div>\n                        <div className=\"text-sm text-slate-600\">\n                          {attempt.track_title} • {attempt.lesson_title}\n                        </div>\n                        <div className=\"text-xs text-slate-500\">\n                          {formatTime(attempt.created_at)}\n                        </div>\n                      </div>\n                      <div className=\"text-right\">\n                        <div className={`font-semibold ${getScoreColor(attempt.score, attempt.total_questions)}`}>\n                          {attempt.score}/{attempt.total_questions}\n                        </div>\n                        <div className=\"text-xs text-slate-500\">\n                          {Math.round((attempt.score / attempt.total_questions) * 100)}%\n                        </div>\n                      </div>\n                    </div>\n                  ))\n                ) : (\n                  <div className=\"text-center py-8 text-slate-500\">\n                    No recent quiz attempts found\n                  </div>\n                )}\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n\n        {/* Detailed Track Statistics */}\n        <Card>\n          <CardHeader>\n            <CardTitle>Track Performance Details</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"overflow-x-auto\">\n              <table className=\"w-full\">\n                <thead>\n                  <tr className=\"border-b\">\n                    <th className=\"text-left py-3 px-4 font-medium text-slate-700\">Track</th>\n                    <th className=\"text-left py-3 px-4 font-medium text-slate-700\">Lessons</th>\n                    <th className=\"text-left py-3 px-4 font-medium text-slate-700\">Quizzes</th>\n                    <th className=\"text-left py-3 px-4 font-medium text-slate-700\">Attempts</th>\n                    <th className=\"text-left py-3 px-4 font-medium text-slate-700\">Avg Score</th>\n                    <th className=\"text-left py-3 px-4 font-medium text-slate-700\">Status</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {analytics.trackStats.map((track) => (\n                    <tr key={track.id} className=\"border-b hover:bg-gray-50\" data-testid={`track-row-${track.id}`}>\n                      <td className=\"py-3 px-4\">\n                        <div className=\"font-medium text-slate-900\">{track.title}</div>\n                      </td>\n                      <td className=\"py-3 px-4 text-slate-600\">{track.total_lessons || 0}</td>\n                      <td className=\"py-3 px-4 text-slate-600\">{track.total_quizzes || 0}</td>\n                      <td className=\"py-3 px-4 text-slate-600\">{track.total_attempts || 0}</td>\n                      <td className=\"py-3 px-4\">\n                        <span className={track.avg_score >= 80 ? 'text-green-600' : track.avg_score >= 60 ? 'text-yellow-600' : 'text-red-600'}>\n                          {track.avg_score ? track.avg_score.toFixed(1) : '0.0'}%\n                        </span>\n                      </td>\n                      <td className=\"py-3 px-4\">\n                        <Badge\n                          variant={track.total_attempts > 0 ? \"default\" : \"secondary\"}\n                          className={track.total_attempts > 0 ? \"bg-green-100 text-green-800\" : \"\"}\n                        >\n                          {track.total_attempts > 0 ? \"Active\" : \"No Attempts\"}\n                        </Badge>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          </CardContent>\n        </Card>\n      </main>\n    </div>\n  );\n}","size_bytes":15851},"client/src/pages/crm-dashboard.tsx":{"content":"import { useState } from \"react\";\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport Navigation from \"@/components/navigation\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogTrigger } from \"@/components/ui/dialog\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { \n  Users, \n  DollarSign, \n  Calendar,\n  RefreshCw,\n  Plus,\n  Edit2,\n  Download,\n  Upload,\n  Trash2,\n  Filter,\n  Search\n} from \"lucide-react\";\n\ninterface Client {\n  id: string;\n  name: string;\n  email: string;\n  subscription_type: \"TRIAL\" | \"MONTHLY\" | \"ANNUAL\";\n  status: \"ACTIVE\" | \"PAUSED\" | \"CANCELLED\";\n  subscription_date: string;\n  monthly_revenue: number;\n  notes?: string;\n  created_at: string;\n  updated_at: string;\n}\n\ninterface ClientStats {\n  totalClients: number;\n  activeClients: number;\n  monthlyRecurringRevenue: number;\n  lastUpdated: string;\n}\n\nexport default function CRMDashboard() {\n  const [editingClient, setEditingClient] = useState<Client | null>(null);\n  const [showAddDialog, setShowAddDialog] = useState(false);\n  const [filterStatus, setFilterStatus] = useState<string>(\"ALL\");\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const { toast } = useToast();\n  const queryClient = useQueryClient();\n\n  // Fetch clients\n  const { data: clients, isLoading: clientsLoading, refetch: refetchClients } = useQuery<Client[]>({\n    queryKey: [\"/api/clients\"],\n  });\n\n  // Fetch client stats\n  const { data: stats, isLoading: statsLoading, refetch: refetchStats } = useQuery<ClientStats>({\n    queryKey: [\"/api/clients/stats\"],\n  });\n\n  // Mutations\n  const createClientMutation = useMutation({\n    mutationFn: async (newClient: Partial<Client>) => {\n      try {\n        const response = await apiRequest(\"/api/clients\", \"POST\", newClient);\n        return response;\n      } catch (error) {\n        console.error('Create client mutation error:', error);\n        throw error;\n      }\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/clients\"] });\n      queryClient.invalidateQueries({ queryKey: [\"/api/clients/stats\"] });\n      toast({ title: \"Success\", description: \"Client created successfully\" });\n      setShowAddDialog(false);\n    },\n    onError: () => {\n      toast({ title: \"Error\", description: \"Failed to create client\", variant: \"destructive\" });\n    }\n  });\n\n  const updateClientMutation = useMutation({\n    mutationFn: ({ id, ...updates }: { id: string } & Partial<Client>) => \n      apiRequest(`/api/clients/${id}`, \"PUT\", updates),\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/clients\"] });\n      queryClient.invalidateQueries({ queryKey: [\"/api/clients/stats\"] });\n      toast({ title: \"Success\", description: \"Client updated successfully\" });\n      setEditingClient(null);\n    },\n    onError: () => {\n      toast({ title: \"Error\", description: \"Failed to update client\", variant: \"destructive\" });\n    }\n  });\n\n  const deleteClientMutation = useMutation({\n    mutationFn: (id: string) => apiRequest(`/api/clients/${id}`, \"DELETE\"),\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/clients\"] });\n      queryClient.invalidateQueries({ queryKey: [\"/api/clients/stats\"] });\n      toast({ title: \"Success\", description: \"Client deleted successfully\" });\n    },\n    onError: () => {\n      toast({ title: \"Error\", description: \"Failed to delete client\", variant: \"destructive\" });\n    }\n  });\n\n  // Filter and search clients\n  const filteredClients = clients?.filter(client => {\n    const matchesStatus = filterStatus === \"ALL\" || client.status === filterStatus;\n    const matchesSearch = client.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                         client.email.toLowerCase().includes(searchTerm.toLowerCase());\n    return matchesStatus && matchesSearch;\n  }) || [];\n\n  // Utility functions\n  const getSubscriptionPrice = (type: string) => {\n    switch (type) {\n      case \"TRIAL\": return \"$0\";\n      case \"MONTHLY\": return \"$25\";\n      case \"ANNUAL\": return \"$250\";\n      default: return \"$0\";\n    }\n  };\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case \"ACTIVE\": return \"bg-green-100 text-green-800\";\n      case \"PAUSED\": return \"bg-yellow-100 text-yellow-800\";\n      case \"CANCELLED\": return \"bg-red-100 text-red-800\";\n      default: return \"bg-gray-100 text-gray-800\";\n    }\n  };\n\n  const formatMRR = (mrr: number) => {\n    return `$${(mrr / 100).toFixed(2)}`;\n  };\n\n  const exportClientsCSV = () => {\n    const csvContent = [\n      ['Name', 'Email', 'Subscription Type', 'Status', 'Subscription Date', 'Monthly Revenue', 'Notes'],\n      ...filteredClients.map(client => [\n        client.name,\n        client.email,\n        client.subscription_type,\n        client.status,\n        new Date(client.subscription_date).toLocaleDateString(),\n        getSubscriptionPrice(client.subscription_type),\n        client.notes || ''\n      ])\n    ].map(row => row.join(',')).join('\\n');\n\n    const blob = new Blob([csvContent], { type: 'text/csv' });\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `clients-${new Date().toISOString().split('T')[0]}.csv`;\n    a.click();\n    window.URL.revokeObjectURL(url);\n  };\n\n  const handleRefresh = () => {\n    refetchClients();\n    refetchStats();\n    toast({ title: \"Refreshed\", description: \"Data has been updated\" });\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 text-slate-900 font-sans\">\n      <Navigation />\n      \n      <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        <div className=\"flex items-center justify-between mb-8\">\n          <div>\n            <h1 className=\"text-3xl font-bold text-slate-900\" data-testid=\"text-crm-title\">\n              Client Management (CRM)\n            </h1>\n            <p className=\"text-slate-600 mt-2\">\n              Manage your clients, subscriptions, and revenue\n            </p>\n          </div>\n          <div className=\"flex space-x-3\">\n            <Button onClick={handleRefresh} variant=\"outline\" data-testid=\"button-refresh-crm\">\n              <RefreshCw className=\"w-4 h-4 mr-2\" />\n              Refresh\n            </Button>\n            <Button onClick={exportClientsCSV} variant=\"outline\" data-testid=\"button-export-clients\">\n              <Download className=\"w-4 h-4 mr-2\" />\n              Export CSV\n            </Button>\n            <Dialog open={showAddDialog} onOpenChange={setShowAddDialog}>\n              <DialogTrigger asChild>\n                <Button className=\"bg-primary-500 hover:bg-primary-600 text-white\" data-testid=\"button-add-client\">\n                  <Plus className=\"w-4 h-4 mr-2\" />\n                  Add Client\n                </Button>\n              </DialogTrigger>\n              <DialogContent>\n                <DialogHeader>\n                  <DialogTitle>Add New Client</DialogTitle>\n                </DialogHeader>\n                <ClientForm \n                  onSubmit={(data) => {\n                    const subscriptionRevenue = data.subscription_type === \"MONTHLY\" ? 2500 : \n                                              data.subscription_type === \"ANNUAL\" ? 25000 : 0;\n                    createClientMutation.mutate({\n                      ...data,\n                      monthly_revenue: subscriptionRevenue,\n                      subscription_date: new Date().toISOString()\n                    });\n                  }}\n                  loading={createClientMutation.isPending}\n                />\n              </DialogContent>\n            </Dialog>\n          </div>\n        </div>\n\n        {/* Stats Cards */}\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6 mb-8\">\n          <Card className=\"bg-gradient-to-br from-blue-50 to-blue-100 border-blue-200\">\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n              <CardTitle className=\"text-sm font-medium text-blue-800\">Total Clients</CardTitle>\n              <Users className=\"h-4 w-4 text-blue-600\" />\n            </CardHeader>\n            <CardContent>\n              <div className=\"text-2xl font-bold text-blue-900\" data-testid=\"text-total-clients\">\n                {statsLoading ? \"...\" : stats?.totalClients || 0}\n              </div>\n            </CardContent>\n          </Card>\n\n          <Card className=\"bg-gradient-to-br from-green-50 to-green-100 border-green-200\">\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n              <CardTitle className=\"text-sm font-medium text-green-800\">Active Clients</CardTitle>\n              <Users className=\"h-4 w-4 text-green-600\" />\n            </CardHeader>\n            <CardContent>\n              <div className=\"text-2xl font-bold text-green-900\" data-testid=\"text-active-clients\">\n                {statsLoading ? \"...\" : stats?.activeClients || 0}\n              </div>\n            </CardContent>\n          </Card>\n\n          <Card className=\"bg-gradient-to-br from-purple-50 to-purple-100 border-purple-200\">\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n              <CardTitle className=\"text-sm font-medium text-purple-800\">Monthly Recurring Revenue</CardTitle>\n              <DollarSign className=\"h-4 w-4 text-purple-600\" />\n            </CardHeader>\n            <CardContent>\n              <div className=\"text-2xl font-bold text-purple-900\" data-testid=\"text-mrr\">\n                {statsLoading ? \"...\" : formatMRR(stats?.monthlyRecurringRevenue || 0)}\n              </div>\n            </CardContent>\n          </Card>\n\n          <Card className=\"bg-gradient-to-br from-amber-50 to-amber-100 border-amber-200\">\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n              <CardTitle className=\"text-sm font-medium text-amber-800\">Last Updated</CardTitle>\n              <Calendar className=\"h-4 w-4 text-amber-600\" />\n            </CardHeader>\n            <CardContent>\n              <div className=\"text-sm font-bold text-amber-900\" data-testid=\"text-last-updated\">\n                {statsLoading ? \"...\" : stats?.lastUpdated ? new Date(stats.lastUpdated).toLocaleTimeString() : \"Never\"}\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n\n        {/* Filters and Search */}\n        <Card className=\"mb-6\">\n          <CardContent className=\"pt-6\">\n            <div className=\"flex flex-col sm:flex-row gap-4\">\n              <div className=\"flex-1\">\n                <div className=\"relative\">\n                  <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-4 h-4\" />\n                  <Input\n                    placeholder=\"Search clients by name or email...\"\n                    value={searchTerm}\n                    onChange={(e) => setSearchTerm(e.target.value)}\n                    className=\"pl-10\"\n                    data-testid=\"input-search-clients\"\n                  />\n                </div>\n              </div>\n              <Select value={filterStatus} onValueChange={setFilterStatus}>\n                <SelectTrigger className=\"w-full sm:w-48\" data-testid=\"select-filter-status\">\n                  <SelectValue />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"ALL\">All Statuses</SelectItem>\n                  <SelectItem value=\"ACTIVE\">Active</SelectItem>\n                  <SelectItem value=\"PAUSED\">Paused</SelectItem>\n                  <SelectItem value=\"CANCELLED\">Cancelled</SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Clients Table */}\n        <Card>\n          <CardHeader>\n            <CardTitle>Clients ({filteredClients.length})</CardTitle>\n          </CardHeader>\n          <CardContent>\n            {clientsLoading ? (\n              <div className=\"flex justify-center py-8\">\n                <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-primary-600\"></div>\n              </div>\n            ) : filteredClients.length === 0 ? (\n              <div className=\"text-center py-8 text-slate-500\">\n                {clients?.length === 0 ? \"No clients found. Add your first client!\" : \"No clients match your search.\"}\n              </div>\n            ) : (\n              <div className=\"overflow-x-auto\">\n                <table className=\"w-full\">\n                  <thead>\n                    <tr className=\"border-b\">\n                      <th className=\"text-left py-3 px-4 font-medium text-slate-700\">Name</th>\n                      <th className=\"text-left py-3 px-4 font-medium text-slate-700\">Email</th>\n                      <th className=\"text-left py-3 px-4 font-medium text-slate-700\">Subscription</th>\n                      <th className=\"text-left py-3 px-4 font-medium text-slate-700\">Status</th>\n                      <th className=\"text-left py-3 px-4 font-medium text-slate-700\">Revenue</th>\n                      <th className=\"text-left py-3 px-4 font-medium text-slate-700\">Date</th>\n                      <th className=\"text-left py-3 px-4 font-medium text-slate-700\">Actions</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {filteredClients.map((client) => (\n                      <tr key={client.id} className=\"border-b hover:bg-gray-50\" data-testid={`client-row-${client.id}`}>\n                        <td className=\"py-3 px-4\">\n                          <div className=\"font-medium text-slate-900\">{client.name}</div>\n                        </td>\n                        <td className=\"py-3 px-4 text-slate-600\">{client.email}</td>\n                        <td className=\"py-3 px-4\">\n                          <Badge variant=\"secondary\">\n                            {client.subscription_type} - {getSubscriptionPrice(client.subscription_type)}\n                            {client.subscription_type === \"ANNUAL\" && \"/Year\"}\n                            {client.subscription_type === \"MONTHLY\" && \"/Month\"}\n                          </Badge>\n                        </td>\n                        <td className=\"py-3 px-4\">\n                          <Badge className={getStatusColor(client.status)}>\n                            {client.status}\n                          </Badge>\n                        </td>\n                        <td className=\"py-3 px-4 text-slate-600\">\n                          {getSubscriptionPrice(client.subscription_type)}\n                        </td>\n                        <td className=\"py-3 px-4 text-slate-600\">\n                          {new Date(client.subscription_date).toLocaleDateString()}\n                        </td>\n                        <td className=\"py-3 px-4\">\n                          <div className=\"flex space-x-2\">\n                            <Button\n                              size=\"sm\"\n                              variant=\"outline\"\n                              onClick={() => setEditingClient(client)}\n                              data-testid={`button-edit-client-${client.id}`}\n                            >\n                              <Edit2 className=\"w-3 h-3\" />\n                            </Button>\n                            <Button\n                              size=\"sm\"\n                              variant=\"outline\"\n                              className=\"text-red-600 hover:text-red-700\"\n                              onClick={() => {\n                                if (window.confirm('Are you sure you want to delete this client?')) {\n                                  deleteClientMutation.mutate(client.id);\n                                }\n                              }}\n                              data-testid={`button-delete-client-${client.id}`}\n                            >\n                              <Trash2 className=\"w-3 h-3\" />\n                            </Button>\n                          </div>\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            )}\n          </CardContent>\n        </Card>\n\n        {/* Edit Client Dialog */}\n        {editingClient && (\n          <Dialog open={!!editingClient} onOpenChange={(open) => !open && setEditingClient(null)}>\n            <DialogContent>\n              <DialogHeader>\n                <DialogTitle>Edit Client</DialogTitle>\n              </DialogHeader>\n              <ClientForm \n                client={editingClient}\n                onSubmit={(data) => {\n                  const subscriptionRevenue = data.subscription_type === \"MONTHLY\" ? 2500 : \n                                            data.subscription_type === \"ANNUAL\" ? 25000 : 0;\n                  updateClientMutation.mutate({\n                    id: editingClient.id,\n                    ...data,\n                    monthly_revenue: subscriptionRevenue\n                  });\n                }}\n                loading={updateClientMutation.isPending}\n              />\n            </DialogContent>\n          </Dialog>\n        )}\n      </main>\n    </div>\n  );\n}\n\n// Client Form Component\ninterface ClientFormProps {\n  client?: Client;\n  onSubmit: (data: any) => void;\n  loading: boolean;\n}\n\nfunction ClientForm({ client, onSubmit, loading }: ClientFormProps) {\n  const [formData, setFormData] = useState({\n    name: client?.name || \"\",\n    email: client?.email || \"\",\n    subscription_type: client?.subscription_type || \"TRIAL\",\n    status: client?.status || \"ACTIVE\",\n    notes: client?.notes || \"\"\n  });\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    onSubmit(formData);\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"space-y-4\">\n      <div>\n        <Label htmlFor=\"name\">Full Name</Label>\n        <Input\n          id=\"name\"\n          value={formData.name}\n          onChange={(e) => setFormData(prev => ({ ...prev, name: e.target.value }))}\n          placeholder=\"Enter client's full name\"\n          required\n          data-testid=\"input-client-name\"\n        />\n      </div>\n\n      <div>\n        <Label htmlFor=\"email\">Email Address</Label>\n        <Input\n          id=\"email\"\n          type=\"email\"\n          value={formData.email}\n          onChange={(e) => setFormData(prev => ({ ...prev, email: e.target.value }))}\n          placeholder=\"Enter client's email\"\n          required\n          data-testid=\"input-client-email\"\n        />\n      </div>\n\n      <div>\n        <Label htmlFor=\"subscription_type\">Subscription Type</Label>\n        <Select \n          value={formData.subscription_type} \n          onValueChange={(value: any) => setFormData(prev => ({ ...prev, subscription_type: value }))}\n        >\n          <SelectTrigger data-testid=\"select-subscription-type\">\n            <SelectValue />\n          </SelectTrigger>\n          <SelectContent>\n            <SelectItem value=\"TRIAL\">24hr Free Trial - $0</SelectItem>\n            <SelectItem value=\"MONTHLY\">Monthly - $25/Month USD</SelectItem>\n            <SelectItem value=\"ANNUAL\">Annual - $250/Year USD</SelectItem>\n          </SelectContent>\n        </Select>\n      </div>\n\n      <div>\n        <Label htmlFor=\"status\">Status</Label>\n        <Select \n          value={formData.status} \n          onValueChange={(value: any) => setFormData(prev => ({ ...prev, status: value }))}\n        >\n          <SelectTrigger data-testid=\"select-client-status\">\n            <SelectValue />\n          </SelectTrigger>\n          <SelectContent>\n            <SelectItem value=\"ACTIVE\">Active</SelectItem>\n            <SelectItem value=\"PAUSED\">Paused</SelectItem>\n            <SelectItem value=\"CANCELLED\">Cancelled</SelectItem>\n          </SelectContent>\n        </Select>\n      </div>\n\n      <div>\n        <Label htmlFor=\"notes\">Notes (Optional)</Label>\n        <Textarea\n          id=\"notes\"\n          value={formData.notes}\n          onChange={(e) => setFormData(prev => ({ ...prev, notes: e.target.value }))}\n          placeholder=\"Any additional notes about this client...\"\n          data-testid=\"textarea-client-notes\"\n        />\n      </div>\n\n      <div className=\"flex justify-end space-x-3 pt-4\">\n        <Button type=\"submit\" disabled={loading} data-testid=\"button-save-client\">\n          {loading ? \"Saving...\" : client ? \"Update Client\" : \"Add Client\"}\n        </Button>\n      </div>\n    </form>\n  );\n}","size_bytes":20925},"scripts/comprehensive-seed.ts":{"content":"import { db } from '../server/db.js';\nimport { tracks, lessons, quizzes, questions, aiTutors, practiceScenarios, certificates } from '../shared/schema.js';\n\nasync function comprehensiveSeed() {\n  console.log('🌱 Seeding comprehensive diving education platform...');\n\n  // Clear existing data in proper order\n  await db.delete(questions);\n  await db.delete(quizzes);\n  await db.delete(practiceScenarios);\n  await db.delete(lessons);\n  await db.delete(certificates);\n  await db.delete(tracks);\n  await db.delete(aiTutors);\n\n  // Create AI Tutors for each discipline\n  const [ndtTutor] = await db.insert(aiTutors).values({\n    name: \"Dr. Sarah Chen\",\n    specialty: \"NDT\",\n    description: \"Expert in Non-Destructive Testing and Inspection with 15+ years in underwater inspection techniques, corrosion assessment, and CP surveying.\",\n    personality: {\n      style: \"methodical\",\n      approach: \"detail-oriented\",\n      focus: \"safety-first inspection procedures\"\n    },\n    knowledgeBase: [\"visual_inspection\", \"corrosion_assessment\", \"cp_surveying\", \"thickness_gauging\", \"magnetic_particle_inspection\", \"documentation\"]\n  }).returning();\n\n  const [medicTutor] = await db.insert(aiTutors).values({\n    name: \"Dr. Michael Rodriguez\",\n    specialty: \"Diver Medic Technician\",\n    description: \"Emergency medicine specialist focused on diving-related medical emergencies, hyperbaric treatment, and underwater rescue protocols.\",\n    personality: {\n      style: \"urgent\",\n      approach: \"protocol-driven\",\n      focus: \"rapid assessment and life-saving procedures\"\n    },\n    knowledgeBase: [\"emergency_protocols\", \"airway_management\", \"circulation_assessment\", \"hyperbaric_medicine\", \"rescue_procedures\"]\n  }).returning();\n\n  const [supervisorTutor] = await db.insert(aiTutors).values({\n    name: \"Captain James Mitchell\",\n    specialty: \"Commercial Dive Supervisor\",\n    description: \"Veteran dive supervisor with expertise in dive planning, risk assessment, and emergency response coordination for commercial diving operations.\",\n    personality: {\n      style: \"authoritative\",\n      approach: \"risk-focused\",\n      focus: \"comprehensive planning and safety management\"\n    },\n    knowledgeBase: [\"dive_planning\", \"risk_assessment\", \"emergency_response\", \"team_management\", \"quality_assurance\"]\n  }).returning();\n\n  const [airDiverTutor] = await db.insert(aiTutors).values({\n    name: \"Lisa Thompson\",\n    specialty: \"Air Diving\",\n    description: \"Professional air diving instructor specializing in gas management, ascent procedures, and underwater tool handling safety.\",\n    personality: {\n      style: \"supportive\",\n      approach: \"skill-building\",\n      focus: \"fundamental diving skills and safety practices\"\n    },\n    knowledgeBase: [\"diving_physics\", \"gas_management\", \"ascent_procedures\", \"tool_handling\", \"basic_communications\"]\n  }).returning();\n\n  const [satDiverTutor] = await db.insert(aiTutors).values({\n    name: \"Commander Robert Hayes\",\n    specialty: \"Saturation Diving\",\n    description: \"Saturation diving specialist with extensive experience in deep-sea operations, life support systems, and confined space protocols.\",\n    personality: {\n      style: \"precise\",\n      approach: \"systems-focused\",\n      focus: \"complex system operation and human factors\"\n    },\n    knowledgeBase: [\"saturation_systems\", \"life_support\", \"human_factors\", \"deep_sea_operations\", \"system_components\"]\n  }).returning();\n\n  const [alstTutor] = await db.insert(aiTutors).values({\n    name: \"David Kim\",\n    specialty: \"Assistant Life Support Technician\",\n    description: \"Life support systems technician focused on gas management, environmental controls, and emergency procedures for diving operations.\",\n    personality: {\n      style: \"methodical\",\n      approach: \"systematic\",\n      focus: \"system operation and maintenance procedures\"\n    },\n    knowledgeBase: [\"life_support_systems\", \"gas_management\", \"environmental_controls\", \"emergency_procedures\", \"equipment_maintenance\"]\n  }).returning();\n\n  const [lstTutor] = await db.insert(aiTutors).values({\n    name: \"Rebecca Foster\",\n    specialty: \"Life Support Technician\",\n    description: \"Senior life support technician with expertise in advanced systems, troubleshooting, and team leadership in critical operations.\",\n    personality: {\n      style: \"analytical\",\n      approach: \"problem-solving\",\n      focus: \"advanced system management and leadership\"\n    },\n    knowledgeBase: [\"advanced_life_support\", \"troubleshooting\", \"emergency_management\", \"team_leadership\", \"quality_assurance\"]\n  }).returning();\n\n  // Create the 7 comprehensive training tracks\n  const [ndtTrack] = await db.insert(tracks).values({\n    title: \"Inspection & Non-Destructive Testing (NDT)\",\n    slug: \"inspection-ndt\",\n    summary: \"Comprehensive training in underwater inspection techniques, corrosion assessment, cathodic protection surveying, and documentation standards for commercial diving operations.\",\n    aiTutorId: ndtTutor.id,\n    difficulty: \"intermediate\",\n    estimatedHours: 40,\n    isPublished: true,\n  }).returning();\n\n  const [medicTrack] = await db.insert(tracks).values({\n    title: \"Diver Medic Technician\",\n    slug: \"diver-medic-technician\",\n    summary: \"Advanced medical training for diving emergencies, including scene assessment, ABCDE protocols, airway management, and emergency response procedures.\",\n    aiTutorId: medicTutor.id,\n    difficulty: \"advanced\",\n    estimatedHours: 60,\n    isPublished: true,\n  }).returning();\n\n  const [supervisorTrack] = await db.insert(tracks).values({\n    title: \"Commercial Dive Supervisor\",\n    slug: \"commercial-dive-supervisor\",\n    summary: \"Leadership and management training covering dive planning, risk assessment, hazard identification, communication protocols, and emergency response coordination.\",\n    aiTutorId: supervisorTutor.id,\n    difficulty: \"advanced\",\n    estimatedHours: 80,\n    isPublished: true,\n  }).returning();\n\n  const [airDiverTrack] = await db.insert(tracks).values({\n    title: \"Air Diver Certification\",\n    slug: \"air-diver-certification\",\n    summary: \"Fundamental air diving skills including diving physics, gas management, ascent procedures, problem-solving, and basic underwater communications.\",\n    aiTutorId: airDiverTutor.id,\n    difficulty: \"beginner\",\n    estimatedHours: 30,\n    isPublished: true,\n  }).returning();\n\n  const [satDiverTrack] = await db.insert(tracks).values({\n    title: \"Saturation Diver Training\",\n    slug: \"saturation-diver-training\",\n    summary: \"Specialized training for saturation diving operations, system components, human factors in confined environments, and advanced life support systems.\",\n    aiTutorId: satDiverTutor.id,\n    difficulty: \"advanced\",\n    estimatedHours: 120,\n    isPublished: true,\n  }).returning();\n\n  const [alstTrack] = await db.insert(tracks).values({\n    title: \"Assistant Life Support Technician (ALST)\",\n    slug: \"assistant-life-support-technician\",\n    summary: \"Essential training for life support system operation, gas management principles, environmental control systems, and emergency procedures.\",\n    aiTutorId: alstTutor.id,\n    difficulty: \"intermediate\",\n    estimatedHours: 50,\n    isPublished: true,\n  }).returning();\n\n  const [lstTrack] = await db.insert(tracks).values({\n    title: \"Life Support Technician (LST)\",\n    slug: \"life-support-technician\",\n    summary: \"Advanced life support systems training, system design principles, troubleshooting methodologies, emergency management, and team leadership.\",\n    aiTutorId: lstTutor.id,\n    difficulty: \"advanced\",\n    estimatedHours: 70,\n    isPublished: true,\n  }).returning();\n\n  // Create comprehensive lessons for NDT Track\n  const [ndtLesson1] = await db.insert(lessons).values({\n    trackId: ndtTrack.id,\n    title: \"Visual Inspection Fundamentals\",\n    order: 1,\n    content: `# Visual Inspection Fundamentals\n\nVisual inspection forms the foundation of underwater non-destructive testing. This comprehensive module covers industry-standard techniques and protocols.\n\n## Learning Objectives\n- Understand visual inspection principles and limitations\n- Master systematic inspection methodologies\n- Learn proper documentation techniques\n- Identify common underwater structural issues\n\n## Core Principles\n\n### Systematic Approach\nVisual inspection requires a methodical approach to ensure complete coverage:\n\n1. **Pre-Inspection Planning**\n   - Review structural drawings and previous inspection reports\n   - Understand expected defect types and locations\n   - Plan inspection routes and coverage areas\n   - Prepare documentation templates\n\n2. **Inspection Methodology**\n   - **Grid Pattern Scanning**: Systematic coverage using overlapping grids\n   - **Zone-Based Approach**: Dividing structures into manageable zones\n   - **Critical Point Focus**: Concentrating on high-stress areas\n   - **Comparative Analysis**: Comparing with baseline conditions\n\n### Environmental Considerations\nUnderwater visual inspection faces unique challenges:\n- **Visibility Limitations**: Water clarity, lighting, suspended particles\n- **Current Effects**: Impact on diver stability and inspection quality  \n- **Depth Considerations**: Narcosis effects and time limitations\n- **Temperature Factors**: Equipment performance and diver comfort\n\n## Inspection Techniques\n\n### Surface Preparation\nBefore detailed inspection:\n- **Marine Growth Removal**: Clean areas for detailed examination\n- **Debris Clearance**: Remove obstructing materials\n- **Surface Cleaning**: Use appropriate cleaning methods\n- **Access Preparation**: Ensure safe working positions\n\n### Detection Methods\n- **Direct Visual Examination**: Close-up inspection with proper lighting\n- **Pattern Recognition**: Identifying systematic defect patterns\n- **Measurement Techniques**: Using underwater measurement tools\n- **Photographic Documentation**: High-quality underwater photography\n\n## Common Defect Types\n\n### Corrosion Patterns\n- **General Corrosion**: Uniform surface degradation\n- **Pitting Corrosion**: Localized deep penetration\n- **Crevice Corrosion**: Confined space corrosion\n- **Galvanic Corrosion**: Dissimilar metal contact\n- **Microbiologically Influenced Corrosion (MIC)**: Bacterial-induced deterioration\n\n### Structural Issues\n- **Fatigue Cracking**: Cyclical stress-induced failures\n- **Weld Defects**: Joint integrity problems\n- **Deformation**: Shape changes from overloading\n- **Connection Failures**: Bolt, rivet, or weld problems\n\n## Documentation Standards\n\n### Recording Requirements\nAll observations must be systematically documented:\n- **Location Identification**: Precise position references\n- **Defect Descriptions**: Detailed characteristic documentation\n- **Dimensional Data**: Accurate measurements\n- **Photographic Evidence**: Multiple angles and scales\n\n### Report Formats\n- **Field Notes**: Real-time observation recording\n- **Inspection Checklists**: Standardized coverage verification\n- **Digital Documentation**: Electronic data management\n- **Final Reports**: Comprehensive findings summaries\n\n## Quality Assurance\nMaintaining inspection quality through:\n- **Calibration Procedures**: Equipment verification\n- **Technique Validation**: Method effectiveness confirmation\n- **Peer Review**: Independent verification processes\n- **Continuous Training**: Skill maintenance and improvement\n\n## Safety Protocols\nVisual inspection safety considerations:\n- **Proper Lighting**: Adequate illumination without thermal hazards\n- **Tool Management**: Secure tool handling and positioning\n- **Communication**: Clear reporting of findings and hazards\n- **Emergency Procedures**: Response protocols for discovered hazards\n\nUnderstanding these fundamentals provides the foundation for all subsequent NDT techniques and ensures consistent, reliable inspection results.`,\n    objectives: [\"Master systematic visual inspection techniques\", \"Understand defect identification principles\", \"Learn proper documentation methods\", \"Apply safety protocols\"],\n    estimatedMinutes: 45,\n    isRequired: true,\n  }).returning();\n\n  // Create practice scenario for NDT\n  await db.insert(practiceScenarios).values({\n    lessonId: ndtLesson1.id,\n    title: \"Offshore Platform Leg Inspection\",\n    description: \"Conduct a visual inspection of an offshore platform leg showing signs of corrosion and marine growth.\",\n    scenario: {\n      environment: \"offshore_platform\",\n      depth: \"15 meters\",\n      visibility: \"3 meters\",\n      current: \"moderate\",\n      structure: \"steel tubular leg with complex joint\",\n      issues: [\"pitting_corrosion\", \"marine_growth\", \"weld_defects\"],\n      tools: [\"underwater_camera\", \"measuring_tape\", \"cleaning_brush\", \"thickness_gauge\"],\n      timeLimit: 20\n    },\n    expectedActions: [\n      \"Remove marine growth from inspection area\",\n      \"Document corrosion patterns with photographs\",\n      \"Measure pit depths and affected areas\",\n      \"Check weld integrity at joints\",\n      \"Record findings systematically\"\n    ],\n    difficulty: \"intermediate\",\n    estimatedMinutes: 20,\n  });\n\n  // Create comprehensive quiz for NDT lesson\n  const [ndtQuiz1] = await db.insert(quizzes).values({\n    lessonId: ndtLesson1.id,\n    title: \"Visual Inspection Fundamentals Assessment\",\n    timeLimit: 20,\n    examType: \"QUIZ\",\n    passingScore: 80,\n    maxAttempts: 3,\n    showFeedback: true,\n  }).returning();\n\n  // Multiple choice questions\n  await db.insert(questions).values([\n    {\n      quizId: ndtQuiz1.id,\n      type: \"MULTIPLE_CHOICE\",\n      prompt: \"What is the most critical factor in underwater visual inspection planning?\",\n      options: [\"Water temperature\", \"Systematic coverage methodology\", \"Diver experience level\", \"Equipment cost\"],\n      correctAnswer: \"Systematic coverage methodology\",\n      explanation: \"Systematic coverage methodology ensures complete inspection coverage and prevents missed areas, which is critical for safety and structural integrity.\",\n      points: 2,\n      order: 1,\n    },\n    {\n      quizId: ndtQuiz1.id,\n      type: \"TRUE_FALSE\", \n      prompt: \"Pitting corrosion is characterized by uniform surface degradation across large areas.\",\n      options: [\"True\", \"False\"],\n      correctAnswer: \"False\",\n      explanation: \"Pitting corrosion is localized deep penetration, not uniform surface degradation. General corrosion shows uniform patterns.\",\n      points: 1,\n      order: 2,\n    },\n    {\n      quizId: ndtQuiz1.id,\n      type: \"SHORT_ANSWER\",\n      prompt: \"List three environmental factors that can significantly impact underwater visual inspection quality.\",\n      options: [],\n      correctAnswer: \"visibility limitations, current effects, depth considerations, temperature factors\",\n      explanation: \"Key factors include visibility (water clarity, lighting), current effects (diver stability), depth considerations (narcosis, time limits), and temperature (equipment/diver performance).\",\n      points: 3,\n      order: 3,\n    },\n    {\n      quizId: ndtQuiz1.id,\n      type: \"MULTIPLE_CHOICE\",\n      prompt: \"Which corrosion type is most likely to occur at dissimilar metal connections?\",\n      options: [\"General corrosion\", \"Pitting corrosion\", \"Galvanic corrosion\", \"MIC corrosion\"],\n      correctAnswer: \"Galvanic corrosion\",\n      explanation: \"Galvanic corrosion occurs when dissimilar metals are in electrical contact in an electrolyte (seawater), creating a galvanic cell.\",\n      points: 2,\n      order: 4,\n    }\n  ]);\n\n  // Create lessons for other tracks with similar comprehensive content...\n  // (Adding a few more key lessons due to length constraints)\n\n  // Air Diver Track - Gas Management Lesson\n  const [airDiverLesson1] = await db.insert(lessons).values({\n    trackId: airDiverTrack.id,\n    title: \"Gas Management and Consumption Planning\",\n    order: 1,\n    content: `# Gas Management and Consumption Planning\n\nProper gas management is fundamental to safe air diving operations. This module covers consumption calculation, emergency reserves, and supply monitoring.\n\n## Learning Objectives\n- Calculate gas consumption rates accurately\n- Plan adequate gas supplies for work tasks\n- Understand emergency reserve requirements\n- Master supply monitoring techniques\n\n## Gas Consumption Fundamentals\n\n### Factors Affecting Consumption\nAir consumption varies based on multiple factors:\n\n1. **Physiological Factors**\n   - **Respiratory Rate**: Breathing frequency under stress\n   - **Physical Condition**: Fitness level and work capacity\n   - **Body Size**: Lung capacity and metabolic rate\n   - **Experience Level**: Efficiency and stress response\n\n2. **Environmental Conditions**\n   - **Depth**: Pressure effects on consumption rate\n   - **Water Temperature**: Thermal stress impact\n   - **Current Strength**: Physical exertion requirements\n   - **Visibility**: Stress and navigation difficulty\n\n3. **Work Requirements**\n   - **Task Complexity**: Mental and physical demands\n   - **Tool Usage**: Additional physical exertion\n   - **Duration**: Sustained vs. intermittent work\n   - **Emergency Response**: High-stress consumption rates\n\n## Consumption Calculation Methods\n\n### Standard Consumption Rates\nIndustry standard consumption rates for planning:\n- **Light Work**: 1.5-2.0 cubic feet per minute (CFM)\n- **Moderate Work**: 2.0-3.0 CFM\n- **Heavy Work**: 3.0-4.5 CFM\n- **Emergency/Stress**: 4.5-6.0+ CFM\n\n### Pressure Relationship\nConsumption increases with depth due to increased gas density:\n- **Surface (1 ATA)**: Baseline consumption\n- **33 feet (2 ATA)**: 2x surface consumption\n- **66 feet (3 ATA)**: 3x surface consumption\n- **99 feet (4 ATA)**: 4x surface consumption\n\n### Planning Calculations\n**Total Gas Required = (Consumption Rate × Time × Pressure Factor) + Reserves**\n\nExample for 60-foot dive:\n- Work time: 30 minutes\n- Consumption rate: 2.5 CFM (moderate work)\n- Depth factor: 2.8 ATA\n- Safety reserve: 25%\n\nCalculation: (2.5 × 30 × 2.8) × 1.25 = 262.5 cubic feet required\n\n## Emergency Reserve Planning\n\n### Reserve Requirements\nNever compromise on emergency reserves:\n- **Minimum Reserve**: 25% of total gas supply\n- **Emergency Ascent**: Additional 50 cubic feet minimum\n- **Surface Interval**: 200 PSI minimum for equipment\n- **Communication Loss**: Extended bottom time buffer\n\n### Emergency Scenarios\nPlan for potential emergencies:\n- **Primary Supply Failure**: Complete loss of main gas source\n- **Regulator Malfunction**: Breathing system failure\n- **Umbilical Damage**: Surface supply interruption\n- **Extended Work Time**: Task overruns and delays\n\n## Supply Monitoring Techniques\n\n### Continuous Monitoring\nMaintain constant awareness of gas status:\n- **Gauge Checks**: Regular pressure monitoring intervals\n- **Consumption Tracking**: Real-time usage calculation\n- **Supply Communication**: Regular surface updates\n- **Trend Analysis**: Early identification of increased consumption\n\n### Critical Pressure Points\nEstablish clear decision points:\n- **Turn-Around Pressure**: Return to surface initiation\n- **Emergency Reserve**: No further consumption allowed\n- **Surface Reserve**: Final safety margin\n- **Equipment Reserve**: Post-dive system pressure\n\n## Surface Supply Systems\n\n### System Components\nUnderstanding supply system operation:\n- **Compressor Capacity**: Continuous flow requirements\n- **Distribution Manifold**: Multi-diver supply management\n- **Pressure Regulation**: Consistent delivery pressure\n- **Monitoring Systems**: Real-time consumption tracking\n\n### Bailout Procedures\nEmergency independent air supply:\n- **Bailout Bottle Size**: Minimum 10-minute supply\n- **Activation Procedures**: Quick-change techniques\n- **Ascent Protocols**: Emergency surface procedures\n- **Communication Requirements**: Surface notification procedures\n\n## Work Planning Integration\n\n### Task-Based Planning\nIntegrate gas management with work requirements:\n- **Pre-Job Analysis**: Task duration and intensity estimation\n- **Contingency Planning**: Alternative approaches and timelines\n- **Team Coordination**: Multi-diver gas management\n- **Equipment Efficiency**: Tool selection impact on consumption\n\nUnderstanding and applying proper gas management principles ensures safe, efficient diving operations while maintaining adequate safety margins for emergency response.`,\n    objectives: [\"Calculate accurate gas consumption rates\", \"Plan emergency reserves properly\", \"Master supply monitoring techniques\", \"Understand depth pressure effects\"],\n    estimatedMinutes: 40,\n    isRequired: true,\n  }).returning();\n\n  // Continue with seed completion message\n  console.log('✅ Comprehensive diving education platform seeded successfully!');\n  console.log(`Created ${await db.select().from(aiTutors).then(r => r.length)} AI tutors`);\n  console.log(`Created ${await db.select().from(tracks).then(r => r.length)} comprehensive training tracks`);\n  console.log(`Created ${await db.select().from(lessons).then(r => r.length)} professional lessons`);\n  console.log(`Created ${await db.select().from(quizzes).then(r => r.length)} enhanced assessments`);\n  console.log(`Created ${await db.select().from(questions).then(r => r.length)} multi-type questions`);\n  console.log(`Created ${await db.select().from(practiceScenarios).then(r => r.length)} practice scenarios`);\n}\n\ncomprehensiveSeed().catch(console.error).finally(() => process.exit(0));","size_bytes":21293},"scripts/current-db-seed.ts":{"content":"import { db } from '../server/db.js';\n\n// Manually define the structure that matches current database\nasync function currentDbSeed() {\n  console.log('🌱 Seeding with current database structure...');\n\n  // Insert using raw SQL to avoid schema mismatch\n  await db.execute(`DELETE FROM questions`);\n  await db.execute(`DELETE FROM quizzes`);\n  await db.execute(`DELETE FROM lessons`);\n  await db.execute(`DELETE FROM tracks`);\n\n  // Insert tracks using only existing columns\n  await db.execute(`\n    INSERT INTO tracks (title, slug, summary, is_published) VALUES \n    ('Inspection & Non-Destructive Testing (NDT)', 'inspection-ndt', 'AI-powered comprehensive training in underwater inspection techniques, corrosion assessment, cathodic protection surveying, thickness gauging, magnetic particle inspection, and professional documentation standards. Features expert AI tutor Dr. Sarah Chen.', true),\n    ('Diver Medic Technician', 'diver-medic-technician', 'Advanced medical training with AI tutor Dr. Michael Rodriguez specializing in diving emergencies. Covers scene assessment, ABCDE protocols, airway management, breathing support, circulation assessment, and emergency response procedures.', true),\n    ('Commercial Dive Supervisor', 'commercial-dive-supervisor', 'AI-guided leadership training with Captain James Mitchell covering dive planning fundamentals, risk assessment methodologies, hazard identification protocols, communication systems, and emergency response procedures.', true),\n    ('Air Diver Certification', 'air-diver-certification', 'Essential air diving skills with AI tutor Lisa Thompson including diving physics review, gas management concepts, ascent best practices, problem-solving drills, tool handling safety, and communications.', true),\n    ('Saturation Diver Training', 'saturation-diver-training', 'Specialized AI-assisted training with Commander Robert Hayes for saturation diving operations, system components, human factors in confined environments, and life support systems for deep-sea operations.', true),\n    ('Assistant Life Support Technician (ALST)', 'assistant-life-support-technician', 'AI tutor David Kim guides life support system operation training, gas management principles, environmental control systems, emergency procedures, and equipment maintenance protocols.', true),\n    ('Life Support Technician (LST)', 'life-support-technician', 'Advanced AI-powered training with Rebecca Foster covering life support systems, system design principles, troubleshooting methodologies, emergency management, and team leadership skills.', true)\n  `);\n\n  // Get track IDs for inserting lessons\n  const tracksResult = await db.execute(`SELECT id, slug FROM tracks ORDER BY title`);\n  const tracks = tracksResult.rows;\n\n  // Find specific tracks\n  const ndtTrack = tracks.find(t => t.slug === 'inspection-ndt');\n  const medicTrack = tracks.find(t => t.slug === 'diver-medic-technician');\n  const supervisorTrack = tracks.find(t => t.slug === 'commercial-dive-supervisor');\n  const airDiverTrack = tracks.find(t => t.slug === 'air-diver-certification');\n\n  // Insert lessons using raw SQL\n  if (ndtTrack) {\n    await db.execute(`\n      INSERT INTO lessons (track_id, title, \"order\", content) VALUES \n      ('${ndtTrack.id}', 'Visual Inspection Fundamentals', 1, '# Visual Inspection Fundamentals\n\n## AI Tutor: Dr. Sarah Chen - NDT & Inspection Specialist\n*Expert in Non-Destructive Testing and Inspection with 15+ years in underwater inspection techniques, corrosion assessment, and CP surveying.*\n\nWelcome to professional underwater visual inspection training! I''m Dr. Sarah Chen, your AI tutor specializing in Non-Destructive Testing and underwater inspection techniques. Let''s master the systematic methodologies used in commercial diving operations.\n\n## Learning Objectives\n- Master systematic visual inspection methodologies for commercial operations\n- Understand professional defect identification and classification systems  \n- Learn industry-standard underwater documentation techniques\n- Apply professional safety protocols and quality assurance requirements\n- Develop skills for real-world commercial diving inspection scenarios\n\n## Professional Inspection Methodology\n\n### Pre-Inspection Planning\nProfessional underwater inspection requires systematic preparation:\n\n#### Document Review Process\n- **Structural Drawings Analysis**: Understanding design specifications and critical load paths\n- **Historical Data Review**: Previous inspection reports, maintenance records, incident documentation\n- **Environmental Assessment**: Current conditions, marine growth patterns, visibility factors\n- **Access Planning**: Safe approach routes, working platforms, emergency egress procedures\n\n#### Professional Equipment Preparation\n- **Primary Lighting Systems**: Minimum 10,000 lumen underwater LED systems with redundant backup\n- **Documentation Tools**: Professional underwater cameras (minimum 24MP), calibrated measurement devices\n- **Cleaning Equipment**: Wire brushes, scrapers, high-pressure water cleaning systems for marine growth removal\n- **Safety Equipment**: Emergency ascent devices, redundant communication systems, cutting tools\n\n### Systematic Coverage Methods\n\n#### Grid Pattern Inspection (Industry Standard)\nProfessional standard for comprehensive structural coverage:\n- **Grid Dimensions**: 2x2 meters typical for detailed commercial inspection operations\n- **Overlap Requirements**: 10% minimum between adjacent grids for quality assurance verification\n- **Documentation Protocol**: Mark completed areas systematically on waterproof documentation slates\n- **Quality Control**: Independent verification of critical structural areas by certified personnel\n\n#### Zone-Based Assessment Framework\nStructural priority classification system for commercial operations:\n- **Critical Zones**: Primary load-bearing members, connection points, high-stress structural areas\n- **High Priority Areas**: Secondary structural elements, heavily stressed components, fatigue-prone areas\n- **Standard Zones**: General structural components, cladding systems, non-critical structural elements\n- **Environmental Impact Areas**: Zones with known aggressive conditions or elevated corrosion risk factors\n\n## Professional Defect Identification\n\n### Corrosion Types and Commercial Assessment\n\n#### General Corrosion Assessment\n- **Characteristics**: Uniform metal loss across large surface areas of steel structures\n- **Measurement Protocol**: Thickness reduction assessment using calibrated ultrasonic measurement gauges\n- **Documentation Requirements**: Area percentage affected calculations, average thickness loss documentation\n- **Critical Evaluation Factors**: Rate of progression analysis, remaining material structural integrity assessment\n\n#### Pitting Corrosion Professional Analysis\n- **Recognition Criteria**: Localized deep holes with relatively small surface area impact on structure\n- **Assessment Protocol**: Individual pit dimensional measurement (depth, diameter, density per unit area)\n- **Critical Evaluation Standards**: Depth-to-diameter ratio exceeding industry safety limits (typically 1:1)\n- **Risk Assessment Parameters**: Perforation potential analysis, stress concentration effects on structural integrity\n\nThis comprehensive training provides the professional foundation required for commercial diving NDT operations.'),\n      ('${ndtTrack.id}', 'Corrosion Assessment Techniques', 2, '# Corrosion Assessment Techniques\n\n## AI Tutor: Dr. Sarah Chen - Corrosion Assessment Expert\n*Specialized in underwater corrosion assessment, electrochemical processes, and marine environment analysis*\n\nAdvanced corrosion assessment techniques are essential for professional underwater operations. I''ll guide you through electrochemical processes, measurement methods, and industry standards for marine environments.\n\n## Professional Corrosion Assessment Framework\n\n### Electrochemical Fundamentals\nUnderstanding corrosion science for professional assessment:\n\n#### Corrosion Cell Components\n- **Anode (Oxidation)**: Metal dissolution releasing electrons (Fe → Fe²⁺ + 2e⁻)\n- **Cathode (Reduction)**: Electron consumption (O₂ + 4H⁺ + 4e⁻ → 2H₂O)\n- **Electrolyte**: Seawater providing ionic conductivity (35,000 ppm dissolved salts)\n- **Metallic Current Path**: Electron flow through structural steel components\n\n#### Marine Environment Factors\n- **Chloride Ion Concentration**: Aggressive attack mechanism (19,000 ppm typical seawater)\n- **Dissolved Oxygen**: Cathodic reaction support, depth-dependent variations\n- **Temperature Effects**: Corrosion rate doubling every 10°C increase\n- **pH Variations**: Local acidity effects from marine biological activity\n\n### Assessment Methodology Standards\n\n#### Cathodic Protection Assessment\n- **-850 mV (Ag/AgCl)**: Industry standard minimum protection potential for steel\n- **Polarization Decay**: 100 mV shift requirement from native potential\n- **Current Density**: 20-50 mA/m² typical protection requirements\n- **Environmental Corrections**: Temperature and salinity adjustments\n\nThis comprehensive corrosion assessment training ensures professional competency in advanced underwater inspection techniques.')\n    `);\n  }\n\n  if (medicTrack) {\n    await db.execute(`\n      INSERT INTO lessons (track_id, title, \"order\", content) VALUES \n      ('${medicTrack.id}', 'ABCDE Emergency Assessment Protocol', 1, '# ABCDE Emergency Assessment Protocol\n\n## AI Tutor: Dr. Michael Rodriguez - Emergency Medicine Specialist\n*Emergency medicine specialist focused on diving-related medical emergencies, hyperbaric treatment, and underwater rescue protocols*\n\nWelcome to professional emergency medical response training! I''m Dr. Michael Rodriguez, your AI tutor specializing in diving medical emergencies. The ABCDE protocol provides a systematic, life-saving approach for managing diving emergencies.\n\n## ABCDE Protocol Professional Framework\n\n### Primary Assessment Sequence\nThe ABCDE approach requires strict sequential order:\n- **A**: Airway management and patency assessment\n- **B**: Breathing evaluation and ventilation support\n- **C**: Circulation assessment and hemorrhage control\n- **D**: Disability (Neurological) evaluation and protection\n- **E**: Exposure/Environment control and complete examination\n\n**Critical Principle**: Each step must be completed and stabilized before progressing to the next.\n\n## A - Airway Assessment and Management\n\n### Comprehensive Initial Assessment\nProfessional **Look, Listen, Feel** systematic approach:\n- **Visual Assessment**: Chest movement patterns, facial cyanosis, visible foreign objects\n- **Auditory Assessment**: Air movement sounds, vocalization ability, abnormal breathing noises  \n- **Tactile Assessment**: Air flow sensation at nose/mouth, chest rise confirmation\n\n### Airway Obstruction Recognition\n**Complete Obstruction Emergency Signs**:\n- Absent air movement despite obvious respiratory effort\n- Silent chest presentation with visible distress\n- Rapid progression to unconsciousness and cyanosis\n- Complete inability to cough, speak, or vocalize\n\n**Partial Obstruction Warning Signs**:\n- Stridor (high-pitched inspiratory sound)\n- Significantly diminished air movement\n- Use of accessory breathing muscles\n- Anxiety and agitation from developing hypoxia\n\n### Professional Management Techniques\n\n#### Basic Airway Management\n1. **Head Tilt-Chin Lift**: Primary positioning technique for unconscious patients\n2. **Jaw Thrust**: Alternative for suspected spinal injury\n3. **Manual Removal**: Finger sweep for visible foreign objects\n4. **Patient Positioning**: Log roll for drainage with spinal alignment\n\n## Diving-Specific Emergencies\n\n### Decompression Sickness Assessment\n- **Type I DCS**: Joint pain (bends), skin changes, lymphatic swelling\n- **Type II DCS**: Neurological symptoms, pulmonary involvement\n- **Assessment**: Symptom onset timing correlation with dive profile\n- **Management**: High-flow oxygen, supine positioning, rapid evacuation\n\n### Arterial Gas Embolism Protocol\n- **Recognition**: Immediate neurological symptoms upon surfacing\n- **Symptoms**: Focal neurological deficits, altered consciousness\n- **Management**: Immediate high-flow oxygen, left lateral positioning\n- **Evacuation**: Urgent hyperbaric treatment facility transport\n\nThis comprehensive ABCDE training ensures systematic emergency response capabilities essential for diving operations safety.')\n    `);\n  }\n\n  if (supervisorTrack) {\n    await db.execute(`\n      INSERT INTO lessons (track_id, title, \"order\", content) VALUES \n      ('${supervisorTrack.id}', 'Risk Assessment and Hazard Management', 1, '# Risk Assessment and Hazard Management\n\n## AI Tutor: Captain James Mitchell - Commercial Dive Supervisor\n*Veteran dive supervisor with expertise in dive planning, risk assessment, and emergency response coordination*\n\nComprehensive risk assessment and hazard management form the cornerstone of safe commercial diving operations. This module covers systematic risk identification, assessment methodologies, and mitigation strategies.\n\n## Professional Risk Assessment Framework\n\n### Systematic Hazard Identification\n\n#### Environmental Hazard Categories\n**Marine Environment Hazards**:\n- **Weather Conditions**: Sea state limitations, wind parameters, visibility restrictions\n- **Water Quality**: Temperature extremes, contamination risks, biological hazards\n- **Current and Tidal Forces**: Working current limits, tidal variations\n- **Marine Traffic**: Commercial vessels, shipping lanes, fishing activity\n\n#### Operational Risk Categories\n**Equipment-Related Hazards**:\n- **Life Support Failures**: Breathing gas interruption, gas contamination\n- **Communication Failures**: Hard-wire loss, wireless interference\n- **Tool Malfunctions**: Power tool failures, cutting equipment problems\n- **PPE Issues**: Diving suit integrity, helmet malfunction\n\n### Professional Risk Matrix Development\n\n#### Risk Probability Assessment Scale\n- **Very Low (1)**: Extremely unlikely occurrence\n- **Low (2)**: Unlikely but possible, rare occurrence\n- **Medium (3)**: Possible occurrence, occasional\n- **High (4)**: Likely occurrence, regular\n- **Very High (5)**: Almost certain occurrence\n\n#### Consequence Severity Scale\n- **Negligible (1)**: Minor inconvenience, no significant impact\n- **Minor (2)**: Small delays, minor equipment damage\n- **Moderate (3)**: Significant delays, moderate injuries\n- **Major (4)**: Substantial impact, serious injuries\n- **Catastrophic (5)**: Fatalities, major environmental impact\n\n**Risk Score**: Probability × Consequence = Risk Score\n\n### Hazard Control Hierarchy\n\n#### Control Methods (Most to Least Effective)\n1. **Elimination**: Complete hazard removal\n2. **Substitution**: Safer alternatives\n3. **Engineering Controls**: Physical modifications\n4. **Administrative Controls**: Procedures and training\n5. **Personal Protective Equipment**: Individual protection\n\nThis comprehensive risk assessment training ensures professional competency in safety management essential for commercial dive supervision.')\n    `);\n  }\n\n  if (airDiverTrack) {\n    await db.execute(`\n      INSERT INTO lessons (track_id, title, \"order\", content) VALUES \n      ('${airDiverTrack.id}', 'Gas Management and Consumption Planning', 1, '# Gas Management and Consumption Planning\n\n## AI Tutor: Lisa Thompson - Professional Air Diving Instructor\n*Professional air diving instructor specializing in gas management, ascent procedures, and underwater tool handling safety*\n\nProper gas management forms the foundation of safe air diving operations. This comprehensive module covers consumption calculation methodologies, emergency reserve planning, and supply monitoring techniques.\n\n## Gas Consumption Fundamentals\n\n### Physiological Consumption Factors\nIndividual variation in gas consumption rates:\n\n#### Physical Characteristics Impact\n- **Body Mass Index**: Larger individuals typically require higher gas volumes\n- **Lung Capacity**: Vital capacity directly affects breathing efficiency\n- **Physical Conditioning**: Cardiovascular fitness reduces consumption rates\n- **Age and Health**: Respiratory efficiency changes with age\n\n#### Psychological Influences\n- **Experience Level**: Novice divers consume 50-100% more than experienced divers\n- **Stress Response**: Anxiety can double or triple consumption rates\n- **Task Familiarity**: Unfamiliar work increases mental load and gas use\n- **Emergency Situations**: Panic responses can increase consumption 300-400%\n\n### Environmental Consumption Variables\n\n#### Depth-Related Consumption Changes\nGas consumption increases linearly with absolute pressure:\n- **Surface (1 ATA)**: Baseline consumption measurement\n- **33 feet (2 ATA)**: Exactly double surface consumption\n- **66 feet (3 ATA)**: Triple surface consumption rate\n- **99 feet (4 ATA)**: Quadruple surface consumption rate\n\n**Formula**: Surface Rate × (Depth in feet + 33) ÷ 33 = Depth Consumption Rate\n\n#### Work Load Categories\nProfessional diving work classification:\n- **Light Work (1.5-2.0 CFM)**: Visual inspection, light cleaning\n- **Moderate Work (2.0-3.0 CFM)**: Power tool operation, moderate effort\n- **Heavy Work (3.0-4.5 CFM)**: Cutting, welding, heavy lifting\n- **Emergency Operations (4.5-6.0+ CFM)**: Rescue operations, high stress\n\n### Professional Gas Planning\n\n#### Complete Gas Requirement Formula\n**Total Gas = (Work Time × Consumption Rate × Depth Factor) + Emergency Reserves + Operational Reserves + Surface Reserves**\n\n#### Reserve Requirements\n- **Emergency Reserve**: 25% of total calculated consumption\n- **Emergency Ascent**: 50 cubic feet minimum for ascent\n- **Task Overrun**: 20% additional for extended work time\n- **Surface Reserve**: 50 cubic feet minimum\n\n### Critical Decision Points\n- **Turn-Around Pressure (50%)**: Begin ascent initiation\n- **Emergency Reserve (25%)**: Emergency use only\n- **Surface Reserve (200 PSI)**: Final safety margin\n\nThis comprehensive gas management training ensures safe, efficient diving operations while maintaining adequate safety margins.')\n    `);\n  }\n\n  // Insert quizzes and questions\n  const lessonsResult = await db.execute(`SELECT id, title, track_id FROM lessons`);\n  const lessons = lessonsResult.rows;\n\n  const ndtLesson1 = lessons.find(l => l.title === 'Visual Inspection Fundamentals');\n  const medicLesson1 = lessons.find(l => l.title === 'ABCDE Emergency Assessment Protocol');\n  const airLesson1 = lessons.find(l => l.title === 'Gas Management and Consumption Planning');\n\n  if (ndtLesson1) {\n    await db.execute(`\n      INSERT INTO quizzes (lesson_id, title, time_limit) VALUES \n      ('${ndtLesson1.id}', 'Professional NDT Assessment - Visual Inspection', 30)\n    `);\n    \n    const quizResult = await db.execute(`SELECT id FROM quizzes WHERE lesson_id = '${ndtLesson1.id}'`);\n    const quizId = quizResult.rows[0]?.id;\n    \n    if (quizId) {\n      await db.execute(`\n        INSERT INTO questions (quiz_id, prompt, a, b, c, d, answer, \"order\") VALUES \n        ('${quizId}', 'In professional commercial underwater inspection, what is the primary advantage of systematic grid pattern inspection methodology?', 'Reduces total inspection time and operational costs', 'Ensures complete systematic coverage with quality assurance verification and eliminates missed critical areas', 'Minimizes specialized lighting and equipment requirements', 'Reduces diver physical exertion and gas consumption rates', 'b', 1),\n        ('${quizId}', 'Which corrosion type is most commonly associated with dissimilar metal connections in marine environments?', 'General uniform corrosion across large surface areas', 'Localized pitting corrosion with high depth-to-diameter ratios', 'Galvanic corrosion with preferential anode attack at connection points', 'Crevice corrosion in confined joint spaces', 'c', 2),\n        ('${quizId}', 'According to NACE standards, what is the minimum cathodic protection potential for steel in seawater?', '-750 mV (Ag/AgCl reference electrode)', '-850 mV (Ag/AgCl reference electrode)', '-950 mV (Ag/AgCl reference electrode)', '-650 mV (Ag/AgCl reference electrode)', 'b', 3)\n      `);\n    }\n  }\n\n  if (medicLesson1) {\n    await db.execute(`\n      INSERT INTO quizzes (lesson_id, title, time_limit) VALUES \n      ('${medicLesson1.id}', 'Professional Emergency Medical Response Assessment', 25)\n    `);\n    \n    const quizResult = await db.execute(`SELECT id FROM quizzes WHERE lesson_id = '${medicLesson1.id}'`);\n    const quizId = quizResult.rows[0]?.id;\n    \n    if (quizId) {\n      await db.execute(`\n        INSERT INTO questions (quiz_id, prompt, a, b, c, d, answer, \"order\") VALUES \n        ('${quizId}', 'In the ABCDE emergency assessment protocol, what is the correct systematic sequence?', 'Airway patency, Breathing adequacy, Circulation status, Disability assessment, Exposure examination with sequential stabilization', 'Alert level, Blood pressure, CPR readiness, Drug administration, Emergency transport', 'Ascent procedures, Buoyancy control, Communication systems, Depth monitoring, Emergency evacuation', 'Assessment priority, Basic life support, Clinical evaluation, Diagnostic testing, Emergency procedures', 'a', 1),\n        ('${quizId}', 'What is the primary difference between Type I and Type II decompression sickness?', 'Type I affects only joints, Type II affects only lungs', 'Type I involves mild joint pain and skin manifestations, Type II involves serious neurological and pulmonary complications', 'Type I occurs at shallow depths, Type II occurs at deep depths', 'Type I responds to oxygen alone, Type II requires surgery', 'b', 2),\n        ('${quizId}', 'In arterial gas embolism emergency management, what is the optimal patient positioning?', 'Upright sitting position with standard oxygen', 'Left lateral recumbent position with immediate high-flow oxygen and urgent hyperbaric evacuation', 'Prone position with assisted ventilation', 'Right lateral position with standard oxygen', 'b', 3)\n      `);\n    }\n  }\n\n  console.log('✅ Professional diving education platform successfully seeded!');\n  console.log('Created 7 comprehensive professional training tracks with AI tutors');\n  console.log('Created detailed professional lessons with industry-standard content');\n  console.log('Created professional assessments with comprehensive questions');\n  \n  console.log('\\n🎓 Professional Training Tracks Created:');\n  console.log('1. Inspection & Non-Destructive Testing (NDT) - Dr. Sarah Chen');\n  console.log('2. Diver Medic Technician - Dr. Michael Rodriguez');\n  console.log('3. Commercial Dive Supervisor - Captain James Mitchell');\n  console.log('4. Air Diver Certification - Lisa Thompson');\n  console.log('5. Saturation Diver Training - Commander Robert Hayes');\n  console.log('6. Assistant Life Support Technician (ALST) - David Kim');\n  console.log('7. Life Support Technician (LST) - Rebecca Foster');\n}\n\ncurrentDbSeed().catch(console.error).finally(() => process.exit(0));","size_bytes":22983},"scripts/final-professional-seed.ts":{"content":"import { db } from '../server/db.js';\nimport { tracks, lessons, quizzes, questions } from '../shared/schema.js';\n\nasync function finalProfessionalSeed() {\n  console.log('🌱 Seeding comprehensive professional diving education content...');\n\n  // Clear existing data\n  await db.delete(questions);\n  await db.delete(quizzes);\n  await db.delete(lessons);\n  await db.delete(tracks);\n\n  // Create the 7 comprehensive professional diving tracks from DIVER-WELL-TRAINING\n  const [ndtTrack] = await db.insert(tracks).values({\n    title: \"Inspection & Non-Destructive Testing (NDT)\",\n    slug: \"inspection-ndt\",\n    summary: \"AI-powered comprehensive training in underwater inspection techniques, corrosion assessment, cathodic protection surveying, thickness gauging, magnetic particle inspection, photo/video documentation, and marine growth identification for commercial diving operations.\",\n    isPublished: true,\n  }).returning();\n\n  const [medicTrack] = await db.insert(tracks).values({\n    title: \"Diver Medic Technician\",\n    slug: \"diver-medic-technician\",\n    summary: \"Advanced medical training with AI tutor specializing in scene assessment and safety, ABCDE emergency protocols, airway management techniques, breathing support procedures, circulation assessment, disability evaluation, and exposure management for diving emergencies.\",\n    isPublished: true,\n  }).returning();\n\n  const [supervisorTrack] = await db.insert(tracks).values({\n    title: \"Commercial Dive Supervisor\",\n    slug: \"commercial-dive-supervisor\",\n    summary: \"AI-guided leadership training covering dive planning fundamentals, risk assessment methodologies, hazard identification protocols, communication systems, emergency response procedures, and quality assurance systems for commercial diving operations.\",\n    isPublished: true,\n  }).returning();\n\n  const [airDiverTrack] = await db.insert(tracks).values({\n    title: \"Air Diver Certification\",\n    slug: \"air-diver-certification\", \n    summary: \"Essential air diving skills with AI tutoring including diving physics review, gas management concepts, ascent best practices, problem-solving drills, tool handling safety, and basic communications for professional diving operations.\",\n    isPublished: true,\n  }).returning();\n\n  const [satDiverTrack] = await db.insert(tracks).values({\n    title: \"Saturation Diver Training\",\n    slug: \"saturation-diver-training\",\n    summary: \"Specialized AI-assisted training for saturation diving operations overview, system components and operation, human factors in confined environments, high-level risk themes, and life support systems for deep-sea commercial operations.\",\n    isPublished: true,\n  }).returning();\n\n  const [alstTrack] = await db.insert(tracks).values({\n    title: \"Assistant Life Support Technician (ALST)\",\n    slug: \"assistant-life-support-technician\",\n    summary: \"AI tutor for life support system operation, gas management principles, environmental control systems, emergency procedures, equipment maintenance protocols, and safety systems essential for diving support operations.\",\n    isPublished: true,\n  }).returning();\n\n  const [lstTrack] = await db.insert(tracks).values({\n    title: \"Life Support Technician (LST)\",\n    slug: \"life-support-technician\",\n    summary: \"Advanced AI-powered life support systems training, system design principles, troubleshooting methodologies, emergency management procedures, team leadership skills, and quality assurance protocols for senior technical positions.\",\n    isPublished: true,\n  }).returning();\n\n  // NDT Track - Professional Content\n  const [ndtLesson1] = await db.insert(lessons).values({\n    trackId: ndtTrack.id,\n    title: \"Visual Inspection Fundamentals\",\n    order: 1,\n    content: `# Visual Inspection Fundamentals\n\n## AI Tutor: Dr. Sarah Chen - NDT & Inspection Specialist\n*Expert in Non-Destructive Testing and Inspection with 15+ years in underwater inspection techniques, corrosion assessment, and CP surveying.*\n\nVisual inspection forms the foundation of underwater non-destructive testing for commercial diving operations. This comprehensive module covers industry-standard techniques and protocols used in offshore, marine construction, and underwater maintenance operations.\n\n## Learning Objectives\n- Master systematic visual inspection methodologies for commercial operations\n- Understand defect identification and classification systems used in industry\n- Learn professional underwater documentation techniques and standards\n- Apply industry safety protocols and quality assurance requirements\n- Develop skills for real-world commercial diving inspection scenarios\n\n## Professional Inspection Methodology\n\n### Pre-Inspection Planning\nCommercial underwater inspection requires thorough preparation and systematic approach:\n\n#### Document Review Process\n- **Structural Drawings Analysis**: Understanding design specifications and critical load paths\n- **Historical Data Review**: Previous inspection reports, maintenance records, incident history\n- **Environmental Assessment**: Current conditions, marine growth patterns, visibility factors\n- **Access Planning**: Safe approach routes, working platforms, emergency egress procedures\n\n#### Professional Equipment Preparation\n- **Primary Lighting Systems**: Minimum 10,000 lumen underwater LED systems with backup\n- **Documentation Tools**: Underwater cameras (minimum 24MP), calibrated measurement devices\n- **Cleaning Equipment**: Wire brushes, scrapers, high-pressure water cleaning systems\n- **Safety Equipment**: Emergency ascent devices, redundant communication systems\n\n### Systematic Coverage Methods\n\n#### Grid Pattern Inspection (Industry Standard)\nProfessional standard for comprehensive structural coverage:\n- **Grid Dimensions**: 2x2 meters typical for detailed commercial inspection\n- **Overlap Requirements**: 10% minimum between adjacent grids for quality assurance\n- **Documentation Protocol**: Mark completed areas on waterproof documentation slates\n- **Quality Control**: Independent verification of critical structural areas\n\n#### Zone-Based Assessment Framework\nStructural priority classification system for commercial operations:\n- **Critical Zones**: Primary load-bearing members, connection points, high-stress areas\n- **High Priority Areas**: Secondary structural elements, heavily stressed components\n- **Standard Zones**: General structural components, cladding systems, non-critical elements\n- **Environmental Impact Areas**: Zones with known aggressive conditions or high corrosion risk\n\n## Defect Identification and Professional Classification\n\n### Corrosion Types and Commercial Assessment\n\n#### General Corrosion Assessment\n- **Characteristics**: Uniform metal loss across large surface areas of structures\n- **Measurement Protocol**: Thickness reduction using calibrated ultrasonic gauges\n- **Documentation Requirements**: Area percentage affected, average thickness loss calculations\n- **Critical Evaluation Factors**: Rate of progression analysis, remaining material integrity\n\n#### Pitting Corrosion Analysis\n- **Professional Recognition**: Localized deep holes with small surface area impact\n- **Assessment Protocol**: Individual pit measurement (depth, diameter, density per unit area)\n- **Critical Evaluation Criteria**: Depth-to-diameter ratio exceeding industry limits (1:1)\n- **Risk Assessment Parameters**: Perforation potential, stress concentration effects on structure\n\n#### Crevice Corrosion Investigation\n- **Typical Locations**: Confined spaces, joint areas, under marine growth deposits\n- **Detection Challenges**: Often hidden from view, requires systematic cleaning for assessment\n- **Professional Documentation**: Access photographs with measurement scales, dimensional surveys\n- **Prevention Recommendations**: Design modification suggestions for future maintenance access\n\n#### Galvanic Corrosion Evaluation\n- **Recognition Patterns**: Preferential attack at dissimilar metal connections and interfaces\n- **Analysis Method**: Anode/cathode identification using electrochemical galvanic series\n- **Measurement Protocol**: Extent of preferential attack, remaining material structural integrity\n- **Professional Recommendations**: Isolation methods, cathodic protection system assessment\n\n### Structural Defects Professional Assessment\n\n#### Fatigue Cracking Analysis\n- **Identification Characteristics**: Linear defects, often multiple parallel crack patterns\n- **Growth Pattern Documentation**: Progressive extension from stress concentration points\n- **Professional Documentation**: Length, width, penetration depth measurements with scaling\n- **Critical Structural Assessment**: Load path interruption potential, crack propagation analysis\n\n#### Weld Defects Professional Evaluation\n- **Lack of Fusion Assessment**: Incomplete joint formation at weld root and sidewall interfaces\n- **Porosity Professional Analysis**: Gas bubble size distribution, structural impact assessment\n- **Profile Issue Documentation**: Undercut depth measurement, reinforcement geometry evaluation\n- **Repair Requirement Assessment**: Access considerations, approved welding procedure needs\n\n## Professional Documentation Standards\n\n### Real-Time Field Recording Protocol\nSystematic documentation during commercial inspection operations:\n\n#### Location Identification Systems\n- **GPS Coordinate Systems**: Surface reference points with sub-meter accuracy requirements\n- **Structural Grid References**: Platform coordinate systems, member identification protocols\n- **Depth Reference Standards**: Chart datum, mean sea level, structure-specific datum systems\n- **Orientation Documentation**: Magnetic headings, structural reference bearings\n\n#### Defect Characterization Professional Protocol\n- **Industry Classification Systems**: Standard defect categories (AWS D3.6M, NACE, API)\n- **Dimensional Recording Standards**: Digital calipers, measurement scales, photographic documentation\n- **Severity Assessment Criteria**: Structural significance evaluation, safety implications analysis\n- **Priority Ranking System**: Immediate, short-term, long-term action requirements\n\n### Professional Photography Standards\nHigh-quality underwater documentation techniques for commercial operations:\n\n#### Technical Requirements for Commercial Documentation\n- **Resolution Standards**: Minimum 24 megapixel for detailed defect documentation\n- **Professional Lighting**: Multiple source illumination systems, shadow elimination techniques\n- **Scale Reference Requirements**: Calibrated measurement devices in all detailed photographs\n- **Multiple Perspective Protocol**: Overview, detail, and profile perspectives for complete documentation\n\n#### Professional Documentation Protocol\n- **Overview Documentation**: General area condition, defect location context establishment\n- **Detail Image Requirements**: Close-up defect characteristics, measurement scale inclusion\n- **Sequential Coverage Protocol**: Systematic area documentation with position references\n- **Quality Control Procedures**: Real-time image review, retake procedures for clarity\n\n## Safety Integration and Professional Risk Management\n\n### Commercial Diving Hazard Recognition Protocol\nProfessional safety considerations during underwater inspection operations:\n\n#### Structural Safety Hazards\n- **Instability Assessment Protocol**: Compromised structural integrity professional evaluation\n- **Sharp Edge Management**: Cut protection systems, safe handling procedures\n- **Falling Object Risk Assessment**: Loose component evaluation, debris hazard analysis\n- **Confined Space Entry Protocol**: Limited access area safety procedures, emergency egress\n\n#### Environmental Safety Factors\n- **Current Condition Limits**: Working current thresholds, emergency response procedures\n- **Visibility Management**: Adequate lighting requirements, navigation safety protocols\n- **Marine Life Hazard Assessment**: Hazardous species awareness, avoidance procedures\n- **Contamination Risk Evaluation**: Water quality assessment, biological hazard protocols\n\n### Professional Emergency Response Procedures\nCritical safety protocols for commercial underwater inspection:\n\n#### Immediate Hazard Response Protocol\n- **Structural Collapse Risk**: Emergency ascent procedures, immediate area evacuation\n- **Equipment Entanglement**: Cutting tool accessibility, buddy diver assistance protocols\n- **Medical Emergency Response**: Rapid ascent protocols, surface support team activation\n- **Lost Diver Procedures**: Systematic search patterns, emergency communication activation\n\n#### Communication Requirements for Commercial Operations\n- **Regular Status Check-ins**: Mandatory reports every 10 minutes minimum\n- **Critical Finding Reports**: Immediate surface notification requirements for safety hazards\n- **Emergency Signal Standards**: Standardized distress communication protocols\n- **Documentation Backup**: Real-time data transmission to surface support systems\n\n## Professional Practice Scenario: Offshore Platform Inspection\n\n**Commercial Scenario**: Complete professional visual inspection of offshore platform leg showing corrosion evidence and marine growth accumulation at 18-meter depth with 4-meter visibility conditions.\n\n### Pre-Dive Professional Briefing Requirements\n- **Structure Service History**: 12-year-old platform operational history, previous inspection findings\n- **Environmental Operating Conditions**: 2-knot current, 18°C water temperature, moderate sea state\n- **Commercial Work Scope**: 4x4 meter inspection area, client documentation requirements\n- **Safety Considerations**: Sharp edges from previous repair work, overhead structural hazards\n\n### Professional Inspection Task Sequence\n1. **Initial Safety and Area Assessment**: Overall condition survey, safety hazard identification\n2. **Systematic Marine Growth Removal**: Professional cleaning using appropriate commercial tools\n3. **Grid Pattern Professional Inspection**: 2x2 meter systematic coverage with required overlap\n4. **Professional Defect Documentation**: Photography with measurement scales, detailed recording\n5. **Structural Integrity Assessment**: Load path evaluation, commercial repair priority determination\n\n### Professional Deliverables for Commercial Client\n- **Comprehensive Field Notes**: Real-time observation recording with technical sketches\n- **Professional Photographic Documentation**: Minimum 50 high-resolution images with measurement scales\n- **Complete Dimensional Survey**: Comprehensive defect measurement inventory with calculations\n- **Professional Assessment Report**: Structural significance evaluation with repair recommendations\n- **Priority Matrix**: Risk-based repair scheduling with cost-benefit analysis\n\n### Quality Assurance Professional Verification\n- **Independent Peer Review**: Technical verification of critical findings by certified inspector\n- **Documentation Completeness Audit**: Checklist verification against client requirements\n- **Technical Accuracy Verification**: Measurement verification, engineering calculation checks\n- **Safety Compliance Documentation**: Protocol adherence verification, incident reporting systems\n\nThis comprehensive professional visual inspection training provides the commercial foundation required for NDT operations in commercial diving, ensuring consistent, reliable results that meet industry standards, regulatory requirements, and professional certification criteria.`,\n  }).returning();\n\n  const [ndtLesson2] = await db.insert(lessons).values({\n    trackId: ndtTrack.id,\n    title: \"Corrosion Assessment Techniques\",\n    order: 2,\n    content: `# Corrosion Assessment Techniques\n\n## AI Tutor: Dr. Sarah Chen - Underwater Corrosion Assessment Expert\n*Advanced corrosion assessment techniques for professional underwater inspection operations, covering electrochemical processes, measurement methods, and industry standards.*\n\nProfessional corrosion assessment requires understanding electrochemical processes, quantitative measurement techniques, and industry standards for underwater marine environments in commercial operations.\n\n## Professional Corrosion Assessment Framework\n\n### Electrochemical Fundamentals for Commercial Assessment\nUnderstanding the scientific principles behind underwater corrosion processes:\n\n#### Corrosion Cell Components in Marine Environment\n- **Anode (Oxidation Reaction)**: Metal dissolution releasing electrons (Fe → Fe²⁺ + 2e⁻)\n- **Cathode (Reduction Reaction)**: Electron consumption (O₂ + 4H⁺ + 4e⁻ → 2H₂O)\n- **Electrolyte Function**: Seawater providing ionic conductivity (35,000 ppm dissolved salts)\n- **Metallic Current Path**: Electron flow through structural steel components\n\n#### Marine Environment Corrosion Factors\n- **Chloride Ion Concentration**: Aggressive attack mechanism (19,000 ppm typical seawater)\n- **Dissolved Oxygen Availability**: Cathodic reaction support, depth-dependent variations\n- **Temperature Gradient Effects**: Corrosion rate doubling every 10°C temperature increase\n- **pH Variation Impact**: Local acidity effects from marine biological activity\n\n### Professional Assessment Methodology Standards\n\n#### Visual Corrosion Assessment Protocol\nProfessional visual evaluation techniques for commercial operations:\n\n**Surface Condition Classification Categories**:\n- **Grade A (Excellent)**: No visible corrosion, intact protective coating systems\n- **Grade B (Good)**: Light surface corrosion, 5-25% surface area affected\n- **Grade C (Fair)**: Moderate corrosion damage, 25-50% surface area affected  \n- **Grade D (Poor)**: Heavy corrosion damage, >50% area affected with significant metal loss\n\n**Professional Pattern Recognition Analysis**:\n- **Uniform Attack Pattern**: Even metal loss distribution across large structural areas\n- **Localized Corrosion Pattern**: Concentrated attack in specific environmental zones\n- **Preferential Corrosion Pattern**: Selective attack on specific metallurgical phases\n- **Microbiologically Influenced Pattern**: Bacterial colony-associated corrosion patterns\n\n#### Quantitative Professional Assessment Techniques\n\n**Half-Cell Potential Measurement Protocol**:\n- **Reference Electrode Standard**: Silver/Silver Chloride (Ag/AgCl) in seawater electrolyte\n- **Measurement Grid System**: 1-meter spacing for detailed commercial surveys\n- **Professional Interpretation**: More negative potentials indicate active corrosion processes\n- **Industry Standards**: ASTM C876 modified for marine underwater applications\n\n**Professional Measurement Protocol Steps**:\n1. **Equipment Calibration Verification**: Daily accuracy verification using certified standard solutions\n2. **Grid Establishment**: Systematic measurement point layout with GPS coordination\n3. **Electrical Contact Verification**: Proper connection confirmation with structure\n4. **Data Recording Protocol**: Potential values with precise location coordinates\n5. **Trend Analysis**: Statistical comparison with previous survey historical data\n\n## Professional Cathodic Protection Assessment\n\n### Industry Protection Criteria Standards\nEstablished commercial protection potentials for marine structures:\n\n#### Primary Professional Criteria\n- **-850 mV (Ag/AgCl)**: Industry standard minimum protection potential for carbon steel\n- **Polarization Decay Test**: 100 mV shift requirement from native corrosion potential\n- **Current Density Range**: 20-50 mA/m² typical protection current requirements\n- **Environmental Correction Factors**: Temperature and salinity adjustment calculations\n\n#### Professional Assessment Procedures\n**Instant-Off Potential Measurement Technique**:\n- **Technical Purpose**: Eliminate ohmic (IR) drop effects for accurate steel potential\n- **Professional Technique**: Momentary cathodic current interruption, rapid potential reading\n- **Specialized Equipment**: High-speed data logging systems, synchronized interruption equipment\n- **Data Interpretation**: True steel electrochemical potential without voltage drop influences\n\n**Comprehensive Polarization Survey Protocol**:\n- **Native Potential Measurement**: Natural corrosion potential without applied protection\n- **Polarized Potential Assessment**: Electrochemical potential with cathodic protection applied\n- **Decay Characteristic Analysis**: Depolarization curve mathematical analysis\n- **Protection Effectiveness Confirmation**: Adequate electrochemical shift verification\n\n### Common Commercial Protection System Problems\n\n#### Inadequate Protection System Issues\n- **Insufficient Current Delivery**: Sacrificial anode capacity limitations or galvanic anode depletion\n- **Poor Current Distribution**: Electrical current shadowing behind large structural components\n- **High Electrical Resistance**: Connection deterioration, protective coating breakdown effects\n- **System Design Limitations**: Inadequate anode quantity or suboptimal placement configuration\n\n**Professional Diagnostic Techniques**:\n- **Current Distribution Survey Mapping**: Systematic anode effectiveness evaluation\n- **Electrical Resistance Measurement**: Connection integrity verification testing\n- **Anode Condition Assessment**: Consumption rate evaluation and remaining life calculation\n- **System Performance Trending**: Historical effectiveness analysis over operational time\n\n#### Over-Protection System Problems\n- **Hydrogen Embrittlement Risk**: High-strength steel susceptibility at excessive potentials\n- **Coating Disbondment Issues**: Alkaline condition-induced coating failure mechanisms\n- **Calcareous Deposit Formation**: Excessive current density effects on structure\n- **Accelerated Anode Consumption**: Economic impact assessment of over-protection\n\n## Professional Thickness Measurement Techniques\n\n### Ultrasonic Testing Methods for Commercial Operations\n\n#### Professional Equipment Configuration\n**Transducer Selection Criteria**:\n- **Frequency Range Selection**: 2-10 MHz depending on material type and thickness range\n- **Element Size Specifications**: 6-13mm diameter for general purpose commercial applications\n- **Cable Length Optimization**: Minimize for underwater operations, typically <15 meters maximum\n- **Protective Housing Requirements**: Pressure-rated construction, impact-resistant for commercial use\n\n**Professional Calibration Requirements**:\n- **Reference Standard Blocks**: Known thickness specimens of identical material composition\n- **Velocity Verification Protocol**: Material-specific ultrasonic sound velocity confirmation\n- **Temperature Compensation**: Environmental correction factors for actual operating conditions\n- **System Linearity Verification**: Measurement accuracy verification across full operating range\n\n#### Professional Measurement Protocols\n**Surface Preparation Professional Standards**:\n- **Cleanliness Requirements**: Complete marine growth and corrosion product removal\n- **Surface Roughness Standards**: Smooth finish requirements for ultrasonic probe contact\n- **Coupling Agent Application**: Appropriate ultrasonic couplant for sound transmission\n- **Access Platform Stability**: Stable positioning platform for consistent measurement repeatability\n\n**Professional Data Collection Procedures**:\n1. **Systematic Grid Establishment**: Professional measurement point layout with documentation\n2. **Multiple Reading Protocol**: Minimum 5 independent readings per location for statistical accuracy\n3. **Statistical Analysis**: Mean, standard deviation, minimum value recording and analysis\n4. **Trend Monitoring**: Mathematical comparison with baseline and previous survey data\n5. **Critical Area Focus**: Intensive measurement of suspected high-corrosion problem areas\n\n### Professional Data Interpretation Methods\n\n#### Statistical Analysis Techniques for Commercial Assessment\n**Professional Measurement Evaluation**:\n- **Mean Thickness Calculation**: Average remaining material statistical calculation\n- **Standard Deviation Analysis**: Measurement precision and accuracy assessment\n- **Minimum Value Identification**: Worst-case structural condition identification\n- **Statistical Confidence Intervals**: Measurement accuracy and reliability determination\n\n**Corrosion Rate Professional Calculation**:\n- **Metal Loss Rate Formula**: (Original Design Thickness - Current Thickness) / Service Time\n- **Remaining Service Life**: (Current Thickness - Minimum Design Thickness) / Corrosion Rate\n- **Inspection Interval Determination**: Risk-based assessment for future inspection scheduling\n- **Trend Analysis**: Statistical evaluation of corrosion rate acceleration or deceleration patterns\n\n#### Professional Engineering Assessment\n**Structural Adequacy Professional Evaluation**:\n- **Design Minimum Requirements**: Original engineering specification requirements verification\n- **Current Code Requirements**: Applicable industry standards (API RP-2A, AWS D3.6M, NACE)\n- **Safety Factor Assessment**: Conservative operation margin evaluation and verification\n- **Load Consideration Analysis**: Actual operational loading versus original design conditions\n\n**Risk-Based Professional Assessment**:\n- **Failure Probability Analysis**: Statistical structural failure analysis methodology\n- **Consequence Evaluation**: Environmental, safety, and economic impact assessment\n- **Professional Risk Matrix**: Priority ranking system for maintenance action planning\n- **Inspection Frequency Optimization**: Risk-based interval determination for cost-effectiveness\n\n## Professional Documentation and Commercial Reporting\n\n### Field Data Management for Commercial Operations\nComprehensive professional data collection and organization systems:\n\n#### Real-Time Professional Documentation\n- **Electronic Data Logger Systems**: Automated measurement recording with timestamps\n- **GPS Integration Systems**: Precise location documentation with sub-meter accuracy\n- **Photographic Correlation Protocol**: Visual evidence correlation with quantitative measurement data\n- **Environmental Condition Recording**: Systematic documentation of conditions affecting measurements\n\n#### Professional Quality Assurance Protocols\n- **Duplicate Measurement Verification**: Independent verification procedures for critical areas\n- **Daily Calibration Verification**: Equipment accuracy checks with certified standards\n- **Data Validation Procedures**: Statistical range and consistency verification protocols\n- **Redundant Backup Systems**: Multiple data storage and transmission systems\n\n### Professional Assessment Reports for Commercial Clients\nIndustry-standard reporting formats for commercial operations:\n\n#### Executive Summary Professional Requirements\n- **Critical Findings Summary**: Conditions requiring immediate client attention and action\n- **Overall Structural Assessment**: Professional condition grade with trending analysis\n- **Priority Recommendation Matrix**: Risk-based action priorities with cost implications\n- **Economic Impact Analysis**: Professional repair cost estimates and operational implications\n\n#### Technical Analysis Professional Section\n- **Methodology Description**: Detailed techniques and industry standards applied\n- **Professional Data Presentation**: Statistical tables, trend graphs, mathematical analysis\n- **Historical Comparison Studies**: Multi-year trending analysis and benchmark comparisons\n- **Uncertainty Analysis**: Measurement accuracy assessment and statistical confidence levels\n\n## Advanced Professional Practice Scenario\n\n**Complex Commercial Assessment Project**: Complete corrosion assessment of 15-year-old offshore production platform including visual survey, cathodic protection evaluation, and comprehensive thickness monitoring program.\n\n### Professional Project Scope Definition\n- **Structure Specifications**: 8-leg jacket platform, 25-meter water depth, continuous operation\n- **Service History Documentation**: Complete operational history, maintenance records, environmental exposure\n- **Assessment Requirements**: Regulatory compliance verification, insurance company requirements\n- **Commercial Schedule**: 5-day weather window, multi-diver coordinated operations\n\n### Professional Technical Execution Plan\n1. **Pre-Survey Preparation Phase**: Complete document review, equipment calibration verification\n2. **Visual Condition Survey**: Systematic photographic documentation with measurement correlation\n3. **Cathodic Protection Testing**: Comprehensive potential surveys, current distribution analysis\n4. **Thickness Monitoring Program**: Critical area measurement with statistical analysis\n5. **Professional Data Analysis**: Statistical evaluation, trend analysis, predictive modeling\n6. **Commercial Report Generation**: Professional assessment with prioritized recommendations\n\nThis comprehensive professional corrosion assessment training ensures commercial competency in advanced underwater inspection techniques, meeting industry standards for commercial diving operations, regulatory compliance requirements, and professional certification criteria for NDT specialists.`,\n  }).returning();\n\n  // Continue with other tracks...\n\n  // Diver Medic Technician Track\n  const [medicLesson1] = await db.insert(lessons).values({\n    trackId: medicTrack.id,\n    title: \"ABCDE Emergency Assessment Protocol\",\n    order: 1,\n    content: `# ABCDE Emergency Assessment Protocol\n\n## AI Tutor: Dr. Michael Rodriguez - Emergency Medicine Specialist\n*Emergency medicine specialist focused on diving-related medical emergencies, hyperbaric treatment, and underwater rescue protocols*\n\nThe ABCDE assessment protocol provides a systematic, life-saving approach for evaluating and managing diving emergencies. This comprehensive framework ensures critical priorities are addressed in the correct sequence for optimal patient outcomes.\n\n## ABCDE Protocol Professional Framework\n\n### Primary Assessment Sequence Protocol\nThe ABCDE approach must be followed in strict sequential order for professional emergency response:\n- **A**: Airway management and patency assessment\n- **B**: Breathing evaluation and ventilation support  \n- **C**: Circulation assessment and hemorrhage control\n- **D**: Disability (Neurological) evaluation and protection\n- **E**: Exposure/Environment control and complete examination\n\n**Critical Principle**: Each assessment step must be completed and stabilized before progressing to the next level, with immediate life-saving interventions taking absolute priority over sequence completion.\n\n## A - Airway Assessment and Professional Management\n\n### Comprehensive Initial Airway Assessment\nProfessional **Look, Listen, Feel** systematic approach:\n- **Visual Assessment (Look)**: Chest movement patterns, facial cyanosis, visible foreign objects or obstruction\n- **Auditory Assessment (Listen)**: Air movement sounds, vocalization ability, abnormal breathing noises\n- **Tactile Assessment (Feel)**: Air flow sensation at nose/mouth, chest rise confirmation\n\n### Airway Obstruction Recognition and Classification\n**Complete Airway Obstruction Emergency Signs**:\n- Absent air movement despite obvious respiratory effort and distress\n- Silent chest presentation with visible distress and panic\n- Rapid progression to unconsciousness and cyanosis\n- Complete inability to cough, speak, or vocalize\n\n**Partial Airway Obstruction Warning Signs**:\n- Stridor (high-pitched inspiratory breathing sound indicating upper airway narrowing)\n- Significantly diminished air movement with increased respiratory effort\n- Use of accessory breathing muscles indicating respiratory distress\n- Anxiety and agitation from developing hypoxia and air hunger\n\n### Professional Airway Management Techniques\n\n#### Basic Airway Management Interventions\n1. **Head Tilt-Chin Lift Maneuver**: Primary positioning technique for unconscious patients\n   - Place one hand on patient's forehead, apply gentle backward pressure\n   - Use fingertips to lift chin upward (avoid pressure on soft tissues)\n   - Maintain neutral spine alignment if spinal injury suspected\n\n2. **Jaw Thrust Technique**: Preferred method when spinal injury suspected\n   - Position yourself at head of patient for optimal leverage\n   - Place fingers behind angles of jaw, lift jaw forward\n   - Maintain head and neck stabilization throughout procedure\n\n#### Advanced Airway Clearance Techniques\n- **Manual Foreign Object Removal**: Finger sweep technique for visible obstructions\n- **Suction Clearance**: Professional suction devices for fluid or debris removal\n- **Patient Positioning**: Log roll technique for drainage while maintaining spinal alignment\n- **Back Blow Technique**: Conscious choking victim emergency intervention\n\n### Professional Advanced Airway Management\n- **Oropharyngeal Airway (OPA)**: Unconscious patients without gag reflex only\n- **Nasopharyngeal Airway (NPA)**: Conscious or semiconscious patients with intact gag reflex\n- **Bag-Valve-Mask Ventilation**: Positive pressure ventilation for inadequate breathing\n- **Advanced Airway Devices**: Endotracheal intubation when appropriately trained and equipped\n\n## B - Breathing Assessment and Professional Support\n\n### Comprehensive Breathing Evaluation Parameters\nProfessional assessment of **Rate, Rhythm, Quality, and Effort**:\n- **Respiratory Rate Assessment**: Normal adult range 12-20 breaths per minute\n- **Breathing Rhythm Evaluation**: Regular versus irregular breathing patterns\n- **Breathing Quality Analysis**: Deep versus shallow, effective versus ineffective ventilation\n- **Respiratory Effort Assessment**: Use of accessory muscles, signs of respiratory distress\n\n### Professional Breathing Emergency Management\n\n#### Respiratory Arrest Emergency Protocol\n- **Recognition Criteria**: Complete absence of chest movement, no detectable air flow\n- **Immediate Management**: Institute rescue breathing immediately without delay\n- **Professional Ventilation Rate**: 10-12 assisted breaths per minute for adults\n- **Ventilation Volume**: Sufficient to produce visible chest rise with each breath\n\n#### Respiratory Distress Professional Management\n- **Recognition Signs**: Increased respiratory rate, labored breathing, accessory muscle use\n- **Patient Positioning**: Upright position if conscious and no spinal injury contraindications\n- **Oxygen Therapy**: High-flow oxygen administration if available and trained\n- **Continuous Monitoring**: Ongoing assessment of breathing effectiveness and patient response\n\n### Diving-Specific Breathing Emergency Protocols\n\n#### Pulmonary Barotrauma Emergency Management\n- **Pneumothorax Recognition**: Sudden chest pain, severe difficulty breathing, decreased breath sounds\n- **Emergency Management**: High-flow oxygen therapy, upright positioning, urgent medical evacuation\n- **Tension Pneumothorax**: Life-threatening condition requiring immediate needle decompression\n- **Prevention Education**: Proper ascent procedures, lung overexpansion injury awareness\n\n#### Near Drowning Emergency Protocol\n- **Laryngospasm Recognition**: Vocal cord spasm preventing air entry despite respiratory effort\n- **Pulmonary Edema Management**: Fluid accumulation in lung tissue requiring ventilation support\n- **Aspiration Concerns**: Inhaled water or foreign material requiring airway clearance\n- **Professional Management**: Optimal airway positioning, assisted ventilation support, high-flow oxygen\n\n## C - Circulation Assessment and Professional Management\n\n### Professional Pulse Assessment Techniques\n**Pulse Location Selection and Clinical Significance**:\n- **Carotid Pulse**: Central pulse location, optimal for emergency assessment and CPR\n- **Radial Pulse**: Peripheral pulse indicating systolic blood pressure >90 mmHg\n- **Femoral Pulse**: Strong central pulse useful in shock states and hypotension\n- **Brachial Pulse**: Primary pulse for infants and blood pressure measurement\n\n**Professional Pulse Quality Interpretation**:\n- **Strong and Regular**: Normal cardiovascular function and adequate circulation\n- **Weak and Thready**: Shock states, dehydration, significant blood loss\n- **Irregular Pattern**: Cardiac arrhythmias, electrolyte imbalances, cardiac pathology\n- **Absent Pulse**: Cardiac arrest, severe shock, local vascular injury or occlusion\n\n#### Professional Bleeding Control Methodology\n**Progressive Bleeding Control Protocol**:\n1. **Direct Pressure Application**: Primary method for external bleeding control\n2. **Extremity Elevation**: Raise injured extremity above heart level when possible\n3. **Arterial Pressure Points**: Strategic arterial pressure application for extremity bleeding\n4. **Tourniquet Application**: Last resort intervention for life-threatening extremity hemorrhage\n\n**Internal Bleeding Recognition Signs**:\n- **Abdominal Distension**: Potential intra-abdominal hemorrhage requiring urgent evaluation\n- **Chest Pain with Dyspnea**: Possible hemothorax or cardiac tamponade\n- **Neurological Status Changes**: Potential intracranial bleeding requiring immediate attention\n- **Shock Presentation**: Hypotension, tachycardia, altered mental status indicating blood loss\n\n## D - Disability (Neurological Assessment)\n\n### Professional Consciousness Level Evaluation\n**AVPU Scale Professional Application**:\n- **Alert**: Awake, oriented to person/place/time, following commands appropriately\n- **Voice Responsive**: Responds appropriately to verbal stimuli, may be disoriented\n- **Pain Responsive**: Responds only to painful stimulation, unconscious to verbal stimuli\n- **Unresponsive**: No response to verbal or painful stimuli, requires immediate intervention\n\n#### Glasgow Coma Scale (Advanced Professional Assessment)\n**Eye Opening Response Assessment (1-4 points)**:\n- 4 points: Spontaneous eye opening without stimulation\n- 3 points: Opens eyes to verbal command\n- 2 points: Opens eyes to painful stimulus only\n- 1 point: No eye opening response to any stimulus\n\n**Verbal Response Assessment (1-5 points)**:\n- 5 points: Oriented and converses appropriately\n- 4 points: Disoriented but converses\n- 3 points: Inappropriate words but recognizable speech\n- 2 points: Incomprehensible sounds only\n- 1 point: No verbal response\n\n#### Professional Diving-Specific Neurological Emergency Management\n**Decompression Sickness (DCS) Assessment**:\n- **Type I DCS**: Joint pain (bends), skin changes, lymphatic system swelling\n- **Type II DCS**: Neurological symptoms, pulmonary involvement, serious manifestations\n- **Professional Assessment**: Symptom onset timing correlation with dive profile\n- **Emergency Management**: High-flow oxygen, supine positioning, rapid evacuation to hyperbaric facility\n\n**Arterial Gas Embolism (AGE) Emergency Protocol**:\n- **Recognition Criteria**: Immediate neurological symptoms upon surfacing from depth\n- **Symptom Presentation**: Focal neurological deficits, altered consciousness, stroke-like symptoms\n- **Emergency Management**: Immediate high-flow oxygen, left lateral positioning, urgent transport\n- **Evacuation Priority**: Immediate hyperbaric treatment facility transport without delay\n\n## E - Exposure and Environmental Professional Assessment\n\n### Complete Patient Examination Protocol\n**Systematic Professional Exposure Protocol**:\n- **Privacy Preservation**: Maintain patient dignity during complete examination\n- **Hypothermia Prevention**: Minimize heat loss, provide warming measures immediately\n- **Complete Assessment**: Identify all injuries and medical conditions systematically\n- **Evidence Preservation**: Document all injuries, preserve potential legal evidence\n\n#### Professional Environmental Injury Management\n**Hypothermia Recognition and Professional Treatment**:\n- **Mild Hypothermia (90-95°F/32-35°C)**: Shivering, increased heart rate, confusion\n- **Moderate Hypothermia (82-90°F/28-32°C)**: Decreased shivering, muscle rigidity, altered mental status\n- **Severe Hypothermia (<82°F/<28°C)**: Cardiac arrhythmias, unconsciousness, apparent death\n- **Professional Treatment**: Gradual rewarming, gentle handling, insulation, warm environment\n\n## Professional Emergency Communication Protocols\n\n### Medical Emergency Reporting Protocol\n**Critical Information for Medical Control Communication**:\n- **Scene Description**: Exact location, environmental conditions, scene safety status\n- **Patient Information**: Age, sex, consciousness level, vital signs, medical history\n- **Mechanism of Injury**: Detailed dive profile, symptom onset timing, current condition\n- **Treatment Provided**: All interventions performed, patient response to treatment\n- **Resources Required**: Additional equipment, personnel, transportation requirements\n\n### Professional Documentation Requirements\n**Legal and Medical Documentation Protocol**:\n- **Incident Timeline**: Precise timing of all events and interventions\n- **Patient Assessment**: Complete ABCDE findings and serial reassessments\n- **Treatment Record**: All interventions with exact times and patient responses\n- **Witness Information**: Contact details for follow-up investigation\n- **Equipment Status**: Condition and operational status of all emergency equipment\n\nThis comprehensive ABCDE assessment training ensures systematic, professional emergency response capabilities essential for diving operations safety and emergency medical care effectiveness in commercial and recreational diving environments.`,\n  }).returning();\n\n  // Commercial Dive Supervisor Track\n  const [supervisorLesson1] = await db.insert(lessons).values({\n    trackId: supervisorTrack.id,\n    title: \"Risk Assessment and Hazard Management\",\n    order: 1,\n    content: `# Risk Assessment and Hazard Management\n\n## AI Tutor: Captain James Mitchell - Commercial Dive Supervisor\n*Veteran dive supervisor with expertise in dive planning, risk assessment, and emergency response coordination for commercial diving operations*\n\nComprehensive risk assessment and hazard management form the cornerstone of safe commercial diving operations. This module covers systematic risk identification, assessment methodologies, and mitigation strategies essential for professional dive supervision.\n\n## Professional Risk Assessment Framework\n\n### Systematic Hazard Identification Process\nProfessional dive supervisors must identify all potential hazards through systematic analysis:\n\n#### Environmental Hazard Categories\n**Marine Environment Hazards**:\n- **Weather Conditions**: Sea state limitations, wind parameters, visibility restrictions, lightning risk\n- **Water Quality Factors**: Temperature extremes, contamination risks, biological hazards, chemical exposure\n- **Current and Tidal Forces**: Working current limits, tidal variations, underwater flow patterns\n- **Marine Traffic**: Commercial vessel operations, shipping lanes, fishing activity, recreational traffic\n\n**Site-Specific Environmental Hazards**:\n- **Underwater Obstacles**: Submerged structures, debris fields, entanglement risks, overhead environments\n- **Bottom Conditions**: Soft sediments, rock formations, artificial reef structures, unstable materials\n- **Biological Hazards**: Venomous marine life, aggressive species, disease vectors, toxic organisms\n- **Chemical Contamination**: Industrial pollutants, fuel products, sewage contamination, toxic substances\n\n#### Operational Risk Categories for Commercial Diving\n\n**Equipment-Related Hazards**:\n- **Life Support System Failures**: Breathing gas interruption, gas contamination, supply system malfunction\n- **Communication System Failures**: Hard-wire communication loss, wireless system interference, emergency communication failure\n- **Tool and Equipment Malfunctions**: Power tool failures, cutting equipment problems, lifting device failures\n- **Personal Protective Equipment**: Diving suit integrity, helmet malfunction, buoyancy control problems\n\n**Personnel-Related Risk Factors**:\n- **Medical Fitness Issues**: Pre-existing medical conditions, fitness for duty, medication effects\n- **Experience and Training Levels**: Task complexity versus diver experience, certification currency, skill maintenance\n- **Psychological Factors**: Stress response, claustrophobia, panic potential, decision-making under pressure\n- **Fatigue and Performance**: Work duration limits, repetitive dive effects, circadian rhythm disruption\n\n### Professional Risk Matrix Development\n\n#### Risk Probability Assessment Scale\nProfessional evaluation of event likelihood:\n- **Very Low (1)**: Extremely unlikely occurrence, exceptional circumstances required\n- **Low (2)**: Unlikely but possible, rare occurrence in similar operations\n- **Medium (3)**: Possible occurrence, occasional in similar operations\n- **High (4)**: Likely occurrence, regular occurrence in similar operations\n- **Very High (5)**: Almost certain occurrence, frequent occurrence in similar operations\n\n#### Consequence Severity Professional Scale\nAssessment of potential impact magnitude:\n- **Negligible (1)**: Minor inconvenience, no significant impact on operations or personnel\n- **Minor (2)**: Small operational delays, minor equipment damage, first aid level injuries\n- **Moderate (3)**: Significant operational delays, moderate equipment damage, medical treatment injuries\n- **Major (4)**: Substantial project impact, major equipment loss, serious injuries requiring hospitalization\n- **Catastrophic (5)**: Fatalities, major environmental impact, project termination, regulatory shutdown\n\n#### Risk Score Calculation and Interpretation\n**Risk Score Formula**: Probability × Consequence = Risk Score\n\n**Risk Level Interpretation**:\n- **Low Risk (1-4)**: Acceptable with standard precautions and monitoring\n- **Medium Risk (5-9)**: Requires specific mitigation measures and enhanced monitoring\n- **High Risk (10-16)**: Requires comprehensive mitigation and continuous management\n- **Very High Risk (17-25)**: Unacceptable without major mitigation or operation modification\n\n## Hazard Control Hierarchy Implementation\n\n### Professional Hazard Control Methods\nSystematic approach to risk reduction following established hierarchy:\n\n#### Elimination (Most Effective)\n**Complete Hazard Removal**:\n- **Alternative Methods**: Different work techniques that eliminate specific hazards\n- **Work Scheduling**: Avoiding hazardous conditions through timing modifications\n- **Location Changes**: Relocating work to eliminate environmental hazards\n- **Design Modifications**: Engineering changes to eliminate hazardous exposures\n\n#### Substitution (Highly Effective)\n**Hazard Replacement with Safer Alternatives**:\n- **Equipment Substitution**: Using safer tools and equipment for same tasks\n- **Material Substitution**: Replacing hazardous materials with safer alternatives\n- **Method Substitution**: Alternative work procedures with lower risk profiles\n- **Personnel Substitution**: Using more experienced divers for higher-risk operations\n\n#### Engineering Controls (Moderately Effective)\n**Physical Modifications to Control Hazards**:\n- **Safety Equipment**: Automated safety systems, emergency shutdown devices, backup systems\n- **Barrier Systems**: Physical barriers to separate personnel from hazards\n- **Ventilation Systems**: Contamination control and gas management systems\n- **Communication Systems**: Redundant communication with emergency backup capabilities\n\n#### Administrative Controls (Less Effective)\n**Procedural and Training Controls**:\n- **Standard Operating Procedures**: Detailed work procedures with safety requirements\n- **Training Programs**: Comprehensive training for hazard recognition and response\n- **Permit Systems**: Work permit requirements for high-risk operations\n- **Inspection Programs**: Regular safety inspections and compliance monitoring\n\n#### Personal Protective Equipment (Least Effective)\n**Individual Protection as Last Resort**:\n- **Diving Equipment**: Appropriate diving suits, helmets, breathing apparatus\n- **Emergency Equipment**: Emergency breathing gas, cutting tools, signaling devices\n- **Monitoring Equipment**: Personal gas monitors, depth gauges, communication equipment\n- **First Aid Equipment**: Individual first aid supplies, emergency medications\n\n## Specific Diving Hazard Management\n\n### Decompression Illness Prevention\n**Risk Assessment Factors**:\n- **Dive Profile Analysis**: Depth, time, repetitive dive considerations, ascent rates\n- **Diver Factors**: Age, fitness, medical history, previous DCI episodes\n- **Environmental Factors**: Water temperature, workload, stress levels\n- **Equipment Factors**: Dive computer reliability, gas supply adequacy, emergency gas availability\n\n**Professional Mitigation Strategies**:\n- **Conservative Dive Planning**: Extended safety stops, slower ascent rates, reduced bottom times\n- **Physiological Monitoring**: Pre-dive fitness assessment, post-dive monitoring protocols\n- **Emergency Preparedness**: Immediate oxygen availability, evacuation procedures, hyperbaric facility access\n- **Training Requirements**: DCI recognition, emergency response, evacuation procedures\n\n### Confined Space Diving Hazards\n**Specific Risk Factors**:\n- **Entanglement Hazards**: Overhead structures, cables, debris, restricted movement areas\n- **Emergency Egress**: Limited escape routes, emergency ascent restrictions, rescue access limitations\n- **Gas Hazards**: Confined space gas accumulation, ventilation inadequacy, contamination concentration\n- **Structural Integrity**: Collapse potential, unstable structures, shifting materials\n\n**Professional Control Measures**:\n- **Entry Procedures**: Confined space permits, atmospheric testing, ventilation requirements\n- **Communication Systems**: Continuous communication, emergency signals, backup communications\n- **Emergency Response**: Rescue team standby, specialized rescue equipment, evacuation procedures\n- **Training Requirements**: Confined space entry, emergency procedures, rescue techniques\n\n### Contaminated Water Operations\n**Contamination Assessment Protocol**:\n- **Chemical Analysis**: Water testing for toxic substances, pH levels, dissolved contaminants\n- **Biological Testing**: Pathogen presence, bacterial contamination, viral contamination\n- **Physical Hazards**: Visibility reduction, debris concentration, structural hazards\n- **Exposure Pathways**: Skin contact, inhalation, ingestion, wound contamination\n\n**Professional Protection Strategies**:\n- **Equipment Selection**: Appropriate diving suits, full-face masks, sealed systems\n- **Decontamination Procedures**: Entry/exit decontamination, equipment cleaning, personnel decontamination\n- **Medical Monitoring**: Pre/post-dive medical evaluation, vaccination requirements, health surveillance\n- **Emergency Procedures**: Contamination emergency response, medical treatment protocols, evacuation procedures\n\n## Emergency Response Planning\n\n### Professional Emergency Response Framework\nComprehensive emergency planning for diving operations:\n\n#### Emergency Response Team Organization\n**Primary Response Personnel**:\n- **Dive Supervisor**: Overall emergency command and coordination\n- **Standby Diver**: Immediate in-water emergency response capability\n- **Medical Officer**: Emergency medical assessment and treatment\n- **Support Personnel**: Communication, equipment, evacuation support\n\n**Emergency Communication Protocol**:\n- **Internal Communications**: Team coordination, status reporting, resource coordination\n- **External Communications**: Emergency services, medical facilities, company management\n- **Emergency Contacts**: Coast Guard, emergency medical services, hyperbaric facilities\n- **Documentation**: Incident reporting, witness statements, equipment status\n\n#### Emergency Equipment and Resources\n**Emergency Medical Equipment**:\n- **Oxygen Therapy**: High-flow oxygen, demand regulators, oxygen monitoring\n- **First Aid Equipment**: Trauma supplies, spinal immobilization, hypothermia treatment\n- **Communication Equipment**: Emergency radios, satellite communication, emergency beacons\n- **Transportation**: Emergency evacuation vessels, helicopter landing zones, medical facility access\n\n### Post-Emergency Analysis and Improvement\n**Incident Investigation Protocol**:\n- **Immediate Investigation**: Scene preservation, witness interviews, equipment examination\n- **Root Cause Analysis**: Systematic investigation to identify underlying causes\n- **Corrective Actions**: Implementation of measures to prevent recurrence\n- **Lessons Learned**: Documentation and distribution of lessons for industry benefit\n\nThis comprehensive risk assessment and hazard management training ensures professional competency in safety management essential for commercial dive supervision, regulatory compliance, and industry best practices.`,\n  }).returning();\n\n  // Create comprehensive assessments\n  const [ndtProfessionalAssessment] = await db.insert(quizzes).values({\n    lessonId: ndtLesson1.id,\n    title: \"Professional NDT Assessment - Comprehensive Evaluation\",\n    timeLimit: 30,\n  }).returning();\n\n  await db.insert(questions).values([\n    {\n      quizId: ndtProfessionalAssessment.id,\n      prompt: \"In professional commercial underwater inspection, what is the primary advantage of systematic grid pattern inspection methodology?\",\n      a: \"Reduces total inspection time and operational costs\",\n      b: \"Ensures complete systematic coverage with quality assurance verification and no missed critical areas\",\n      c: \"Minimizes specialized lighting and equipment requirements\",\n      d: \"Reduces diver physical exertion and gas consumption rates\",\n      answer: \"b\",\n      order: 1,\n    },\n    {\n      quizId: ndtProfessionalAssessment.id,\n      prompt: \"Which corrosion type is most commonly associated with dissimilar metal connections in marine environments and requires electrochemical galvanic series analysis?\",\n      a: \"General uniform corrosion across large surface areas\",\n      b: \"Localized pitting corrosion with high depth-to-diameter ratios\",\n      c: \"Galvanic corrosion with preferential anode attack at connection points\",\n      d: \"Crevice corrosion in confined joint spaces and under deposits\",\n      answer: \"c\",\n      order: 2,\n    },\n    {\n      quizId: ndtProfessionalAssessment.id,\n      prompt: \"According to NACE industry standards, what is the minimum cathodic protection potential for steel structures in seawater?\",\n      a: \"-750 mV using Silver/Silver Chloride reference electrode\",\n      b: \"-850 mV using Silver/Silver Chloride reference electrode\", \n      c: \"-950 mV using Silver/Silver Chloride reference electrode\",\n      d: \"-650 mV using Silver/Silver Chloride reference electrode\",\n      answer: \"b\",\n      order: 3,\n    },\n  ]);\n\n  const [medicProfessionalAssessment] = await db.insert(quizzes).values({\n    lessonId: medicLesson1.id,\n    title: \"Professional Emergency Medical Response Assessment\",\n    timeLimit: 25,\n  }).returning();\n\n  await db.insert(questions).values([\n    {\n      quizId: medicProfessionalAssessment.id,\n      prompt: \"In the professional ABCDE emergency assessment protocol for diving emergencies, what is the correct systematic sequence and primary clinical focus?\",\n      a: \"Airway patency, Breathing adequacy, Circulation status, Disability assessment, Exposure examination with sequential stabilization\",\n      b: \"Alert level, Blood pressure, CPR readiness, Drug administration, Emergency transport preparation\",\n      c: \"Ascent procedures, Buoyancy control, Communication systems, Depth monitoring, Emergency evacuation\",\n      d: \"Assessment priority, Basic life support, Clinical evaluation, Diagnostic testing, Emergency procedures\",\n      answer: \"a\",\n      order: 1,\n    },\n    {\n      quizId: medicProfessionalAssessment.id,\n      prompt: \"What is the primary clinical difference between Type I and Type II decompression sickness in terms of symptoms and treatment urgency?\",\n      a: \"Type I affects only joint systems, Type II affects only pulmonary systems\",\n      b: \"Type I involves mild joint pain and skin manifestations, Type II involves serious neurological and pulmonary complications\",\n      c: \"Type I occurs only at shallow depths, Type II occurs only at deep commercial depths\",\n      d: \"Type I responds to oxygen therapy alone, Type II requires immediate surgical intervention\",\n      answer: \"b\",\n      order: 2,\n    },\n  ]);\n\n  // Write task list completion\n  await db.insert(questions).values([\n    {\n      quizId: medicProfessionalAssessment.id,\n      prompt: \"In arterial gas embolism (AGE) emergency management, what is the optimal patient positioning and immediate treatment protocol?\",\n      a: \"Upright sitting position with high-flow oxygen and rapid ascent\",\n      b: \"Left lateral recumbent position with immediate high-flow oxygen and urgent hyperbaric evacuation\",\n      c: \"Prone position with assisted ventilation and IV fluid administration\",\n      d: \"Right lateral position with standard oxygen and delayed transport\",\n      answer: \"b\",\n      order: 3,\n    },\n  ]);\n\n  console.log('✅ Professional diving education platform successfully seeded!');\n  console.log(`Created ${await db.select().from(tracks).then(r => r.length)} comprehensive professional training tracks`);\n  console.log(`Created ${await db.select().from(lessons).then(r => r.length)} detailed professional lessons with AI tutors`);\n  console.log(`Created ${await db.select().from(quizzes).then(r => r.length)} professional assessments`);\n  console.log(`Created ${await db.select().from(questions).then(r => r.length)} comprehensive assessment questions`);\n  \n  console.log('\\nProfessional Training Tracks Created:');\n  console.log('1. Inspection & Non-Destructive Testing (NDT) - AI Tutor: Dr. Sarah Chen');\n  console.log('2. Diver Medic Technician - AI Tutor: Dr. Michael Rodriguez');  \n  console.log('3. Commercial Dive Supervisor - AI Tutor: Captain James Mitchell');\n  console.log('4. Air Diver Certification - AI Tutor: Lisa Thompson');\n  console.log('5. Saturation Diver Training - AI Tutor: Commander Robert Hayes');\n  console.log('6. Assistant Life Support Technician (ALST) - AI Tutor: David Kim');\n  console.log('7. Life Support Technician (LST) - AI Tutor: Rebecca Foster');\n}\n\nfinalProfessionalSeed().catch(console.error).finally(() => process.exit(0));","size_bytes":58015},"scripts/professional-diving-seed.ts":{"content":"import { db } from '../server/db.js';\nimport { tracks, lessons, quizzes, questions } from '../shared/schema.js';\n\nasync function professionalDivingSeed() {\n  console.log('🌱 Seeding professional diving education content...');\n\n  // Clear existing data\n  await db.delete(questions);\n  await db.delete(quizzes);\n  await db.delete(lessons);\n  await db.delete(tracks);\n\n  // Create the 7 comprehensive professional diving tracks\n  const [ndtTrack] = await db.insert(tracks).values({\n    title: \"Inspection & Non-Destructive Testing (NDT)\",\n    slug: \"inspection-ndt\",\n    summary: \"Comprehensive training in underwater inspection techniques, corrosion assessment, cathodic protection surveying, thickness gauging, magnetic particle inspection, and professional documentation standards.\",\n    isPublished: true,\n  }).returning();\n\n  const [medicTrack] = await db.insert(tracks).values({\n    title: \"Diver Medic Technician\",\n    slug: \"diver-medic-technician\",\n    summary: \"Advanced medical training for diving emergencies including scene assessment, ABCDE protocols, airway management, breathing support, circulation assessment, and emergency response procedures.\",\n    isPublished: true,\n  }).returning();\n\n  const [supervisorTrack] = await db.insert(tracks).values({\n    title: \"Commercial Dive Supervisor\",\n    slug: \"commercial-dive-supervisor\",\n    summary: \"Leadership and management training covering dive planning fundamentals, risk assessment methodologies, hazard identification, communication protocols, and emergency response coordination.\",\n    isPublished: true,\n  }).returning();\n\n  const [airDiverTrack] = await db.insert(tracks).values({\n    title: \"Air Diver Certification\",\n    slug: \"air-diver-certification\", \n    summary: \"Essential air diving skills including diving physics review, gas management concepts, ascent best practices, problem-solving drills, tool handling safety, and basic communications.\",\n    isPublished: true,\n  }).returning();\n\n  const [satDiverTrack] = await db.insert(tracks).values({\n    title: \"Saturation Diver Training\",\n    slug: \"saturation-diver-training\",\n    summary: \"Specialized training for saturation diving operations, system components and operation, human factors in confined environments, high-level risk assessment, and life support systems.\",\n    isPublished: true,\n  }).returning();\n\n  const [alstTrack] = await db.insert(tracks).values({\n    title: \"Assistant Life Support Technician (ALST)\",\n    slug: \"assistant-life-support-technician\",\n    summary: \"Essential training for life support system operation, gas management principles, environmental control systems, emergency procedures, equipment maintenance, and safety protocols.\",\n    isPublished: true,\n  }).returning();\n\n  const [lstTrack] = await db.insert(tracks).values({\n    title: \"Life Support Technician (LST)\",\n    slug: \"life-support-technician\",\n    summary: \"Advanced life support systems training, system design principles, troubleshooting methodologies, emergency management, team leadership, and quality assurance protocols.\",\n    isPublished: true,\n  }).returning();\n\n  // NDT Track Lessons\n  const [ndtLesson1] = await db.insert(lessons).values({\n    trackId: ndtTrack.id,\n    title: \"Visual Inspection Fundamentals\",\n    order: 1,\n    content: `# Visual Inspection Fundamentals\n\n**AI Tutor: Dr. Sarah Chen - Expert in Non-Destructive Testing and Inspection**\n\nVisual inspection forms the foundation of underwater non-destructive testing. This comprehensive module covers industry-standard techniques and protocols used in commercial diving operations.\n\n## Learning Objectives\n- Master systematic visual inspection methodologies\n- Understand defect identification and classification\n- Learn proper underwater documentation techniques\n- Apply industry safety protocols and standards\n\n## Systematic Inspection Approach\n\n### Pre-Inspection Planning\nProfessional inspection requires thorough preparation:\n\n1. **Document Review**\n   - Study structural drawings and specifications\n   - Review previous inspection reports and findings\n   - Understand expected defect types and critical areas\n   - Identify environmental and operational constraints\n\n2. **Equipment Preparation**\n   - Underwater cameras with appropriate lighting\n   - Measuring devices (calipers, thickness gauges)\n   - Cleaning tools for surface preparation\n   - Documentation materials (slates, forms)\n\n3. **Safety Planning**\n   - Hazard identification and risk assessment\n   - Emergency response procedures\n   - Communication protocols\n   - Environmental monitoring requirements\n\n### Inspection Methodologies\n\n#### Grid Pattern Technique\nSystematic coverage using overlapping inspection grids:\n- **Grid Size**: Typically 2-4 square meters per section\n- **Overlap**: Minimum 10% between adjacent areas\n- **Documentation**: Mark completed areas on drawings\n- **Quality Control**: Independent verification of critical zones\n\n#### Zone-Based Inspection\nDividing structures into logical inspection zones:\n- **Primary Zones**: High-stress, critical structural areas\n- **Secondary Zones**: General structural components\n- **Tertiary Zones**: Non-critical but monitored areas\n- **Access Routes**: Safe pathways between zones\n\n## Defect Identification\n\n### Corrosion Types and Recognition\n\n#### General Corrosion\n- **Characteristics**: Uniform surface deterioration\n- **Appearance**: Even metal loss across large areas\n- **Measurement**: Thickness reduction patterns\n- **Documentation**: Area coverage and depth measurements\n\n#### Pitting Corrosion\n- **Characteristics**: Localized deep penetration\n- **Appearance**: Small holes with varying depths\n- **Measurement**: Individual pit dimensions\n- **Critical Factor**: Depth-to-diameter ratio\n\n#### Crevice Corrosion\n- **Characteristics**: Confined space deterioration\n- **Common Locations**: Joints, gaskets, under deposits\n- **Detection**: Often hidden, requires disassembly\n- **Prevention**: Design modification recommendations\n\n#### Galvanic Corrosion\n- **Characteristics**: Dissimilar metal contact corrosion\n- **Pattern**: Preferential attack on anodic material\n- **Location**: Electrical connection points\n- **Identification**: Reference galvanic series\n\n### Structural Defects\n\n#### Fatigue Cracking\n- **Characteristics**: Cyclical stress-induced failures\n- **Appearance**: Linear cracks, often multiple\n- **Growth Pattern**: Progressive extension over time\n- **Critical Areas**: Weld toes, stress concentrations\n\n#### Weld Defects\n- **Lack of Fusion**: Incomplete joint formation\n- **Porosity**: Gas bubble inclusions\n- **Undercut**: Groove along weld toe\n- **Distortion**: Shape changes from welding\n\n## Documentation Standards\n\n### Field Recording Requirements\nAll observations must be systematically documented:\n\n#### Location Identification\n- **Coordinate Systems**: GPS, structural grid references\n- **Elevation Data**: Depth measurements from datum\n- **Orientation**: Cardinal directions, structural references\n- **Access Routes**: Path documentation for future inspections\n\n#### Defect Characterization\n- **Type Classification**: Standard defect categories\n- **Dimensional Data**: Length, width, depth measurements\n- **Severity Assessment**: Impact on structural integrity\n- **Photographic Evidence**: Multiple angles with scales\n\n#### Environmental Conditions\n- **Visibility**: Water clarity, lighting conditions\n- **Current**: Direction, velocity measurements\n- **Temperature**: Water and air temperatures\n- **Marine Growth**: Type, thickness, coverage\n\n### Professional Reporting\n\n#### Immediate Notifications\nCritical findings requiring immediate action:\n- **Safety Hazards**: Imminent structural failure risk\n- **Environmental Threats**: Pollution potential\n- **Operational Impacts**: Service interruption risks\n- **Emergency Responses**: Required immediate actions\n\n#### Formal Reports\nComprehensive documentation including:\n- **Executive Summary**: Key findings and recommendations\n- **Detailed Findings**: Complete defect inventory\n- **Risk Assessment**: Failure probability and consequences\n- **Recommendations**: Repair priorities and methods\n\n## Quality Assurance Protocols\n\n### Inspection Validation\nEnsuring consistent, reliable results:\n- **Calibration**: Equipment accuracy verification\n- **Technique Verification**: Method effectiveness confirmation\n- **Peer Review**: Independent result validation\n- **Statistical Analysis**: Trend identification and analysis\n\n### Professional Standards\nAdherence to industry standards:\n- **AWS D3.6M**: Underwater Welding Code\n- **NACE Standards**: Corrosion assessment protocols\n- **API Standards**: Offshore structure inspection requirements\n- **Company Procedures**: Client-specific requirements\n\n## Safety Integration\n\n### Hazard Recognition\nCommon inspection safety hazards:\n- **Structural Instability**: Compromised structural integrity\n- **Sharp Edges**: Cut hazards from damaged materials\n- **Confined Spaces**: Limited escape route areas\n- **Contamination**: Hazardous material exposure\n\n### Emergency Procedures\nResponse protocols for discovered hazards:\n- **Immediate Withdrawal**: When to abort inspection\n- **Surface Notification**: Critical finding communication\n- **Area Isolation**: Hazard containment procedures\n- **Follow-up Actions**: Required safety measures\n\n## Practice Scenario: Offshore Platform Inspection\n\n**Scenario**: Visual inspection of offshore platform leg showing corrosion and marine growth at 15-meter depth with 3-meter visibility.\n\n**Task Requirements**:\n1. Remove marine growth from 2×2 meter inspection area\n2. Document corrosion patterns with photographs\n3. Measure affected areas and penetration depths\n4. Check weld integrity at structural joints\n5. Record findings using standard documentation\n\n**Expected Actions**:\n- Systematic marine growth removal using appropriate tools\n- Grid-pattern inspection with overlapping coverage\n- Photographic documentation with measurement scales\n- Detailed dimensional recording of defects\n- Safety protocol adherence throughout inspection\n\n**Assessment Criteria**:\n- Completeness of coverage (no missed areas)\n- Accuracy of measurements and documentation  \n- Quality of photographic evidence\n- Adherence to safety protocols\n- Professional reporting standards\n\nThis foundation in visual inspection provides the basis for all advanced NDT techniques and ensures consistent, professional results in commercial diving operations.`,\n  }).returning();\n\n  const [ndtLesson2] = await db.insert(lessons).values({\n    trackId: ndtTrack.id,\n    title: \"Corrosion Assessment Techniques\",\n    order: 2,\n    content: `# Corrosion Assessment Techniques\n\n**AI Tutor: Dr. Sarah Chen - Underwater Corrosion Assessment Specialist**\n\nProfessional corrosion assessment requires understanding electrochemical processes, measurement techniques, and industry standards for underwater environments.\n\n## Corrosion Fundamentals\n\n### Electrochemical Process\nUnderwater corrosion occurs through electrochemical reactions:\n\n#### Basic Corrosion Cell\n- **Anode**: Metal dissolution (oxidation)\n- **Cathode**: Electron consumption (reduction)\n- **Electrolyte**: Seawater conducting current\n- **Metallic Path**: Electron flow through structure\n\n#### Driving Forces\n- **Potential Differences**: Metal composition variations\n- **Concentration Cells**: Oxygen or salt concentration gradients\n- **Temperature Effects**: Reaction rate acceleration\n- **pH Variations**: Local acidity/alkalinity changes\n\n### Marine Environment Factors\n\n#### Seawater Characteristics\n- **High Conductivity**: Excellent electrolyte\n- **Oxygen Content**: Cathodic reaction support\n- **Chloride Concentration**: Aggressive ion presence\n- **Temperature Gradients**: Differential corrosion rates\n\n#### Biological Factors\n- **Microbiologically Influenced Corrosion (MIC)**\n- **Sulfate-Reducing Bacteria**: Hydrogen sulfide production\n- **Acid-Producing Bacteria**: Local pH reduction\n- **Biofilm Formation**: Differential aeration creation\n\n## Assessment Methodologies\n\n### Visual Assessment Techniques\n\n#### Surface Condition Evaluation\n- **Coating Condition**: Adhesion, holidays, deterioration\n- **Base Metal Exposure**: Corrosion product identification\n- **Pattern Recognition**: Uniform vs. localized attack\n- **Color Indicators**: Corrosion product analysis\n\n#### Measurement Techniques\n- **Pit Depth Gauging**: Individual defect measurement\n- **Area Assessment**: Percentage coverage calculation\n- **Thickness Monitoring**: General metal loss quantification\n- **Reference Comparisons**: Baseline condition evaluation\n\n### Instrumental Techniques\n\n#### Half-Cell Potential Measurements\n**Purpose**: Identify areas of active corrosion\n- **Reference Electrode**: Silver/Silver Chloride (Ag/AgCl)\n- **Measurement Grid**: Systematic potential mapping\n- **Interpretation**: Potential difference analysis\n- **ASTM C876**: Standard practice guidelines\n\n#### Polarization Resistance\n**Purpose**: Quantify instantaneous corrosion rates\n- **Linear Polarization**: Small potential perturbation\n- **Stern-Geary Equation**: Rate calculation method\n- **Environmental Correction**: Temperature and salinity factors\n- **Continuous Monitoring**: Long-term trend analysis\n\n## Cathodic Protection Assessment\n\n### System Evaluation\n\n#### Protection Criteria\n- **-850 mV**: Minimum protection potential (Ag/AgCl)\n- **Polarization Decay**: Native potential verification\n- **100 mV Shift**: Alternative protection criterion\n- **Current Density**: Protection current requirements\n\n#### Measurement Procedures\n- **Instant-Off Potential**: IR drop elimination\n- **Native Potential**: Natural corrosion potential\n- **Polarization Surveys**: Systematic grid measurements\n- **Current Distribution**: Anode effectiveness evaluation\n\n### Common Problems\n\n#### Inadequate Protection\n- **Insufficient Current**: Anode capacity limitations\n- **Poor Distribution**: Current shadowing effects\n- **High Resistance**: Connection or continuity problems\n- **Coating Breakdown**: Excessive current demand\n\n#### Over-Protection\n- **Hydrogen Embrittlement**: High-strength steel risk\n- **Coating Disbondment**: Alkaline condition effects\n- **Calcareous Deposits**: Excessive current density\n- **Interference**: Stray current effects\n\n## Thickness Measurement\n\n### Ultrasonic Techniques\n\n#### Equipment Requirements\n- **Frequency Selection**: Material and thickness dependent\n- **Probe Types**: Contact, delay line, immersion\n- **Calibration Standards**: Known thickness references\n- **Surface Preparation**: Proper contact requirements\n\n#### Measurement Procedures\n- **Grid Establishment**: Systematic measurement points\n- **Multiple Readings**: Statistical accuracy improvement\n- **Temperature Compensation**: Velocity correction factors\n- **Documentation**: Detailed recording requirements\n\n### Interpretation Methods\n\n#### Statistical Analysis\n- **Mean Thickness**: Average remaining material\n- **Standard Deviation**: Measurement scatter assessment\n- **Minimum Readings**: Worst-case identification\n- **Trend Analysis**: Rate of deterioration calculation\n\n#### Acceptance Criteria\n- **Design Minimum**: Structural adequacy limits\n- **Safety Factors**: Conservative operation margins\n- **Inspection Intervals**: Monitoring frequency requirements\n- **Repair Thresholds**: Action level establishment\n\n## Documentation and Reporting\n\n### Field Data Collection\n\n#### Systematic Recording\n- **Location Identification**: Precise position documentation\n- **Environmental Conditions**: Temperature, salinity, pH\n- **Measurement Data**: Organized data collection\n- **Photographic Evidence**: Before/after documentation\n\n#### Quality Control\n- **Equipment Calibration**: Daily verification procedures\n- **Duplicate Measurements**: Accuracy confirmation\n- **Independent Verification**: Peer review processes\n- **Data Validation**: Range and consistency checks\n\n### Professional Assessment\n\n#### Risk Evaluation\n- **Failure Probability**: Statistical analysis application\n- **Consequence Assessment**: Impact evaluation\n- **Risk Matrix**: Priority ranking system\n- **Mitigation Strategies**: Risk reduction options\n\n#### Recommendations\n- **Immediate Actions**: Critical defect responses\n- **Repair Priorities**: Risk-based ranking\n- **Monitoring Programs**: Ongoing assessment needs\n- **Prevention Measures**: Future protection strategies\n\n## Practice Application: Platform Leg Assessment\n\n**Scenario**: Comprehensive corrosion assessment of offshore platform leg with 15 years of service history.\n\n**Assessment Tasks**:\n1. Half-cell potential survey on 5×5 meter grid\n2. Ultrasonic thickness measurements at critical areas\n3. Cathodic protection system evaluation\n4. Coating condition assessment and documentation\n5. Risk-based prioritization of findings\n\n**Professional Standards**:\n- NACE SP0176: Corrosion Control of Steel Fixed Offshore Platforms\n- API RP 2SIM: Structural Integrity Management\n- ASTM Standards: Appropriate test methods\n- Company Specifications: Client requirements\n\nThis comprehensive approach ensures professional-grade corrosion assessment supporting structural integrity management and operational safety decisions.`,\n  }).returning();\n\n  // Create NDT Assessment\n  const [ndtQuiz] = await db.insert(quizzes).values({\n    lessonId: ndtLesson1.id,\n    title: \"Professional NDT Assessment\",\n    timeLimit: 30,\n  }).returning();\n\n  await db.insert(questions).values([\n    {\n      quizId: ndtQuiz.id,\n      prompt: \"What is the primary advantage of using a grid pattern technique in underwater visual inspection?\",\n      a: \"Reduces inspection time significantly\",\n      b: \"Ensures complete systematic coverage with no missed areas\",\n      c: \"Minimizes equipment requirements\",\n      d: \"Reduces diver fatigue\",\n      answer: \"b\",\n      order: 1,\n    },\n    {\n      quizId: ndtQuiz.id,\n      prompt: \"Which type of corrosion is most commonly found at dissimilar metal connections in marine environments?\",\n      a: \"General corrosion\",\n      b: \"Pitting corrosion\", \n      c: \"Galvanic corrosion\",\n      d: \"Crevice corrosion\",\n      answer: \"c\",\n      order: 2,\n    },\n    {\n      quizId: ndtQuiz.id,\n      prompt: \"What is the minimum cathodic protection potential for steel in seawater according to industry standards?\",\n      a: \"-750 mV (Ag/AgCl)\",\n      b: \"-850 mV (Ag/AgCl)\",\n      c: \"-950 mV (Ag/AgCl)\",\n      d: \"-650 mV (Ag/AgCl)\",\n      answer: \"b\",\n      order: 3,\n    }\n  ]);\n\n  // Diver Medic Technician Lessons\n  const [medicLesson1] = await db.insert(lessons).values({\n    trackId: medicTrack.id,\n    title: \"Emergency Response Protocols - ABCDE Assessment\",\n    order: 1,\n    content: `# Emergency Response Protocols - ABCDE Assessment\n\n**AI Tutor: Dr. Michael Rodriguez - Emergency Medicine Specialist**\n\nThe ABCDE approach provides a systematic method for assessing and managing diving emergencies, ensuring critical priorities are addressed in the correct sequence.\n\n## ABCDE Protocol Overview\n\n### Primary Assessment Sequence\nThe ABCDE approach must be followed in strict order:\n- **A**: Airway\n- **B**: Breathing  \n- **C**: Circulation\n- **D**: Disability (Neurological)\n- **E**: Exposure/Environment\n\nEach step must be completed before progressing to the next, with immediate life-saving interventions taking priority.\n\n## A - Airway Assessment and Management\n\n### Initial Assessment\n**Look, Listen, Feel** approach:\n- **Look**: Chest movement, facial color, foreign objects\n- **Listen**: Air movement sounds, vocalization ability\n- **Feel**: Air flow at nose/mouth, chest rise\n\n### Airway Obstruction Signs\n- **Complete Obstruction**: No air movement, silent chest\n- **Partial Obstruction**: Stridor, noisy breathing, reduced air flow\n- **Positioning Issues**: Head position affecting airway patency\n- **Foreign Material**: Vomit, blood, seawater, or objects\n\n### Management Techniques\n\n#### Basic Airway Maneuvers\n1. **Head Tilt-Chin Lift**: Primary positioning technique\n   - Place hand on forehead, tilt head back\n   - Lift chin with fingertips (avoid pressure on soft tissues)\n   - Maintain neutral spine alignment if spinal injury suspected\n\n2. **Jaw Thrust**: Alternative for suspected spinal injury\n   - Position at head of patient\n   - Place fingers behind angles of jaw\n   - Lift jaw forward while maintaining head position\n\n#### Airway Clearance\n- **Finger Sweep**: Remove visible foreign objects\n- **Suction**: Clear fluid or small debris\n- **Log Roll**: Turn patient to allow drainage\n- **Back Blows**: For conscious choking victims\n\n### Advanced Airway Management\n- **Oropharyngeal Airway (OPA)**: Unconscious patients only\n- **Nasopharyngeal Airway (NPA)**: Conscious or semiconscious patients\n- **Bag-Mask Ventilation**: Positive pressure ventilation\n- **Advanced Airways**: Endotracheal intubation when trained\n\n## B - Breathing Assessment and Support\n\n### Assessment Parameters\n**Rate, Rhythm, Quality, Effort**:\n- **Normal Rate**: 12-20 breaths per minute\n- **Rhythm**: Regular vs. irregular patterns\n- **Quality**: Deep vs. shallow, effective vs. ineffective\n- **Effort**: Use of accessory muscles, distress signs\n\n### Breathing Emergencies\n\n#### Respiratory Arrest\n- **Recognition**: No chest movement, no air flow\n- **Management**: Immediate rescue breathing\n- **Ventilation Rate**: 10-12 breaths per minute\n- **Volume**: Visible chest rise with each breath\n\n#### Respiratory Distress\n- **Signs**: Increased rate, labored breathing, accessory muscle use\n- **Positioning**: Sit upright if conscious and no spinal injury\n- **Oxygen**: High-flow oxygen if available\n- **Monitoring**: Continuous assessment of effectiveness\n\n### Diving-Specific Breathing Issues\n\n#### Pulmonary Barotrauma\n- **Pneumothorax**: Collapsed lung from rapid ascent\n- **Signs**: Chest pain, difficulty breathing, decreased breath sounds\n- **Management**: High-flow oxygen, rapid medical evacuation\n- **Tension Pneumothorax**: Life-threatening, requires decompression\n\n#### Near Drowning\n- **Laryngospasm**: Vocal cord closure preventing breathing\n- **Pulmonary Edema**: Fluid accumulation in lungs\n- **Management**: Airway positioning, ventilation support, oxygen\n\n## C - Circulation Assessment and Support\n\n### Assessment Techniques\n**Pulse, Pressure, Perfusion**:\n- **Pulse Rate**: Count for full minute during emergencies\n- **Pulse Quality**: Strong vs. weak, regular vs. irregular\n- **Blood Pressure**: Systolic and diastolic measurements\n- **Perfusion**: Skin color, temperature, capillary refill\n\n### Circulation Problems\n\n#### Cardiac Arrest\n- **Recognition**: No pulse, unresponsive, not breathing normally\n- **Management**: Immediate CPR, AED if available\n- **Compression Rate**: 100-120 per minute\n- **Compression Depth**: At least 2 inches, complete recoil\n\n#### Shock States\n- **Hypovolemic**: Blood/fluid loss\n- **Cardiogenic**: Heart pump failure\n- **Distributive**: Vascular dilation (anaphylaxis, sepsis)\n- **Management**: Position, oxygen, fluid replacement if trained\n\n### Bleeding Control\n**Direct Pressure → Elevation → Pressure Points → Tourniquet**:\n1. **Direct Pressure**: Primary method for bleeding control\n2. **Elevation**: Raise injury above heart level if possible\n3. **Pressure Points**: Arterial pressure application\n4. **Tourniquet**: Last resort for life-threatening extremity bleeding\n\n## D - Disability (Neurological Assessment)\n\n### Consciousness Level\n**AVPU Scale**:\n- **Alert**: Awake, oriented, following commands\n- **Voice**: Responds to verbal stimuli\n- **Pain**: Responds only to painful stimuli  \n- **Unresponsive**: No response to any stimuli\n\n### Neurological Assessment\n\n#### Glasgow Coma Scale (if trained)\n- **Eye Opening**: Spontaneous (4) to none (1)\n- **Verbal Response**: Oriented (5) to none (1)\n- **Motor Response**: Obeys commands (6) to none (1)\n- **Total Score**: 15 (normal) to 3 (deep coma)\n\n#### Diving-Specific Considerations\n- **Decompression Sickness**: Neurological symptoms\n- **Arterial Gas Embolism**: Sudden neurological deficits\n- **Nitrogen Narcosis**: Altered consciousness at depth\n- **Carbon Monoxide**: Headache, confusion, unconsciousness\n\n### Management Priorities\n- **Spinal Protection**: Maintain alignment during movement\n- **Oxygen Therapy**: High-flow oxygen for neurological symptoms\n- **Positioning**: Recovery position if unconscious and breathing\n- **Blood Glucose**: Check if diabetic history or supplies available\n\n## E - Exposure and Environment\n\n### Exposure Assessment\n**Remove Clothing for Complete Examination**:\n- **Preserve Dignity**: Use blankets, screens when possible\n- **Hypothermia Prevention**: Minimize heat loss\n- **Complete Examination**: Look for hidden injuries\n- **Privacy Concerns**: Respect patient modesty\n\n### Environmental Considerations\n\n#### Hypothermia Management\n- **Recognition**: Core temperature below 95°F (35°C)\n- **Signs**: Shivering, altered mental status, decreased coordination\n- **Management**: Remove from cold, insulate, rewarm gradually\n- **Severe Cases**: Handle gently, avoid rough movement\n\n#### Heat-Related Illness\n- **Heat Exhaustion**: Fatigue, nausea, excessive sweating\n- **Heat Stroke**: Altered mental status, hot skin, high temperature\n- **Management**: Cool environment, remove excess clothing, cooling measures\n\n## Documentation and Communication\n\n### Critical Information\n**Patient Report Format** (SOAP):\n- **Subjective**: Patient history, complaints, symptoms\n- **Objective**: Physical findings, vital signs, observations\n- **Assessment**: Working diagnosis, problem identification\n- **Plan**: Treatment provided, interventions, transport decisions\n\n### Emergency Communication\n- **Location**: Exact position, access routes\n- **Patient Condition**: ABCDE findings, vital signs\n- **Treatment Provided**: Interventions performed\n- **Resources Needed**: Equipment, personnel, transport\n\n## Practice Scenario: Diving Emergency Response\n\n**Scenario**: Diver surfaces unconscious after rapid ascent from 30 meters. Fellow divers have brought the victim to the dive platform.\n\n**Assessment Sequence**:\n1. **Scene Safety**: Ensure platform safety, additional help\n2. **ABCDE Assessment**: Systematic evaluation\n3. **Immediate Interventions**: Life-saving measures\n4. **Communication**: Emergency medical services contact\n5. **Ongoing Care**: Continuous monitoring and support\n\n**Expected Findings and Management**:\n- **Airway**: May require positioning or suctioning\n- **Breathing**: Possible pulmonary barotrauma requiring oxygen\n- **Circulation**: Monitor for shock, bleeding from lung injury\n- **Disability**: Assess for arterial gas embolism signs\n- **Exposure**: Check for other injuries, prevent hypothermia\n\nThis systematic approach ensures comprehensive emergency assessment while prioritizing life-threatening conditions in their order of urgency.`,\n  }).returning();\n\n  // Air Diver Track Lessons\n  const [airLesson1] = await db.insert(lessons).values({\n    trackId: airDiverTrack.id,\n    title: \"Gas Management and Consumption Planning\",\n    order: 1,\n    content: `# Gas Management and Consumption Planning\n\n**AI Tutor: Lisa Thompson - Professional Air Diving Instructor**\n\nProper gas management is the foundation of safe air diving operations. This module covers consumption calculation, emergency reserves, and supply monitoring for professional diving applications.\n\n## Gas Consumption Fundamentals\n\n### Physiological Factors\nIndividual consumption rates vary significantly based on:\n\n#### Physical Characteristics\n- **Body Size**: Larger individuals typically consume more gas\n- **Lung Capacity**: Vital capacity affects breathing efficiency\n- **Physical Fitness**: Better conditioning reduces consumption\n- **Age and Health**: Medical conditions affecting respiratory function\n\n#### Psychological Factors\n- **Experience Level**: Experienced divers typically consume less\n- **Stress Response**: Anxiety increases consumption dramatically\n- **Task Confidence**: Familiar tasks require less mental energy\n- **Emergency Situations**: Can triple or quadruple consumption rates\n\n### Environmental Influences\n\n#### Depth Effects\nGas consumption increases proportionally with absolute pressure:\n- **Surface (1 ATA)**: Baseline consumption rate\n- **33 feet (2 ATA)**: Double surface consumption\n- **66 feet (3 ATA)**: Triple surface consumption\n- **99 feet (4 ATA)**: Quadruple surface consumption\n\n**Formula**: Consumption Rate = Surface Rate × (Depth in feet + 33) ÷ 33\n\n#### Work Load Categories\nProfessional diving work categories and typical consumption rates:\n- **Light Work**: 1.5-2.0 CFM (inspection, light cleaning)\n- **Moderate Work**: 2.0-3.0 CFM (tool operation, moderate physical effort)\n- **Heavy Work**: 3.0-4.5 CFM (cutting, heavy lifting, strenuous tasks)\n- **Emergency Work**: 4.5-6.0+ CFM (rescue operations, high stress situations)\n\n## Professional Planning Methods\n\n### Pre-Dive Calculations\n\n#### Basic Gas Requirements\n**Total Gas = (Work Time × Consumption Rate × Depth Factor) + Reserves**\n\n**Example Calculation for 60-foot working dive**:\n- Planned work time: 45 minutes\n- Diver consumption rate: 2.5 CFM (moderate work)\n- Depth factor: 2.8 ATA (60 feet)\n- Work gas required: 45 × 2.5 × 2.8 = 315 cubic feet\n- Emergency reserve (25%): 315 × 0.25 = 79 cubic feet\n- Surface reserve: 50 cubic feet minimum\n- **Total Required**: 315 + 79 + 50 = 444 cubic feet minimum\n\n#### Reserve Requirements\nProfessional diving requires multiple reserve categories:\n\n**Emergency Reserves**:\n- **Primary Reserve**: 25% of total calculated consumption\n- **Emergency Ascent**: 50 cubic feet minimum for ascent and surface\n- **Emergency Work**: Additional gas for emergency response tasks\n- **Communication Loss**: Extended bottom time contingency\n\n**Operational Reserves**:\n- **Task Overrun**: 20% additional for extended work time\n- **Equipment Problems**: Gas for problem solving and recovery\n- **Weather Delays**: Surface interval extensions\n- **Multiple Ascents**: Repeat descents for forgotten items\n\n### Supply System Planning\n\n#### Surface Supply Systems\n**Compressor Capacity Requirements**:\n- **Primary Diver Supply**: Maximum anticipated consumption rate\n- **Standby Diver Supply**: Ready for immediate deployment\n- **System Losses**: Distribution and regulation losses\n- **Emergency Capacity**: Additional 50% minimum for emergencies\n\n**Example System Sizing**:\n- Primary diver: 4.0 CFM maximum (heavy work at depth)\n- Standby diver: 4.0 CFM capability\n- System losses: 15% (distribution, regulation)\n- Emergency factor: 50%\n- **Required Compressor**: (4.0 + 4.0) × 1.15 × 1.5 = 13.8 CFM minimum\n\n#### SCUBA Configuration\n**Tank Selection and Configuration**:\n- **Single Tank**: Limited capacity, simple configuration\n- **Double Tanks**: Doubled capacity, redundancy options\n- **Manifolded Doubles**: Shared gas, maximum capacity\n- **Independent Doubles**: Full redundancy, complex management\n\n## Real-Time Monitoring\n\n### Continuous Assessment\nProfessional divers must maintain constant awareness:\n\n#### Pressure Monitoring\n- **Initial Pressure**: Full supply verification\n- **Working Pressure**: Consumption rate tracking\n- **Reserve Pressure**: Emergency limit identification\n- **Critical Pressure**: Immediate ascent initiation\n\n#### Consumption Rate Tracking\n**Real-time calculation method**:\n1. Note starting pressure and time\n2. Calculate pressure drop over time interval\n3. Convert pressure drop to volume consumed\n4. Adjust for current depth pressure\n5. Project remaining work time available\n\n**Example Real-Time Calculation**:\n- Tank: 3000 PSI, 80 cubic feet capacity\n- After 15 minutes at 60 feet: 2400 PSI remaining\n- Pressure used: 3000 - 2400 = 600 PSI\n- Volume used: 600 ÷ 3000 × 80 = 16 cubic feet\n- Actual consumption: 16 CFM ÷ 15 minutes ÷ 2.8 ATA = 0.38 surface CFM\n- Projected rate seems low - verify calculations and monitor closely\n\n### Decision Points\n\n#### Critical Pressure Management\nEstablish clear decision pressures before diving:\n- **Turn-Around Pressure**: Begin ascent initiation (typically 50% remaining)\n- **Emergency Reserve**: No further consumption except emergencies (25% remaining)\n- **Surface Reserve**: Final safety margin (200 PSI minimum)\n- **Equipment Reserve**: Post-dive system pressure maintenance\n\n#### Emergency Procedures\nWhen gas supplies are critically low:\n1. **Immediate Ascent**: Begin controlled ascent immediately\n2. **Reduce Consumption**: Minimize physical exertion\n3. **Emergency Procedures**: Implement bailout or buddy breathing\n4. **Surface Communication**: Notify support team immediately\n5. **Alternative Supplies**: Deploy emergency gas if available\n\n## Advanced Planning Techniques\n\n### Multi-Level Diving\nFor diving operations at varying depths:\n- **Average Depth Method**: Use weighted average depth\n- **Segment Analysis**: Calculate each depth segment separately\n- **Maximum Depth Method**: Conservative approach using deepest depth\n- **Computer Integration**: Use dive computers for precise tracking\n\n### Team Gas Management\nMultiple diver operations require coordinated planning:\n- **Individual Calculations**: Each diver's specific requirements\n- **Shared Resources**: Common gas supply considerations\n- **Emergency Sharing**: Buddy breathing or emergency supply protocols\n- **Staggered Operations**: Sequential diving to conserve total gas\n\n## Safety Protocols\n\n### Pre-Dive Verification\nBefore every dive, verify:\n- **Supply Pressure**: Full tanks or adequate compressor operation\n- **Calculation Accuracy**: Double-check all mathematical calculations\n- **Emergency Procedures**: Review bailout and emergency ascent plans\n- **Communication**: Establish gas monitoring communication protocols\n\n### Emergency Response\nGas emergency response priorities:\n1. **Safety First**: Never compromise diver safety for operational goals\n2. **Conservative Decisions**: When in doubt, ascend early\n3. **Emergency Protocols**: Implement established emergency procedures\n4. **Post-Event Analysis**: Review incidents to improve future planning\n\nThis comprehensive approach to gas management ensures safe, efficient diving operations while maintaining adequate safety margins for emergency response and equipment failures.`,\n  }).returning();\n\n  // Continue with more tracks and lessons...\n  console.log('✅ Professional diving education platform seeded successfully!');\n  console.log(`Created ${await db.select().from(tracks).then(r => r.length)} professional training tracks`);\n  console.log(`Created ${await db.select().from(lessons).then(r => r.length)} comprehensive lessons`);\n  console.log(`Created ${await db.select().from(quizzes).then(r => r.length)} professional assessments`);\n  console.log(`Created ${await db.select().from(questions).then(r => r.length)} assessment questions`);\n}\n\nprofessionalDivingSeed().catch(console.error).finally(() => process.exit(0));","size_bytes":34732},"scripts/professional-seed.ts":{"content":"import { db } from '../server/db.js';\nimport { tracks, lessons, quizzes, questions } from '../shared/schema.js';\n\nasync function professionalSeed() {\n  console.log('🌱 Seeding professional diving education content...');\n\n  // Clear existing data\n  await db.delete(questions);\n  await db.delete(quizzes);\n  await db.delete(lessons);\n  await db.delete(tracks);\n\n  // Create the 7 comprehensive professional diving tracks from DIVER-WELL-TRAINING documentation\n  const [ndtTrack] = await db.insert(tracks).values({\n    title: \"Inspection & Non-Destructive Testing (NDT)\",\n    slug: \"inspection-ndt\",\n    summary: \"Comprehensive AI-powered training in underwater inspection techniques, corrosion assessment, cathodic protection surveying, thickness gauging, magnetic particle inspection, and professional documentation standards for commercial diving operations.\",\n    isPublished: true,\n  }).returning();\n\n  const [medicTrack] = await db.insert(tracks).values({\n    title: \"Diver Medic Technician\",\n    slug: \"diver-medic-technician\",\n    summary: \"Advanced medical training with AI tutor for diving emergencies including scene assessment, ABCDE protocols, airway management, breathing support, circulation assessment, disability evaluation, and emergency response procedures.\",\n    isPublished: true,\n  }).returning();\n\n  const [supervisorTrack] = await db.insert(tracks).values({\n    title: \"Commercial Dive Supervisor\",\n    slug: \"commercial-dive-supervisor\",\n    summary: \"AI-powered leadership and management training covering dive planning fundamentals, risk assessment methodologies, hazard identification, communication protocols, emergency response coordination, and quality assurance systems.\",\n    isPublished: true,\n  }).returning();\n\n  const [airDiverTrack] = await db.insert(tracks).values({\n    title: \"Air Diver Certification\",\n    slug: \"air-diver-certification\", \n    summary: \"Essential air diving skills with AI tutoring including diving physics review, gas management concepts, ascent best practices, problem-solving drills, tool handling safety, and basic communications protocols.\",\n    isPublished: true,\n  }).returning();\n\n  const [satDiverTrack] = await db.insert(tracks).values({\n    title: \"Saturation Diver Training\",\n    slug: \"saturation-diver-training\",\n    summary: \"Specialized AI-guided training for saturation diving operations, system components and operation, human factors in confined environments, high-level risk assessment themes, and advanced life support systems.\",\n    isPublished: true,\n  }).returning();\n\n  const [alstTrack] = await db.insert(tracks).values({\n    title: \"Assistant Life Support Technician (ALST)\",\n    slug: \"assistant-life-support-technician\",\n    summary: \"AI tutor-assisted training for life support system operation, gas management principles, environmental control systems, emergency procedures, equipment maintenance protocols, and safety systems.\",\n    isPublished: true,\n  }).returning();\n\n  const [lstTrack] = await db.insert(tracks).values({\n    title: \"Life Support Technician (LST)\",\n    slug: \"life-support-technician\",\n    summary: \"Advanced AI-powered life support systems training, system design principles, troubleshooting methodologies, emergency management procedures, team leadership skills, and quality assurance protocols.\",\n    isPublished: true,\n  }).returning();\n\n  // NDT Track - Comprehensive Professional Content\n  const [ndtLesson1] = await db.insert(lessons).values({\n    trackId: ndtTrack.id,\n    title: \"Visual Inspection Fundamentals\",\n    order: 1,\n    content: `# Visual Inspection Fundamentals\n## AI Tutor: Dr. Sarah Chen - NDT & Inspection Specialist\n\n*Expert in Non-Destructive Testing and Inspection with 15+ years in underwater inspection techniques, corrosion assessment, and CP surveying*\n\nVisual inspection forms the foundation of underwater non-destructive testing for commercial diving operations. This comprehensive module covers industry-standard techniques used in offshore, marine construction, and underwater maintenance operations.\n\n## Learning Objectives\n- Master systematic visual inspection methodologies for underwater structures\n- Understand defect identification and classification systems\n- Learn professional underwater documentation techniques\n- Apply industry safety protocols and quality assurance standards\n- Develop skills for real-world commercial diving scenarios\n\n## Professional Inspection Methodology\n\n### Pre-Inspection Planning\nCommercial underwater inspection requires thorough preparation and systematic approach:\n\n#### Document Review Process\n- **Structural Drawings Analysis**: Understanding design specifications and critical load paths\n- **Historical Data Review**: Previous inspection reports, maintenance records, incident history\n- **Environmental Assessment**: Current conditions, marine growth, visibility factors\n- **Access Planning**: Safe approach routes, working platforms, emergency egress\n\n#### Equipment Preparation Checklist\n- **Primary Lighting**: Minimum 10,000 lumen underwater LED systems\n- **Documentation Tools**: Underwater cameras (minimum 24MP), measurement devices\n- **Cleaning Equipment**: Wire brushes, scrapers, high-pressure water systems\n- **Safety Equipment**: Emergency ascent devices, communication systems\n\n### Systematic Coverage Methods\n\n#### Grid Pattern Inspection\nProfessional standard for comprehensive coverage:\n- **Grid Size**: 2x2 meters typical for detailed inspection\n- **Overlap Requirements**: 10% minimum between adjacent grids\n- **Documentation**: Mark completed areas on underwater slates\n- **Quality Control**: Independent verification of critical areas\n\n#### Zone-Based Assessment\nStructural priority classification system:\n- **Critical Zones**: Primary load-bearing members, connection points\n- **High Priority**: Secondary structural elements, heavily stressed areas\n- **Standard Zones**: General structural components, cladding systems\n- **Environmental**: Areas with known aggressive conditions\n\n## Defect Identification and Classification\n\n### Corrosion Types and Assessment\n\n#### General Corrosion\n- **Characteristics**: Uniform metal loss across large surface areas\n- **Measurement**: Thickness reduction using ultrasonic gauges\n- **Documentation**: Area percentage affected, average thickness loss\n- **Critical Factors**: Rate of progression, remaining material thickness\n\n#### Pitting Corrosion\n- **Recognition**: Localized deep holes with small surface area\n- **Assessment**: Individual pit measurement (depth, diameter, density)\n- **Critical Evaluation**: Depth-to-diameter ratio exceeding 1:1\n- **Risk Assessment**: Perforation potential, stress concentration effects\n\n#### Crevice Corrosion\n- **Location**: Confined spaces, joint areas, under deposits\n- **Detection Challenges**: Often hidden, requires disassembly for complete assessment\n- **Documentation**: Access photographs, dimensional surveys\n- **Prevention Notes**: Design recommendations for future maintenance\n\n#### Galvanic Corrosion\n- **Recognition**: Preferential attack at dissimilar metal connections\n- **Pattern Analysis**: Anode/cathode identification using galvanic series\n- **Measurement**: Extent of attack, remaining material integrity\n- **Recommendations**: Isolation methods, cathodic protection assessment\n\n### Structural Defects Assessment\n\n#### Fatigue Cracking\n- **Characteristics**: Linear defects, often multiple parallel cracks\n- **Growth Patterns**: Progressive extension from stress concentration points\n- **Documentation**: Length, width, penetration depth measurements\n- **Critical Assessment**: Load path interruption, propagation potential\n\n#### Weld Defects Evaluation\n- **Lack of Fusion**: Incomplete joint formation at weld interfaces\n- **Porosity Assessment**: Gas bubble size, distribution, structural impact\n- **Profile Issues**: Undercut depth, reinforcement geometry\n- **Repair Requirements**: Access considerations, welding procedure needs\n\n## Professional Documentation Standards\n\n### Real-Time Field Recording\nSystematic documentation during inspection operations:\n\n#### Location Identification Systems\n- **GPS Coordinates**: Surface reference points with accuracy requirements\n- **Structural Grid**: Platform coordinate systems, member identification\n- **Depth References**: Chart datum, mean sea level, structure datum\n- **Orientation Data**: Magnetic headings, structural references\n\n#### Defect Characterization Protocol\n- **Classification System**: Industry standard defect categories (AWS, NACE)\n- **Dimensional Recording**: Digital calipers, measurement scales, photo documentation\n- **Severity Assessment**: Structural significance, safety implications\n- **Priority Ranking**: Immediate, short-term, long-term action requirements\n\n### Professional Photography Standards\nHigh-quality underwater documentation techniques:\n\n#### Technical Requirements\n- **Resolution**: Minimum 24 megapixel for detailed defect documentation\n- **Lighting**: Multiple source illumination, shadow elimination\n- **Scale Reference**: Measurement devices in all detailed photographs\n- **Multiple Angles**: Overview, detail, and profile perspectives\n\n#### Documentation Protocol\n- **Overview Shots**: General area condition, defect location context\n- **Detail Images**: Close-up defect characteristics, measurement inclusion\n- **Sequential Coverage**: Systematic area documentation with position references\n- **Quality Control**: Real-time image review, retake procedures\n\n## Safety Integration and Risk Management\n\n### Hazard Recognition Protocol\nCommercial diving safety considerations during inspection:\n\n#### Structural Hazards\n- **Instability Assessment**: Compromised structural integrity evaluation\n- **Sharp Edge Management**: Cut protection, safe handling procedures\n- **Falling Object Risk**: Loose components, debris hazard assessment\n- **Confined Space Entry**: Limited access area safety protocols\n\n#### Environmental Safety Factors\n- **Current Conditions**: Working current limits, emergency procedures\n- **Visibility Management**: Lighting adequacy, navigation safety\n- **Marine Life**: Hazardous species awareness, avoidance procedures\n- **Contamination Risk**: Water quality, biological hazard assessment\n\n### Emergency Response Procedures\nCritical safety protocols for underwater inspection:\n\n#### Immediate Hazard Response\n- **Structural Collapse Risk**: Emergency ascent procedures, area evacuation\n- **Equipment Entanglement**: Cutting tool accessibility, buddy assistance\n- **Medical Emergency**: Rapid ascent protocols, surface support activation\n- **Lost Diver Procedures**: Search patterns, emergency communication\n\n#### Communication Requirements\n- **Regular Check-ins**: Status reports every 10 minutes minimum\n- **Critical Finding Reports**: Immediate surface notification requirements\n- **Emergency Signals**: Standardized distress communication protocols\n- **Documentation Backup**: Real-time data transmission to surface support\n\n## Practice Scenario: Offshore Platform Leg Inspection\n\n**Professional Scenario**: Complete visual inspection of offshore platform leg showing corrosion evidence and marine growth accumulation at 18-meter depth with 4-meter visibility.\n\n### Pre-Dive Briefing Requirements\n- **Structure History**: 12-year-old platform, previous inspection findings\n- **Environmental Conditions**: 2-knot current, 18°C water temperature\n- **Work Scope**: 4x4 meter inspection area, documentation requirements\n- **Safety Considerations**: Sharp edges from previous repairs, overhead hazards\n\n### Inspection Task Sequence\n1. **Initial Area Assessment**: Overall condition survey, safety hazard identification\n2. **Marine Growth Removal**: Systematic cleaning using appropriate tools\n3. **Grid Pattern Inspection**: 2x2 meter systematic coverage with overlap\n4. **Defect Documentation**: Photography with measurements, detailed recording\n5. **Structural Assessment**: Load path evaluation, repair priority determination\n\n### Professional Deliverables\n- **Field Notes**: Real-time observation recording with sketches\n- **Photographic Documentation**: Minimum 50 images with measurement scales\n- **Dimensional Survey**: Complete defect measurement inventory\n- **Assessment Report**: Structural significance evaluation and recommendations\n- **Priority Matrix**: Repair scheduling based on risk assessment\n\n### Quality Assurance Verification\n- **Independent Review**: Peer verification of critical findings\n- **Documentation Completeness**: Checklist verification against requirements\n- **Technical Accuracy**: Measurement verification, calculation checks\n- **Safety Compliance**: Protocol adherence verification, incident reporting\n\nThis comprehensive visual inspection training provides the professional foundation required for commercial diving NDT operations, ensuring consistent, reliable results that meet industry standards and regulatory requirements.`,\n  }).returning();\n\n  const [ndtLesson2] = await db.insert(lessons).values({\n    trackId: ndtTrack.id,\n    title: \"Corrosion Assessment Techniques\",\n    order: 2,\n    content: `# Corrosion Assessment Techniques\n## AI Tutor: Dr. Sarah Chen - Underwater Corrosion Assessment Expert\n\nAdvanced corrosion assessment techniques for professional underwater inspection operations, covering electrochemical processes, measurement methods, and industry standards.\n\n## Professional Corrosion Assessment Framework\n\n### Electrochemical Fundamentals\nUnderstanding the science behind underwater corrosion processes:\n\n#### Corrosion Cell Components\n- **Anode (Oxidation)**: Metal dissolution releasing electrons (Fe → Fe²⁺ + 2e⁻)\n- **Cathode (Reduction)**: Electron consumption (O₂ + 4H⁺ + 4e⁻ → 2H₂O)\n- **Electrolyte**: Seawater providing ionic conductivity\n- **Metallic Path**: Current flow through the structure\n\n#### Marine Environment Factors\n- **Chloride Concentration**: Aggressive ion attack (19,000 ppm typical seawater)\n- **Oxygen Availability**: Cathodic reaction support, depth variation effects\n- **Temperature Gradients**: Reaction rate doubling every 10°C increase\n- **pH Variations**: Local acidity effects from biological activity\n\n### Assessment Methodology Standards\n\n#### Visual Assessment Protocol\nProfessional visual corrosion evaluation techniques:\n\n**Surface Condition Categories**:\n- **Grade A**: No visible corrosion, intact protective systems\n- **Grade B**: Light surface corrosion, 5-25% area affected\n- **Grade C**: Moderate corrosion, 25-50% area affected  \n- **Grade D**: Heavy corrosion, >50% area affected with significant metal loss\n\n**Pattern Recognition**:\n- **Uniform Attack**: Even metal loss across large areas\n- **Localized Corrosion**: Concentrated attack in specific zones\n- **Preferential Corrosion**: Selective attack on specific alloy phases\n- **Microbiologically Influenced**: Bacterial colony-associated patterns\n\n#### Quantitative Assessment Techniques\n\n**Half-Cell Potential Measurements**:\n- **Reference Electrode**: Silver/Silver Chloride (Ag/AgCl) in seawater\n- **Measurement Grid**: 1-meter spacing for detailed surveys\n- **Interpretation**: More negative potentials indicate active corrosion\n- **Standards**: ASTM C876 modified for marine applications\n\n**Measurement Protocol**:\n1. **Equipment Calibration**: Daily verification using standard solutions\n2. **Grid Establishment**: Systematic measurement point layout\n3. **Contact Verification**: Proper electrical connection confirmation\n4. **Data Recording**: Potential values with location coordinates\n5. **Trend Analysis**: Comparison with previous survey data\n\n## Cathodic Protection Assessment\n\n### Protection Criteria Standards\nIndustry-accepted protection potentials:\n\n#### Primary Criteria\n- **-850 mV (Ag/AgCl)**: Minimum protection potential for steel\n- **Polarization Decay**: 100 mV shift from native potential\n- **Current Density**: 20-50 mA/m² typical protection requirements\n- **Environmental Factors**: Temperature and salinity corrections\n\n#### Assessment Procedures\n**Instant-Off Potential Measurement**:\n- **Purpose**: Eliminate IR drop effects for accurate potential measurement\n- **Technique**: Momentary current interruption, rapid potential reading\n- **Equipment**: High-speed data loggers, synchronized interruption systems\n- **Interpretation**: True steel potential without voltage drop influences\n\n**Polarization Surveys**:\n- **Native Potential**: Natural corrosion potential measurement\n- **Polarized Potential**: With cathodic protection applied\n- **Decay Characteristics**: Depolarization curve analysis\n- **Protection Confirmation**: Adequate shift verification\n\n### Common Protection System Problems\n\n#### Inadequate Protection Issues\n- **Insufficient Current**: Anode capacity limitations or depletion\n- **Poor Distribution**: Current shadowing behind large structures\n- **High Resistance**: Connection deterioration, coating breakdown\n- **Design Limitations**: Inadequate anode quantity or placement\n\n**Diagnostic Techniques**:\n- **Current Distribution Surveys**: Anode effectiveness mapping\n- **Resistance Measurements**: Connection integrity verification\n- **Anode Condition Assessment**: Consumption rate evaluation\n- **System Performance Trending**: Historical effectiveness analysis\n\n#### Over-Protection Problems\n- **Hydrogen Embrittlement Risk**: High-strength steel susceptibility\n- **Coating Disbondment**: Alkaline condition-induced failures\n- **Calcareous Deposit Formation**: Excessive current density effects\n- **Accelerated Anode Consumption**: Economic impact assessment\n\n## Thickness Measurement Techniques\n\n### Ultrasonic Testing Methods\n\n#### Equipment Configuration\n**Transducer Selection**:\n- **Frequency Range**: 2-10 MHz depending on material and thickness\n- **Element Size**: 6-13mm diameter for general purpose applications\n- **Cable Length**: Minimize for underwater operations, typically <15 meters\n- **Protective Housing**: Pressure-rated, impact-resistant construction\n\n**Calibration Requirements**:\n- **Reference Standards**: Known thickness blocks of similar material\n- **Velocity Verification**: Material-specific sound velocity confirmation\n- **Temperature Compensation**: Correction factors for actual conditions\n- **System Linearity**: Accuracy verification across measurement range\n\n#### Measurement Protocols\n**Surface Preparation Standards**:\n- **Cleanliness**: Complete marine growth and debris removal\n- **Roughness**: Smooth surface finish for probe contact\n- **Coupling**: Appropriate couplant application for sound transmission\n- **Access**: Stable platform for consistent measurements\n\n**Data Collection Procedures**:\n1. **Grid Establishment**: Systematic measurement point layout\n2. **Multiple Readings**: Minimum 5 readings per location for accuracy\n3. **Statistical Analysis**: Mean, standard deviation, minimum value recording\n4. **Trend Monitoring**: Comparison with baseline and previous surveys\n5. **Critical Area Focus**: Intensive measurement of suspected problem areas\n\n### Data Interpretation Methods\n\n#### Statistical Analysis Techniques\n**Measurement Evaluation**:\n- **Mean Thickness**: Average remaining material calculation\n- **Standard Deviation**: Measurement precision assessment\n- **Minimum Values**: Worst-case condition identification\n- **Confidence Intervals**: Statistical accuracy determination\n\n**Corrosion Rate Calculation**:\n- **Metal Loss Rate**: (Original - Current Thickness) / Service Time\n- **Remaining Life**: (Current - Minimum Thickness) / Corrosion Rate\n- **Inspection Intervals**: Based on acceptable risk levels\n- **Trend Analysis**: Acceleration or deceleration patterns\n\n#### Engineering Assessment\n**Structural Adequacy Evaluation**:\n- **Design Minimum**: Original specification requirements\n- **Code Requirements**: Current applicable standards (API, AWS, NACE)\n- **Safety Factors**: Conservative operation margins\n- **Load Considerations**: Actual vs. design loading conditions\n\n**Risk-Based Assessment**:\n- **Probability of Failure**: Statistical failure analysis\n- **Consequence Evaluation**: Environmental, safety, economic impacts\n- **Risk Matrix**: Priority ranking for maintenance actions\n- **Inspection Frequency**: Risk-based interval determination\n\n## Professional Documentation and Reporting\n\n### Field Data Management\nComprehensive data collection and organization:\n\n#### Real-Time Documentation\n- **Electronic Data Loggers**: Automated measurement recording\n- **GPS Integration**: Precise location documentation\n- **Photographic Correlation**: Visual evidence with measurement data\n- **Environmental Recording**: Conditions affecting measurements\n\n#### Quality Assurance Protocols\n- **Duplicate Measurements**: Independent verification procedures\n- **Calibration Verification**: Daily equipment accuracy checks\n- **Data Validation**: Range and consistency verification\n- **Backup Systems**: Redundant data storage and transmission\n\n### Professional Assessment Reports\nIndustry-standard reporting formats:\n\n#### Executive Summary Requirements\n- **Key Findings**: Critical conditions requiring immediate attention\n- **Overall Assessment**: Structure condition grade and trending\n- **Priority Recommendations**: Risk-based action priorities\n- **Economic Impact**: Repair costs and operational implications\n\n#### Technical Analysis Section\n- **Methodology Description**: Techniques and standards applied\n- **Data Presentation**: Tables, graphs, statistical analysis\n- **Comparison Studies**: Historical trending and benchmark analysis\n- **Uncertainty Analysis**: Measurement accuracy and confidence levels\n\n## Advanced Practice Scenario: Platform Inspection\n\n**Complex Assessment Project**: Complete corrosion assessment of 15-year-old offshore platform including visual survey, cathodic protection evaluation, and thickness monitoring.\n\n### Project Scope Definition\n- **Structure**: 8-leg jacket platform, 25-meter water depth\n- **Service History**: Continuous operation, previous maintenance records\n- **Assessment Requirements**: Regulatory compliance, insurance requirements\n- **Schedule**: 5-day weather window, multi-diver operations\n\n### Technical Execution Plan\n1. **Pre-Survey Preparation**: Document review, equipment calibration\n2. **Visual Condition Survey**: Systematic photographic documentation\n3. **Cathodic Protection Testing**: Potential surveys, current distribution\n4. **Thickness Monitoring**: Critical area measurement program\n5. **Data Analysis**: Statistical evaluation, trend analysis\n6. **Report Generation**: Professional assessment with recommendations\n\nThis comprehensive corrosion assessment training ensures professional competency in advanced underwater inspection techniques, meeting industry standards for commercial diving operations and regulatory compliance.`,\n  }).returning();\n\n  // Diver Medic Technician Track\n  const [medicLesson1] = await db.insert(lessons).values({\n    trackId: medicTrack.id,\n    title: \"Scene Assessment and Safety Protocols\",\n    order: 1,\n    content: `# Scene Assessment and Safety Protocols\n## AI Tutor: Dr. Michael Rodriguez - Emergency Medicine Specialist\n\n*Emergency medicine specialist focused on diving-related medical emergencies, hyperbaric treatment, and underwater rescue protocols*\n\nScene assessment forms the critical foundation of emergency medical response in diving operations. This comprehensive module covers systematic assessment techniques, safety protocols, and decision-making frameworks for diving emergencies.\n\n## Primary Scene Assessment Framework\n\n### Immediate Safety Evaluation\nThe first priority in any diving emergency is ensuring rescuer safety and scene control:\n\n#### Environmental Hazard Assessment\n- **Water Conditions**: Current strength, visibility, temperature, sea state\n- **Structural Hazards**: Platform stability, overhead obstacles, sharp edges\n- **Electrical Hazards**: Underwater welding equipment, power tools, lighting systems\n- **Chemical Exposure**: Contaminated water, industrial chemicals, fuel products\n- **Biological Hazards**: Marine life, infectious materials, contamination sources\n\n#### Scene Security and Access\n- **Safe Access Routes**: Primary and emergency egress paths\n- **Equipment Staging**: Medical supplies, rescue equipment positioning\n- **Communication Systems**: Emergency contact protocols, backup communications\n- **Bystander Management**: Crowd control, witness coordination, family notification\n- **Documentation Preparation**: Incident recording, legal evidence preservation\n\n### Initial Patient Contact Protocol\n\n#### Approach Safety Assessment\nBefore making patient contact, evaluate:\n- **Scene Stability**: Continued hazard potential, environmental changes\n- **Patient Location**: Accessibility, extraction requirements, safety positioning\n- **Number of Patients**: Multiple casualty scenarios, triage requirements\n- **Mechanism of Injury**: Decompression illness, near drowning, trauma, medical emergency\n\n#### Primary Survey Initiation\nSystematic patient assessment using established protocols:\n- **Consciousness Level**: AVPU scale (Alert, Voice, Pain, Unresponsive)\n- **Airway Assessment**: Patency, obstruction, positioning requirements\n- **Breathing Evaluation**: Rate, quality, effectiveness, distress signs\n- **Circulation Check**: Pulse presence, quality, bleeding assessment\n- **Immediate Threats**: Life-threatening conditions requiring instant intervention\n\n## ABCDE Assessment Protocol\n\n### A - Airway Management\nComprehensive airway evaluation and management:\n\n#### Assessment Techniques\n- **Look**: Chest movement, cyanosis, foreign material, facial trauma\n- **Listen**: Breath sounds, stridor, vocalization ability, airway noises\n- **Feel**: Air movement, chest rise, pulse presence, skin temperature\n\n#### Airway Obstruction Recognition\n**Complete Obstruction Signs**:\n- Absent breath sounds despite respiratory effort\n- Silent chest with obvious distress\n- Rapid progression to unconsciousness\n- Inability to cough or vocalize\n\n**Partial Obstruction Indicators**:\n- Stridor (high-pitched breathing sound)\n- Diminished air movement\n- Use of accessory breathing muscles\n- Anxiety and agitation from hypoxia\n\n#### Management Interventions\n**Basic Airway Techniques**:\n1. **Head Tilt-Chin Lift**: Standard positioning for unconscious patients\n2. **Jaw Thrust**: Spinal injury precaution technique\n3. **Recovery Position**: Unconscious breathing patients\n4. **Manual Obstruction Removal**: Visible foreign material extraction\n\n**Advanced Interventions** (when trained):\n- **Oropharyngeal Airway**: Unconscious patients without gag reflex\n- **Nasopharyngeal Airway**: Conscious or semiconscious patients\n- **Bag-Valve-Mask Ventilation**: Positive pressure ventilation\n- **Oxygen Therapy**: High-flow oxygen delivery systems\n\n### B - Breathing Assessment and Support\n\n#### Comprehensive Breathing Evaluation\n**Rate Assessment**: Normal adult range 12-20 breaths per minute\n- **Tachypnea**: >20 BPM (anxiety, hypoxia, shock, pain)\n- **Bradypnea**: <12 BPM (CNS depression, hypothermia, drugs)\n- **Apnea**: Absent breathing requiring immediate intervention\n\n**Quality Evaluation**: Depth, rhythm, and effectiveness\n- **Shallow Breathing**: Inadequate tidal volume, fatigue indication\n- **Deep Breathing**: Compensatory response to acidosis or hypoxia\n- **Irregular Patterns**: Neurological injury, respiratory center depression\n\n#### Diving-Specific Breathing Emergencies\n\n**Pulmonary Barotrauma Management**:\n- **Pneumothorax Recognition**: Chest pain, dyspnea, decreased breath sounds\n- **Management**: High-flow oxygen, upright positioning, urgent evacuation\n- **Tension Pneumothorax**: Life-threatening condition requiring decompression\n- **Prevention**: Proper ascent procedures, lung overexpansion awareness\n\n**Near Drowning Protocol**:\n- **Laryngospasm**: Vocal cord spasm preventing air entry\n- **Pulmonary Edema**: Fluid accumulation in lung tissue\n- **Aspiration**: Inhaled water or foreign material\n- **Management**: Airway positioning, ventilation support, oxygen therapy\n\n### C - Circulation Assessment and Management\n\n#### Pulse Assessment Techniques\n**Pulse Locations and Significance**:\n- **Carotid**: Central pulse, best for emergency assessment\n- **Radial**: Peripheral pulse, blood pressure indicator (>90 systolic)\n- **Femoral**: Strong central pulse, useful in shock states\n- **Brachial**: Infants and blood pressure measurement\n\n**Pulse Quality Interpretation**:\n- **Strong and Regular**: Normal cardiovascular function\n- **Weak and Thready**: Shock states, dehydration, blood loss\n- **Irregular**: Cardiac arrhythmias, electrolyte imbalances\n- **Absent**: Cardiac arrest, severe shock, local vascular injury\n\n#### Bleeding Control Methodology\n**Progressive Bleeding Control**:\n1. **Direct Pressure**: Primary method for external bleeding control\n2. **Elevation**: Raise injured extremity above heart level\n3. **Pressure Points**: Arterial pressure application for extremity bleeding\n4. **Tourniquet**: Last resort for life-threatening extremity hemorrhage\n\n**Internal Bleeding Recognition**:\n- **Abdominal Distension**: Intra-abdominal hemorrhage\n- **Chest Pain/Dyspnea**: Hemothorax, cardiac tamponade\n- **Neurological Changes**: Intracranial bleeding\n- **Shock Signs**: Hypotension, tachycardia, altered mental status\n\n### D - Disability (Neurological Assessment)\n\n#### Consciousness Level Evaluation\n**AVPU Scale Application**:\n- **Alert**: Awake, oriented, following commands appropriately\n- **Voice**: Responds to verbal stimuli, may be disoriented\n- **Pain**: Responds only to painful stimulation\n- **Unresponsive**: No response to verbal or painful stimuli\n\n#### Glasgow Coma Scale (Advanced Assessment)\n**Eye Opening Response (1-4)**:\n- 4: Spontaneous eye opening\n- 3: Opens to verbal command\n- 2: Opens to painful stimulus\n- 1: No eye opening response\n\n**Verbal Response (1-5)**:\n- 5: Oriented and converses\n- 4: Disoriented and converses\n- 3: Inappropriate words\n- 2: Incomprehensible sounds\n- 1: No verbal response\n\n#### Diving-Specific Neurological Emergencies\n**Decompression Sickness (DCS)**:\n- **Type I**: Joint pain, skin changes, lymphatic swelling\n- **Type II**: Neurological symptoms, pulmonary involvement\n- **Assessment**: Symptom onset timing, dive profile correlation\n- **Management**: High-flow oxygen, supine positioning, rapid evacuation\n\n**Arterial Gas Embolism (AGE)**:\n- **Recognition**: Immediate neurological symptoms upon surfacing\n- **Symptoms**: Focal neurological deficits, altered consciousness\n- **Management**: Immediate high-flow oxygen, left lateral position\n- **Evacuation**: Urgent hyperbaric treatment facility transport\n\n### E - Exposure and Environmental Assessment\n\n#### Complete Patient Examination\n**Systematic Exposure Protocol**:\n- **Privacy Preservation**: Maintain patient dignity during examination\n- **Hypothermia Prevention**: Minimize heat loss, provide warming\n- **Complete Assessment**: Identify all injuries and medical conditions\n- **Evidence Preservation**: Document injuries, preserve legal evidence\n\n#### Environmental Injury Management\n**Hypothermia Recognition and Treatment**:\n- **Mild (90-95°F)**: Shivering, increased heart rate, confusion\n- **Moderate (82-90°F)**: Decreased shivering, muscle rigidity, altered mental status\n- **Severe (<82°F)**: Cardiac arrhythmias, unconsciousness, apparent death\n- **Treatment**: Gradual rewarming, handle gently, insulation, warm environment\n\n## Emergency Communication Protocols\n\n### Medical Emergency Reporting\n**Critical Information for Medical Control**:\n- **Scene Description**: Location, environmental conditions, safety status\n- **Patient Information**: Age, sex, consciousness level, vital signs\n- **Mechanism**: Diving profile, symptoms onset, current condition\n- **Treatment Provided**: Interventions performed, response to treatment\n- **Resources Needed**: Equipment, personnel, transportation requirements\n\n### Documentation Requirements\n**Legal and Medical Documentation**:\n- **Incident Timeline**: Precise timing of events and interventions\n- **Patient Assessment**: Complete ABCDE findings and serial assessments\n- **Treatment Record**: All interventions with times and patient responses\n- **Witness Information**: Contact details for follow-up investigation\n- **Equipment Status**: Condition and operation of emergency equipment\n\n## Practice Scenario: Multi-Patient Diving Emergency\n\n**Emergency Scenario**: Two-diver rapid ascent incident with one unconscious patient and one conscious but symptomatic patient at offshore platform.\n\n### Scene Assessment Priorities\n1. **Safety Evaluation**: Platform stability, weather conditions, water safety\n2. **Resource Assessment**: Available medical equipment, personnel, communication\n3. **Triage Decision**: Priority patient identification and treatment sequence\n4. **Evacuation Planning**: Transportation options, medical facility capabilities\n\n### Emergency Response Sequence\n1. **Primary Survey**: Rapid ABCDE assessment of both patients\n2. **Life-Saving Interventions**: Immediate treatments for critical conditions\n3. **Communication**: Medical control contact, evacuation coordination\n4. **Ongoing Care**: Serial assessments, treatment adjustments\n5. **Transfer Preparation**: Patient packaging, equipment check, family notification\n\nThis comprehensive scene assessment training ensures systematic, professional emergency response capabilities essential for diving operations safety and emergency medical care effectiveness.`,\n  }).returning();\n\n  // Commercial Dive Supervisor Track\n  const [supervisorLesson1] = await db.insert(lessons).values({\n    trackId: supervisorTrack.id,\n    title: \"Dive Planning Fundamentals\",\n    order: 1,\n    content: `# Dive Planning Fundamentals\n## AI Tutor: Captain James Mitchell - Commercial Dive Supervisor\n\n*Veteran dive supervisor with expertise in dive planning, risk assessment, and emergency response coordination for commercial diving operations*\n\nComprehensive dive planning forms the cornerstone of safe, efficient commercial diving operations. This module covers systematic planning methodologies, risk assessment frameworks, and operational management techniques.\n\n## Strategic Planning Framework\n\n### Pre-Job Assessment Process\nProfessional dive planning begins with comprehensive project evaluation:\n\n#### Project Scope Analysis\n- **Work Objective Definition**: Specific tasks, quality requirements, deliverables\n- **Environmental Assessment**: Site conditions, seasonal variations, weather patterns\n- **Technical Requirements**: Equipment needs, specialized tools, support systems\n- **Timeline Analysis**: Critical path scheduling, weather windows, tidal considerations\n- **Resource Allocation**: Personnel requirements, equipment deployment, logistics\n\n#### Site-Specific Evaluation\n**Physical Site Assessment**:\n- **Bathymetric Surveys**: Depth profiles, bottom composition, obstacle identification\n- **Current Analysis**: Tidal patterns, seasonal variations, operational windows\n- **Visibility Conditions**: Seasonal patterns, industrial impacts, planning implications\n- **Access Evaluation**: Platform capabilities, crane capacity, staging areas\n- **Emergency Infrastructure**: Medical facilities, evacuation routes, communication systems\n\n### Risk Assessment Methodology\n\n#### Systematic Hazard Identification\n**Environmental Hazards**:\n- **Weather Conditions**: Sea state limits, wind parameters, visibility restrictions\n- **Water Quality**: Temperature ranges, contamination risks, biological hazards\n- **Marine Traffic**: Vessel operations, shipping lanes, fishing activity\n- **Structural Hazards**: Underwater obstacles, unstable structures, entanglement risks\n\n**Operational Risk Categories**:\n- **Equipment Failures**: Breathing gas interruption, communication loss, tool malfunctions\n- **Personnel Factors**: Experience levels, medical fitness, psychological readiness\n- **Procedural Risks**: Complex operations, confined spaces, overhead environments\n- **Emergency Scenarios**: Medical emergencies, equipment casualties, environmental changes\n\n#### Risk Matrix Development\n**Probability Assessment Scale**:\n- **Very Low (1)**: Extremely unlikely, exceptional circumstances\n- **Low (2)**: Unlikely but possible, rare occurrence\n- **Medium (3)**: Possible, occasional occurrence\n- **High (4)**: Likely, regular occurrence\n- **Very High (5)**: Almost certain, frequent occurrence\n\n**Consequence Severity Scale**:\n- **Negligible (1)**: Minor inconvenience, no impact\n- **Minor (2)**: Small delays, minor equipment damage\n- **Moderate (3)**: Significant delays, moderate injuries\n- **Major (4)**: Project impact, serious injuries\n- **Catastrophic (5)**: Fatalities, major environmental impact\n\n## Operational Planning Components\n\n### Personnel Management Strategy\n\n#### Team Composition Planning\n**Primary Diving Personnel**:\n- **Lead Diver**: Most experienced, complex task assignment\n- **Standby Diver**: Ready for immediate deployment, emergency response\n- **Dive Supervisor**: Overall operation control, safety management\n- **Dive Tender**: Surface support, equipment management, communication\n\n**Support Personnel Requirements**:\n- **Medical Officer**: Emergency medical response, fitness assessment\n- **Equipment Technician**: System maintenance, troubleshooting support\n- **Crane Operator**: Lifting operations, equipment deployment\n- **Communications Operator**: Multi-channel communication management\n\n#### Competency Assessment Framework\n**Technical Skill Verification**:\n- **Certification Currency**: Valid certifications, recency requirements\n- **Task-Specific Training**: Specialized procedures, equipment familiarity\n- **Experience Documentation**: Similar work history, complexity progression\n- **Medical Fitness**: Physical examination currency, fitness for duty\n\n**Team Integration Factors**:\n- **Communication Compatibility**: Language skills, protocol familiarity\n- **Work History**: Previous collaboration, performance records\n- **Emergency Response**: Crisis management experience, stress performance\n- **Cultural Considerations**: International operations, local regulations\n\n### Equipment Planning and Management\n\n#### Primary Life Support Systems\n**Breathing Gas Supply**:\n- **Surface Supply**: Compressor capacity, distribution systems, backup requirements\n- **Emergency Gas**: Bailout bottles, emergency gas volume calculations\n- **Gas Quality**: Analysis requirements, purity standards, contamination monitoring\n- **Distribution Infrastructure**: Umbilicals, manifolds, pressure regulation systems\n\n**Communication Systems**:\n- **Primary Communications**: Hard-wire systems, wireless backup options\n- **Emergency Communications**: Independent systems, surface-to-surface backup\n- **Recording Systems**: Communication logging, incident documentation\n- **Integration**: Multiple platform communication, shore-based coordination\n\n#### Specialized Tool Requirements\n**Task-Specific Equipment**:\n- **Cutting Tools**: Underwater torches, hydraulic cutters, diamond wire saws\n- **Welding Equipment**: Underwater welding systems, electrode specifications\n- **Lifting Equipment**: Lifting bags, mechanical advantage systems, rigging hardware\n- **Inspection Tools**: Cameras, measurement devices, non-destructive testing equipment\n\n## Operational Procedures Development\n\n### Standard Operating Procedures (SOPs)\n\n#### Dive Operation Protocols\n**Pre-Dive Procedures**:\n1. **Equipment Inspection**: System functionality verification, safety checks\n2. **Personnel Briefing**: Task assignment, safety protocols, emergency procedures\n3. **Environmental Assessment**: Current conditions, weather monitoring\n4. **Communication Checks**: All systems operational verification\n5. **Final Authorization**: Supervisor approval, safety clearance\n\n**During Operations**:\n- **Continuous Monitoring**: Diver status, environmental conditions, equipment performance\n- **Communication Protocol**: Regular check-ins, status reporting, emergency signals\n- **Progress Tracking**: Work advancement, quality verification, time management\n- **Safety Oversight**: Hazard monitoring, personnel rotation, emergency readiness\n\n#### Emergency Response Procedures\n**Medical Emergency Protocol**:\n1. **Immediate Response**: Emergency ascent procedures, medical assessment\n2. **Treatment Initiation**: First aid, oxygen therapy, evacuation preparation\n3. **Communication**: Medical control contact, evacuation coordination\n4. **Documentation**: Incident recording, witness statements, equipment status\n\n**Equipment Emergency Response**:\n- **Gas Supply Failure**: Emergency gas deployment, bailout procedures\n- **Communication Loss**: Backup system activation, emergency protocols\n- **Equipment Malfunction**: Troubleshooting procedures, replacement protocols\n- **Environmental Emergency**: Abort procedures, personnel recovery\n\n### Quality Assurance Framework\n\n#### Work Quality Standards\n**Performance Specifications**:\n- **Technical Standards**: Industry codes, client specifications, regulatory requirements\n- **Quality Control**: Inspection protocols, testing procedures, documentation requirements\n- **Acceptance Criteria**: Pass/fail standards, rework procedures, final approval\n\n**Documentation Requirements**:\n- **Work Progress**: Daily reports, photographic documentation, measurement records\n- **Quality Records**: Inspection results, test data, certification documents\n- **Safety Documentation**: Incident reports, safety meeting minutes, training records\n- **Regulatory Compliance**: Permit requirements, environmental monitoring, inspection reports\n\n## Advanced Planning Considerations\n\n### Multi-Phase Project Management\n\n#### Sequential Operation Planning\n**Phase Development Strategy**:\n- **Critical Path Analysis**: Task dependencies, scheduling optimization\n- **Resource Scheduling**: Equipment deployment, personnel rotation\n- **Weather Window Utilization**: Optimal condition periods, contingency scheduling\n- **Progress Milestones**: Achievement markers, payment schedules, client reporting\n\n#### Contingency Planning\n**Alternative Approach Development**:\n- **Method Variations**: Multiple techniques for achieving objectives\n- **Resource Alternatives**: Backup equipment, alternative suppliers\n- **Schedule Flexibility**: Weather delays, equipment failures, personnel issues\n- **Budget Contingencies**: Cost overrun provisions, scope change management\n\n### International Operations Considerations\n\n#### Regulatory Compliance Management\n**Local Regulations**: National diving standards, safety requirements, certification recognition\n**Permit Requirements**: Work permits, environmental approvals, safety clearances\n**Cultural Factors**: Local practices, language barriers, business customs\n**Logistics**: Equipment importation, personnel visas, local support services\n\n## Practice Application: Complex Project Planning\n\n**Project Scenario**: Underwater pipeline repair at 45-meter depth in challenging environmental conditions with international crew and specialized equipment requirements.\n\n### Comprehensive Planning Exercise\n1. **Risk Assessment**: Complete hazard identification and mitigation planning\n2. **Resource Planning**: Personnel, equipment, and logistics coordination\n3. **Procedure Development**: Step-by-step operational procedures\n4. **Emergency Planning**: Comprehensive emergency response procedures\n5. **Quality Assurance**: Quality control and documentation systems\n\n### Planning Deliverables\n- **Project Plan Document**: Complete operational plan with schedules and procedures\n- **Risk Management Plan**: Hazard identification and mitigation strategies\n- **Emergency Response Plan**: Comprehensive emergency procedures\n- **Quality Assurance Plan**: Inspection and documentation protocols\n- **Communication Plan**: Reporting and coordination procedures\n\nThis comprehensive dive planning training ensures systematic project management capabilities essential for successful commercial diving operations and professional supervisory responsibilities.`,\n  }).returning();\n\n  // Air Diver Track\n  const [airLesson1] = await db.insert(lessons).values({\n    trackId: airDiverTrack.id,\n    title: \"Gas Management and Consumption Planning\",\n    order: 1,\n    content: `# Gas Management and Consumption Planning\n## AI Tutor: Lisa Thompson - Professional Air Diving Instructor\n\n*Professional air diving instructor specializing in gas management, ascent procedures, and underwater tool handling safety*\n\nProper gas management forms the foundation of safe air diving operations. This comprehensive module covers consumption calculation methodologies, emergency reserve planning, and supply monitoring techniques essential for professional diving safety.\n\n## Gas Consumption Fundamentals\n\n### Physiological Consumption Factors\nUnderstanding individual variation in gas consumption rates:\n\n#### Physical Characteristics Impact\n- **Body Mass Index**: Larger individuals typically require higher gas volumes\n- **Lung Capacity**: Vital capacity directly affects breathing efficiency\n- **Physical Conditioning**: Cardiovascular fitness reduces consumption rates\n- **Age Factors**: Respiratory efficiency changes with age and health status\n- **Gender Differences**: Average consumption variations requiring individual assessment\n\n#### Psychological Influences on Consumption\n- **Experience Level**: Novice divers consume 50-100% more than experienced divers\n- **Stress Response**: Anxiety can double or triple consumption rates\n- **Task Familiarity**: Unfamiliar work increases mental load and gas use\n- **Emergency Situations**: Panic responses can increase consumption 300-400%\n- **Confidence Factor**: Self-assured divers demonstrate more efficient breathing patterns\n\n### Environmental Consumption Variables\n\n#### Depth-Related Consumption Changes\nGas consumption increases linearly with absolute pressure:\n\n**Pressure Relationships**:\n- **Surface (1 ATA)**: Baseline consumption measurement\n- **33 feet (2 ATA)**: Exactly double surface consumption\n- **66 feet (3 ATA)**: Triple surface consumption rate\n- **99 feet (4 ATA)**: Quadruple surface consumption rate\n- **132 feet (5 ATA)**: Five times surface consumption\n\n**Consumption Formula**: \nSurface Rate × (Depth in feet + 33) ÷ 33 = Depth Consumption Rate\n\n#### Work Load Categories and Planning Rates\nProfessional diving work classification with typical consumption rates:\n\n**Light Work (1.5-2.0 CFM)**:\n- Visual inspection without tools\n- Light cleaning with hand tools\n- Photography and documentation\n- Simple measurement tasks\n\n**Moderate Work (2.0-3.0 CFM)**:\n- Power tool operation\n- Moderate physical effort tasks\n- Rigging and lifting preparation\n- Installation of small components\n\n**Heavy Work (3.0-4.5 CFM)**:\n- Cutting and welding operations\n- Heavy lifting and positioning\n- Demolition activities\n- Strenuous physical labor\n\n**Emergency Operations (4.5-6.0+ CFM)**:\n- Rescue operations under stress\n- Emergency repair activities\n- Panic or high-stress situations\n- Life-threatening emergency response\n\n## Professional Gas Planning Methodology\n\n### Pre-Dive Calculation Procedures\n\n#### Complete Gas Requirement Formula\n**Total Gas Required = (Work Time × Consumption Rate × Depth Factor) + Emergency Reserves + Operational Reserves + Surface Reserves**\n\n#### Detailed Planning Example\n**Scenario**: 75-foot working dive for heavy construction work\n\n**Given Parameters**:\n- Planned bottom time: 40 minutes\n- Work classification: Heavy (4.0 CFM surface equivalent)\n- Depth factor: 3.3 ATA (75 feet + 33 ÷ 33)\n- Diver experience: Intermediate level\n- Environmental conditions: Moderate current, good visibility\n\n**Calculation Steps**:\n1. **Base Work Consumption**: 40 min × 4.0 CFM × 3.3 ATA = 528 cubic feet\n2. **Emergency Reserve (25%)**: 528 × 0.25 = 132 cubic feet\n3. **Task Overrun (20%)**: 528 × 0.20 = 106 cubic feet\n4. **Emergency Ascent**: 75 cubic feet (standard minimum)\n5. **Surface Reserve**: 50 cubic feet (equipment operation)\n6. **Total Required**: 528 + 132 + 106 + 75 + 50 = 891 cubic feet\n\n### Reserve Category Planning\n\n#### Emergency Reserves (Non-Negotiable)\n**Primary Emergency Reserve**: 25% of total calculated work consumption\n- Purpose: Equipment malfunction response\n- Usage: Emergency problem-solving time\n- Protection: Against calculation errors\n- Standard: Industry minimum requirement\n\n**Emergency Ascent Reserve**: Minimum 75 cubic feet regardless of dive depth\n- Purpose: Controlled emergency ascent to surface\n- Calculation: Ascent time × emergency consumption rate × average depth factor\n- Includes: Surface swimming time and equipment inflation\n- Safety Factor: Weather deterioration contingency\n\n#### Operational Reserves\n**Task Overrun Reserve**: 20% of work consumption\n- Purpose: Extended work time for task completion\n- Causes: Unexpected complications, additional work requirements\n- Planning: Client expectation management, schedule flexibility\n- Documentation: Actual time vs. planned time tracking\n\n**Equipment Problem Reserve**: 10% of total gas supply\n- Purpose: On-bottom equipment troubleshooting\n- Scenarios: Tool malfunctions, equipment adjustments\n- Time Allocation: Problem-solving without compromising safety\n- Alternative: Additional dive for equipment issues\n\n### Real-Time Gas Management\n\n#### Continuous Monitoring Protocols\nProfessional divers maintain constant gas awareness:\n\n**Pressure Check Intervals**:\n- **Initial**: Full verification before descent\n- **Every 5 Minutes**: Regular consumption monitoring during work\n- **Before Tasks**: Prior to high-consumption activities\n- **Critical Pressures**: At predetermined decision points\n\n#### Consumption Rate Verification\n**Real-Time Calculation Method**:\n1. **Baseline Establishment**: Record initial pressure and time\n2. **Interval Measurement**: Note pressure drop over specific time period\n3. **Volume Conversion**: Convert pressure loss to actual gas volume used\n4. **Rate Calculation**: Adjust for current depth to determine actual consumption\n5. **Projection**: Estimate remaining bottom time based on current rate\n\n**Example Real-Time Assessment**:\n- **Equipment**: 80 cubic foot tank at 3000 PSI initial\n- **After 20 minutes at 66 feet**: 2200 PSI remaining\n- **Pressure Used**: 800 PSI (3000 - 2200)\n- **Volume Consumed**: 800 ÷ 3000 × 80 = 21.3 cubic feet\n- **Time Factor**: 20 minutes\n- **Depth Factor**: 3.0 ATA (66 feet)\n- **Actual Surface Rate**: 21.3 ÷ 20 ÷ 3.0 = 0.36 CFM surface equivalent\n- **Assessment**: Lower than planned (4.0 CFM) - verify work intensity or task changes\n\n### Critical Decision Point Management\n\n#### Predetermined Pressure Points\nEstablish clear decision pressures before every dive:\n\n**Turn-Around Pressure (50% Remaining)**:\n- Purpose: Initiate return to surface or ascent preparation\n- Calculation: Must allow for ascent plus all reserves\n- No Exceptions: Begin ascent regardless of work status\n- Communication: Notify surface support immediately\n\n**Emergency Reserve Pressure (25% Remaining)**:\n- Purpose: Emergency use only - no routine consumption\n- Usage: Equipment emergencies, emergency ascent, rescue operations\n- Violation: Serious safety protocol breach requiring investigation\n- Recovery: Immediate ascent using emergency procedures\n\n**Surface Reserve Pressure (200 PSI Minimum)**:\n- Purpose: Equipment operation after surfacing\n- Requirements: Regulator function, BCD operation, safety margin\n- Weather Factor: Rough surface conditions may require additional reserve\n- Equipment Checkout: Post-dive system verification\n\n## Advanced Gas Management Techniques\n\n### Surface Supply System Management\n\n#### Compressor System Planning\n**Capacity Requirements**:\n- **Primary Diver Supply**: Maximum anticipated consumption\n- **Standby Diver**: Concurrent supply capability\n- **System Losses**: 10-15% for distribution and regulation\n- **Emergency Factor**: 50% additional capacity minimum\n\n**Example System Sizing**:\n- Primary diver maximum: 5.0 CFM (heavy work at depth)\n- Standby diver requirement: 5.0 CFM capability\n- Distribution losses: 15%\n- Emergency factor: 50%\n- **Total Compressor Requirement**: (5.0 + 5.0) × 1.15 × 1.5 = 17.25 CFM minimum\n\n#### Distribution System Management\n**Manifold Configuration**:\n- **Primary Distribution**: Main supply line to primary diver\n- **Emergency Distribution**: Independent supply to all stations\n- **Cross-Connection**: Emergency supply sharing capability\n- **Monitoring**: Pressure and flow monitoring at all points\n\n### Emergency Gas Management Procedures\n\n#### Gas Emergency Response Protocol\n**Recognition**: Early identification of gas supply problems\n- **Consumption Monitoring**: Unexpectedly high consumption rates\n- **Pressure Warnings**: Rapid pressure loss indicators\n- **Equipment Symptoms**: Regulator breathing resistance, flow irregularities\n- **Communication**: Clear emergency communication procedures\n\n**Response Priorities**:\n1. **Safety Assessment**: Evaluate immediate danger level\n2. **Conservation**: Reduce consumption through work cessation\n3. **Alternative Supply**: Deploy emergency gas or bailout systems\n4. **Ascent Decision**: Initiate emergency ascent if required\n5. **Surface Support**: Alert surface team for emergency response\n\n## Practice Application: Gas Management Scenario\n\n**Professional Scenario**: Complex underwater welding operation at 90-foot depth with multiple divers and extended work requirements.\n\n### Planning Requirements\n- **Primary Welder**: Heavy work consumption for 60 minutes\n- **Standby Diver**: Ready for immediate emergency response\n- **Inspection Diver**: Light work for quality verification\n- **Environmental**: Moderate current, good visibility, stable weather\n\n### Gas Management Plan Development\n1. **Individual Calculations**: Each diver's specific gas requirements\n2. **System Capacity**: Surface supply system sizing and backup\n3. **Emergency Procedures**: Gas failure response protocols\n4. **Communication**: Gas status reporting and emergency signals\n5. **Quality Assurance**: Real-time monitoring and decision protocols\n\nThis comprehensive gas management training ensures professional competency in gas planning and monitoring, providing the safety foundation essential for all commercial diving operations.`,\n  }).returning();\n\n  // Create professional assessments with multiple question types\n  const [ndtAssessment] = await db.insert(quizzes).values({\n    lessonId: ndtLesson1.id,\n    title: \"Professional NDT Assessment - Visual Inspection\",\n    timeLimit: 30,\n  }).returning();\n\n  await db.insert(questions).values([\n    {\n      quizId: ndtAssessment.id,\n      prompt: \"In professional underwater visual inspection, what is the primary advantage of using a systematic grid pattern technique?\",\n      a: \"Reduces overall inspection time\",\n      b: \"Ensures complete coverage with no missed areas and provides quality control verification\",\n      c: \"Minimizes required lighting equipment\",\n      d: \"Reduces diver fatigue and air consumption\",\n      answer: \"b\",\n      order: 1,\n    },\n    {\n      quizId: ndtAssessment.id,\n      prompt: \"Which type of corrosion is most commonly associated with dissimilar metal connections in marine environments and requires galvanic series analysis?\",\n      a: \"General uniform corrosion\",\n      b: \"Localized pitting corrosion\",\n      c: \"Galvanic corrosion with preferential anode attack\",\n      d: \"Crevice corrosion in confined spaces\",\n      answer: \"c\",\n      order: 2,\n    },\n    {\n      quizId: ndtAssessment.id,\n      prompt: \"What is the industry standard minimum cathodic protection potential for steel structures in seawater according to NACE standards?\",\n      a: \"-750 mV (Ag/AgCl reference electrode)\",\n      b: \"-850 mV (Ag/AgCl reference electrode)\",\n      c: \"-950 mV (Ag/AgCl reference electrode)\", \n      d: \"-650 mV (Ag/AgCl reference electrode)\",\n      answer: \"b\",\n      order: 3,\n    },\n  ]);\n\n  const [medicAssessment] = await db.insert(quizzes).values({\n    lessonId: medicLesson1.id,\n    title: \"Professional Emergency Medical Assessment\",\n    timeLimit: 25,\n  }).returning();\n\n  await db.insert(questions).values([\n    {\n      quizId: medicAssessment.id,\n      prompt: \"In the ABCDE assessment protocol for diving emergencies, what is the correct sequence and primary focus of each step?\",\n      a: \"Airway, Breathing, Circulation, Disability, Exposure - with systematic progression through each step\",\n      b: \"Assessment, Basic life support, CPR, Defibrillation, Emergency transport\",\n      c: \"Alert, Blood pressure, Consciousness, Drugs, Environment evaluation\",\n      d: \"Ascent, Buoyancy, Communication, Descent, Emergency procedures\",\n      answer: \"a\",\n      order: 1,\n    },\n    {\n      quizId: medicAssessment.id,\n      prompt: \"What is the primary difference between Type I and Type II decompression sickness in terms of symptoms and severity?\",\n      a: \"Type I affects only joints, Type II affects only the lungs\",\n      b: \"Type I involves mild joint pain and skin changes, Type II involves neurological symptoms and pulmonary involvement\",\n      c: \"Type I occurs at shallow depths, Type II occurs at deep depths\",\n      d: \"Type I is treatable with oxygen, Type II requires immediate surgery\",\n      answer: \"b\",\n      order: 2,\n    },\n  ]);\n\n  const [airDiverAssessment] = await db.insert(quizzes).values({\n    lessonId: airLesson1.id,\n    title: \"Professional Gas Management Assessment\",\n    timeLimit: 20,\n  }).returning();\n\n  await db.insert(questions).values([\n    {\n      quizId: airDiverAssessment.id,\n      prompt: \"For a 60-foot working dive with moderate work consumption (3.0 CFM surface rate) for 30 minutes, what is the minimum total gas requirement including all professional reserves?\",\n      a: \"180 cubic feet (work gas only)\",\n      b: \"270 cubic feet (work gas plus 25% emergency reserve)\",\n      c: \"405 cubic feet (work gas, emergency reserve, task overrun, ascent, and surface reserves)\",\n      d: \"225 cubic feet (work gas plus emergency ascent reserve)\",\n      answer: \"c\",\n      order: 1,\n    },\n    {\n      quizId: airDiverAssessment.id,\n      prompt: \"At what remaining tank pressure should a professional air diver begin ascent procedures (turn-around pressure)?\",\n      a: \"25% of total tank capacity (emergency reserve pressure)\",\n      b: \"50% of total tank capacity to allow for ascent plus all reserves\", \n      c: \"200 PSI minimum surface reserve pressure\",\n      d: \"When work is completed regardless of remaining pressure\",\n      answer: \"b\",\n      order: 2,\n    },\n  ]);\n\n  console.log('✅ Professional diving education platform seeded successfully!');\n  console.log(`Created ${await db.select().from(tracks).then(r => r.length)} comprehensive professional training tracks`);\n  console.log(`Created ${await db.select().from(lessons).then(r => r.length)} detailed professional lessons`);\n  console.log(`Created ${await db.select().from(quizzes).then(r => r.length)} professional assessments`);\n  console.log(`Created ${await db.select().from(questions).then(r => r.length)} professional assessment questions`);\n}\n\nprofessionalSeed().catch(console.error).finally(() => process.exit(0));","size_bytes":59000},"scripts/seed.ts":{"content":"import { db } from '../server/db.js';\nimport { tracks, lessons, quizzes, questions } from '../shared/schema.js';\n\nasync function seed() {\n  console.log('🌱 Seeding database...');\n\n  // Clear existing data\n  await db.delete(questions);\n  await db.delete(quizzes);\n  await db.delete(lessons);\n  await db.delete(tracks);\n\n  // Create diving education tracks\n  const [physiologyTrack] = await db.insert(tracks).values({\n    title: \"Diving Physiology Basics\",\n    slug: \"diving-physiology-basics\",\n    summary: \"Understanding how the human body responds to underwater environments and pressure changes.\",\n    isPublished: true,\n  }).returning();\n\n  const [decompressionTrack] = await db.insert(tracks).values({\n    title: \"Decompression Theory\",\n    slug: \"decompression-theory\", \n    summary: \"Advanced concepts in decompression modeling, nitrogen narcosis, and safe ascent procedures.\",\n    isPublished: true,\n  }).returning();\n\n  const [emergencyTrack] = await db.insert(tracks).values({\n    title: \"Emergency Procedures\",\n    slug: \"emergency-procedures\",\n    summary: \"Critical emergency response protocols for diving accidents and equipment failures.\",\n    isPublished: true,\n  }).returning();\n\n  // Create lessons for Diving Physiology Basics\n  const [physiologyLesson1] = await db.insert(lessons).values({\n    trackId: physiologyTrack.id,\n    title: \"Pressure and the Human Body\",\n    order: 1,\n    content: `# Pressure and the Human Body\n\nAs divers descend underwater, they experience increasing ambient pressure. Understanding how this affects the human body is fundamental to safe diving practices.\n\n## Key Concepts\n\n### Pressure Increases with Depth\n- At sea level: 1 atmosphere (14.7 PSI)\n- At 33 feet: 2 atmospheres \n- At 66 feet: 3 atmospheres\n- At 99 feet: 4 atmospheres\n\n### Effects on Gas-Filled Spaces\nThe human body contains several gas-filled spaces that are affected by pressure changes:\n\n1. **Lungs** - The primary concern during breath-hold diving\n2. **Middle ear** - Must be equalized during descent\n3. **Sinuses** - Can cause pain if blocked\n4. **Intestinal gas** - Can expand during ascent\n\n### Physiological Responses\n- Increased heart rate initially\n- Peripheral vasoconstriction \n- Mammalian dive reflex activation\n- Nitrogen absorption into body tissues\n\nUnderstanding these fundamental principles is essential before progressing to more advanced topics in diving physiology.`,\n  }).returning();\n\n  const [physiologyLesson2] = await db.insert(lessons).values({\n    trackId: physiologyTrack.id,\n    title: \"Gas Laws in Diving\",\n    order: 2,\n    content: `# Gas Laws in Diving\n\nSeveral fundamental gas laws govern how gases behave underwater and directly impact diving safety.\n\n## Boyle's Law\n**P₁V₁ = P₂V₂** (at constant temperature)\n\nAs pressure increases with depth, gas volume decreases proportionally.\n\n### Practical Applications:\n- **Lung compression** during breath-hold diving\n- **BCD and wetsuit compression** \n- **Air consumption** increases with depth\n- **Barotrauma prevention** requires understanding pressure changes\n\n## Henry's Law\nThe amount of gas dissolved in a liquid is proportional to the partial pressure of that gas.\n\n### Diving Implications:\n- **Nitrogen absorption** into body tissues\n- **Decompression sickness** risk\n- **Gas narcosis** effects at depth\n- **Saturation diving** principles\n\n## Dalton's Law\nTotal pressure of a gas mixture equals the sum of partial pressures of individual gases.\n\n### Key Applications:\n- **Oxygen toxicity** calculations\n- **Nitrox** dive planning\n- **Trimix** gas blending\n- **Carbon dioxide** buildup risks\n\n## Charles's Law\nGas volume is proportional to absolute temperature (at constant pressure).\n\n### Diving Considerations:\n- **Thermal effects** on gas spaces\n- **Regulator** performance in cold water\n- **Tank pressure** changes with temperature\n\nMastering these gas laws provides the foundation for understanding advanced diving procedures and safety protocols.`,\n  }).returning();\n\n  // Create lessons for Decompression Theory\n  const [decompressionLesson1] = await db.insert(lessons).values({\n    trackId: decompressionTrack.id,\n    title: \"Nitrogen Absorption and Elimination\",\n    order: 1,\n    content: `# Nitrogen Absorption and Elimination\n\nUnderstanding how nitrogen behaves in the human body during diving is crucial for safe decompression practices.\n\n## Nitrogen Absorption Process\n\n### On-Gassing Phase (Descent/Bottom Time)\nWhen diving, the increased ambient pressure causes nitrogen to dissolve into body tissues following Henry's Law.\n\n**Factors Affecting Absorption:**\n- **Depth** - Greater pressure = faster absorption\n- **Time** - Longer exposure = more nitrogen absorbed\n- **Tissue type** - Different tissues absorb at different rates\n- **Blood flow** - Better circulation = faster absorption\n\n### Tissue Half-Times\nDifferent body tissues have varying rates of nitrogen absorption and elimination:\n\n- **Fast tissues** (1-5 minutes): Blood, brain, lungs\n- **Medium tissues** (20-40 minutes): Muscle, organs  \n- **Slow tissues** (60-240+ minutes): Joints, cartilage, bone\n\n## Nitrogen Elimination Process\n\n### Off-Gassing Phase (Ascent/Surface)\nAs ambient pressure decreases, dissolved nitrogen must be eliminated to prevent bubble formation.\n\n**Elimination Methods:**\n1. **Controlled ascent** - Gradual pressure reduction\n2. **Safety stops** - Allow time for off-gassing\n3. **Decompression stops** - Mandatory for deeper/longer dives\n4. **Surface intervals** - Complete elimination between dives\n\n### Bubble Formation Risk\nWhen nitrogen elimination cannot keep pace with pressure reduction:\n- Supersaturation occurs\n- Nitrogen bubbles form in tissues\n- Decompression sickness (DCS) may result\n\n## Practical Applications\n- **Dive computer algorithms** model tissue nitrogen levels\n- **Repetitive dive** planning considers residual nitrogen\n- **Flying after diving** requires complete nitrogen elimination\n- **Emergency ascents** create high DCS risk\n\nUnderstanding nitrogen kinetics allows divers to plan safe ascent profiles and avoid decompression illness.`,\n  }).returning();\n\n  // Create quiz for physiology lesson 1\n  const [physiologyQuiz1] = await db.insert(quizzes).values({\n    lessonId: physiologyLesson1.id,\n    title: \"Pressure Effects Quiz\",\n    timeLimit: 10,\n  }).returning();\n\n  // Create questions for the quiz\n  await db.insert(questions).values([\n    {\n      quizId: physiologyQuiz1.id,\n      prompt: \"At what depth does a diver experience 3 atmospheres of pressure?\",\n      a: \"33 feet\",\n      b: \"66 feet\", \n      c: \"99 feet\",\n      d: \"132 feet\",\n      answer: \"b\",\n      order: 1,\n    },\n    {\n      quizId: physiologyQuiz1.id,\n      prompt: \"Which gas-filled space in the human body is the primary concern during breath-hold diving?\",\n      a: \"Middle ear\",\n      b: \"Sinuses\",\n      c: \"Lungs\",\n      d: \"Intestinal gas\",\n      answer: \"c\", \n      order: 2,\n    },\n    {\n      quizId: physiologyQuiz1.id,\n      prompt: \"What is the mammalian dive reflex?\",\n      a: \"Increased heart rate underwater\",\n      b: \"A physiological response that helps conserve oxygen\",\n      c: \"The urge to surface quickly\",\n      d: \"Nitrogen absorption into tissues\",\n      answer: \"b\",\n      order: 3,\n    },\n  ]);\n\n  // Create quiz for gas laws lesson\n  const [physiologyQuiz2] = await db.insert(quizzes).values({\n    lessonId: physiologyLesson2.id,\n    title: \"Gas Laws Quiz\",\n    timeLimit: 15,\n  }).returning();\n\n  await db.insert(questions).values([\n    {\n      quizId: physiologyQuiz2.id,\n      prompt: \"According to Boyle's Law, what happens to gas volume as pressure increases?\",\n      a: \"Volume increases proportionally\",\n      b: \"Volume decreases proportionally\", \n      c: \"Volume remains constant\",\n      d: \"Volume doubles\",\n      answer: \"b\",\n      order: 1,\n    },\n    {\n      quizId: physiologyQuiz2.id,\n      prompt: \"Henry's Law explains which diving phenomenon?\",\n      a: \"Gas compression in the lungs\",\n      b: \"Nitrogen absorption into body tissues\",\n      c: \"Oxygen toxicity at depth\", \n      d: \"Thermal effects on gas spaces\",\n      answer: \"b\",\n      order: 2,\n    },\n    {\n      quizId: physiologyQuiz2.id,\n      prompt: \"Dalton's Law is most relevant for calculating:\",\n      a: \"Lung volume changes\",\n      b: \"Decompression stops\",\n      c: \"Partial pressure of gases in breathing mixtures\",\n      d: \"Temperature effects on tank pressure\",\n      answer: \"c\",\n      order: 3,\n    },\n  ]);\n\n  // Create quiz for decompression lesson\n  const [decompressionQuiz1] = await db.insert(quizzes).values({\n    lessonId: decompressionLesson1.id,\n    title: \"Nitrogen Kinetics Quiz\", \n    timeLimit: 12,\n  }).returning();\n\n  await db.insert(questions).values([\n    {\n      quizId: decompressionQuiz1.id,\n      prompt: \"Which tissues have the fastest nitrogen absorption rates?\",\n      a: \"Joints and cartilage\",\n      b: \"Muscle and organs\",\n      c: \"Blood, brain, and lungs\",\n      d: \"Bone and connective tissue\", \n      answer: \"c\",\n      order: 1,\n    },\n    {\n      quizId: decompressionQuiz1.id,\n      prompt: \"What causes decompression sickness?\",\n      a: \"Too much oxygen in the blood\",\n      b: \"Nitrogen bubble formation in tissues\",\n      c: \"Rapid temperature changes\",\n      d: \"Equipment malfunction\",\n      answer: \"b\",\n      order: 2,\n    },\n    {\n      quizId: decompressionQuiz1.id,\n      prompt: \"During the off-gassing phase, nitrogen elimination occurs primarily through:\",\n      a: \"Sweating\",\n      b: \"Urination\", \n      c: \"Breathing\",\n      d: \"Skin absorption\",\n      answer: \"c\",\n      order: 3,\n    },\n  ]);\n\n  console.log('✅ Database seeded successfully!');\n  console.log(`Created ${await db.select().from(tracks).then(r => r.length)} tracks`);\n  console.log(`Created ${await db.select().from(lessons).then(r => r.length)} lessons`);\n  console.log(`Created ${await db.select().from(quizzes).then(r => r.length)} quizzes`);\n  console.log(`Created ${await db.select().from(questions).then(r => r.length)} questions`);\n}\n\nseed().catch(console.error).finally(() => process.exit(0));","size_bytes":10061},"scripts/working-seed.ts":{"content":"import { db } from '../server/db.js';\nimport { tracks, lessons, quizzes, questions } from '../shared/schema.js';\n\nasync function workingSeed() {\n  console.log('🌱 Seeding comprehensive professional diving education content...');\n\n  // Clear existing data\n  await db.delete(questions);\n  await db.delete(quizzes);\n  await db.delete(lessons);\n  await db.delete(tracks);\n\n  // Create the 7 comprehensive professional diving tracks (using only existing columns)\n  const [ndtTrack] = await db.insert(tracks).values({\n    title: \"Inspection & Non-Destructive Testing (NDT)\",\n    slug: \"inspection-ndt\",\n    summary: \"AI-powered comprehensive training in underwater inspection techniques, corrosion assessment, cathodic protection surveying, thickness gauging, magnetic particle inspection, and professional documentation standards for commercial diving operations. Features expert AI tutor Dr. Sarah Chen specializing in NDT and inspection techniques.\",\n    isPublished: true,\n  }).returning();\n\n  const [medicTrack] = await db.insert(tracks).values({\n    title: \"Diver Medic Technician\", \n    slug: \"diver-medic-technician\",\n    summary: \"Advanced medical training with AI tutor Dr. Michael Rodriguez specializing in diving emergencies. Covers scene assessment, ABCDE protocols, airway management, breathing support, circulation assessment, disability evaluation, and emergency response procedures for diving operations.\",\n    isPublished: true,\n  }).returning();\n\n  const [supervisorTrack] = await db.insert(tracks).values({\n    title: \"Commercial Dive Supervisor\",\n    slug: \"commercial-dive-supervisor\", \n    summary: \"AI-guided leadership training with Captain James Mitchell covering dive planning fundamentals, risk assessment methodologies, hazard identification protocols, communication systems, emergency response procedures, and quality assurance for commercial diving operations.\",\n    isPublished: true,\n  }).returning();\n\n  const [airDiverTrack] = await db.insert(tracks).values({\n    title: \"Air Diver Certification\",\n    slug: \"air-diver-certification\",\n    summary: \"Essential air diving skills with AI tutor Lisa Thompson including diving physics review, gas management concepts, ascent best practices, problem-solving drills, tool handling safety, and basic communications for professional diving operations.\",\n    isPublished: true,\n  }).returning();\n\n  const [satDiverTrack] = await db.insert(tracks).values({\n    title: \"Saturation Diver Training\",\n    slug: \"saturation-diver-training\",\n    summary: \"Specialized AI-assisted training with Commander Robert Hayes for saturation diving operations, system components and operation, human factors in confined environments, risk assessment themes, and life support systems for deep-sea commercial operations.\",\n    isPublished: true,\n  }).returning();\n\n  const [alstTrack] = await db.insert(tracks).values({\n    title: \"Assistant Life Support Technician (ALST)\",\n    slug: \"assistant-life-support-technician\", \n    summary: \"AI tutor David Kim guides life support system operation training, gas management principles, environmental control systems, emergency procedures, equipment maintenance protocols, and safety systems essential for diving support operations.\",\n    isPublished: true,\n  }).returning();\n\n  const [lstTrack] = await db.insert(tracks).values({\n    title: \"Life Support Technician (LST)\",\n    slug: \"life-support-technician\",\n    summary: \"Advanced AI-powered training with Rebecca Foster covering life support systems, system design principles, troubleshooting methodologies, emergency management procedures, team leadership skills, and quality assurance protocols for senior technical positions.\",\n    isPublished: true,\n  }).returning();\n\n  // NDT Track - Professional Content\n  const [ndtLesson1] = await db.insert(lessons).values({\n    trackId: ndtTrack.id,\n    title: \"Visual Inspection Fundamentals\",\n    order: 1,\n    content: `# Visual Inspection Fundamentals\n\n## AI Tutor: Dr. Sarah Chen - NDT & Inspection Specialist\n*Expert in Non-Destructive Testing and Inspection with 15+ years in underwater inspection techniques, corrosion assessment, and CP surveying.*\n\nWelcome to professional underwater visual inspection training! I'm Dr. Sarah Chen, and I'll be your AI tutor specializing in Non-Destructive Testing and underwater inspection techniques. Let's master the systematic methodologies used in commercial diving operations.\n\n## Learning Objectives\n- Master systematic visual inspection methodologies for commercial operations\n- Understand professional defect identification and classification systems  \n- Learn industry-standard underwater documentation techniques\n- Apply professional safety protocols and quality assurance requirements\n- Develop skills for real-world commercial diving inspection scenarios\n\n## Professional Inspection Methodology\n\n### Pre-Inspection Planning\nProfessional underwater inspection requires systematic preparation:\n\n#### Document Review Process\n- **Structural Drawings Analysis**: Understanding design specifications and critical load paths\n- **Historical Data Review**: Previous inspection reports, maintenance records, incident documentation\n- **Environmental Assessment**: Current conditions, marine growth patterns, visibility factors\n- **Access Planning**: Safe approach routes, working platforms, emergency egress procedures\n\n#### Professional Equipment Preparation\n- **Primary Lighting Systems**: Minimum 10,000 lumen underwater LED systems with redundant backup\n- **Documentation Tools**: Professional underwater cameras (minimum 24MP), calibrated measurement devices\n- **Cleaning Equipment**: Wire brushes, scrapers, high-pressure water cleaning systems for marine growth removal\n- **Safety Equipment**: Emergency ascent devices, redundant communication systems, cutting tools\n\n### Systematic Coverage Methods\n\n#### Grid Pattern Inspection (Industry Standard)\nProfessional standard for comprehensive structural coverage:\n- **Grid Dimensions**: 2x2 meters typical for detailed commercial inspection operations\n- **Overlap Requirements**: 10% minimum between adjacent grids for quality assurance verification\n- **Documentation Protocol**: Mark completed areas systematically on waterproof documentation slates\n- **Quality Control**: Independent verification of critical structural areas by certified personnel\n\n#### Zone-Based Assessment Framework\nStructural priority classification system for commercial operations:\n- **Critical Zones**: Primary load-bearing members, connection points, high-stress structural areas\n- **High Priority Areas**: Secondary structural elements, heavily stressed components, fatigue-prone areas\n- **Standard Zones**: General structural components, cladding systems, non-critical structural elements\n- **Environmental Impact Areas**: Zones with known aggressive conditions or elevated corrosion risk factors\n\n## Professional Defect Identification and Classification\n\n### Corrosion Types and Commercial Assessment\n\n#### General Corrosion Assessment\n- **Characteristics**: Uniform metal loss across large surface areas of steel structures\n- **Measurement Protocol**: Thickness reduction assessment using calibrated ultrasonic measurement gauges\n- **Documentation Requirements**: Area percentage affected calculations, average thickness loss documentation\n- **Critical Evaluation Factors**: Rate of progression analysis, remaining material structural integrity assessment\n\n#### Pitting Corrosion Professional Analysis\n- **Recognition Criteria**: Localized deep holes with relatively small surface area impact on structure\n- **Assessment Protocol**: Individual pit dimensional measurement (depth, diameter, density per unit area)\n- **Critical Evaluation Standards**: Depth-to-diameter ratio exceeding industry safety limits (typically 1:1)\n- **Risk Assessment Parameters**: Perforation potential analysis, stress concentration effects on structural integrity\n\n#### Crevice Corrosion Investigation\n- **Typical Location Identification**: Confined spaces, structural joint areas, under marine growth deposits\n- **Detection Challenges**: Often hidden from direct view, requires systematic cleaning for complete assessment\n- **Professional Documentation**: Access photographs with measurement scales, comprehensive dimensional surveys\n- **Prevention Recommendations**: Design modification suggestions for improved future maintenance accessibility\n\n#### Galvanic Corrosion Professional Evaluation\n- **Recognition Patterns**: Preferential metal attack at dissimilar metal connections and interfaces\n- **Analysis Methodology**: Anode/cathode identification using electrochemical galvanic series principles\n- **Measurement Protocol**: Extent of preferential attack documentation, remaining material structural integrity\n- **Professional Recommendations**: Electrical isolation methods, cathodic protection system effectiveness assessment\n\n## Professional Documentation Standards\n\n### Real-Time Field Recording Protocol\nSystematic documentation during commercial inspection operations:\n\n#### Location Identification Systems\n- **GPS Coordinate Systems**: Surface reference points with sub-meter accuracy requirements for positioning\n- **Structural Grid References**: Platform coordinate systems, structural member identification protocols\n- **Depth Reference Standards**: Chart datum, mean sea level, structure-specific datum reference systems\n- **Orientation Documentation**: Magnetic compass headings, structural reference bearing documentation\n\n#### Defect Characterization Professional Protocol\n- **Industry Classification Systems**: Standard defect categories per AWS D3.6M, NACE, and API standards\n- **Dimensional Recording Standards**: Digital calipers, measurement scales, comprehensive photographic documentation\n- **Severity Assessment Criteria**: Structural significance evaluation, safety implications comprehensive analysis\n- **Priority Ranking System**: Immediate, short-term, and long-term action requirements with cost implications\n\n### Professional Photography Standards\nHigh-quality underwater documentation techniques for commercial operations:\n\n#### Technical Requirements for Commercial Documentation\n- **Resolution Standards**: Minimum 24 megapixel cameras for detailed professional defect documentation\n- **Professional Lighting**: Multiple source illumination systems, shadow elimination lighting techniques\n- **Scale Reference Requirements**: Calibrated measurement devices visible in all detailed documentation photographs\n- **Multiple Perspective Protocol**: Overview, detail, and profile perspectives for complete visual documentation\n\n## Safety Integration and Professional Risk Management\n\n### Commercial Diving Hazard Recognition Protocol\nProfessional safety considerations during underwater inspection operations:\n\n#### Structural Safety Hazards\n- **Instability Assessment Protocol**: Compromised structural integrity professional evaluation procedures\n- **Sharp Edge Management**: Cut protection systems, safe handling procedures for damaged structures\n- **Falling Object Risk Assessment**: Loose component evaluation, debris hazard comprehensive analysis\n- **Confined Space Entry Protocol**: Limited access area safety procedures, emergency egress planning\n\n#### Environmental Safety Factors\n- **Current Condition Operating Limits**: Working current thresholds, emergency response procedures\n- **Visibility Management**: Adequate lighting requirements, navigation safety protocols\n- **Marine Life Hazard Assessment**: Hazardous species awareness, avoidance procedures\n- **Contamination Risk Evaluation**: Water quality assessment, biological hazard protection protocols\n\n## Professional Practice Scenario\n\n**Commercial Scenario**: Complete professional visual inspection of offshore platform leg showing corrosion evidence and marine growth accumulation at 18-meter depth with 4-meter visibility conditions.\n\n### Pre-Dive Professional Briefing\n- **Structure Service History**: 12-year-old platform operational history, previous inspection findings\n- **Environmental Operating Conditions**: 2-knot current, 18°C water temperature, moderate sea state\n- **Commercial Work Scope**: 4x4 meter inspection area, client documentation requirements\n- **Safety Considerations**: Sharp edges from previous repair work, overhead structural hazards\n\n### Professional Inspection Task Sequence\n1. **Initial Safety and Area Assessment**: Overall condition survey, safety hazard identification\n2. **Systematic Marine Growth Removal**: Professional cleaning using appropriate commercial tools\n3. **Grid Pattern Professional Inspection**: 2x2 meter systematic coverage with required overlap\n4. **Professional Defect Documentation**: Photography with measurement scales, detailed recording\n5. **Structural Integrity Assessment**: Load path evaluation, commercial repair priority determination\n\n### Professional Deliverables\n- **Comprehensive Field Notes**: Real-time observation recording with technical sketches\n- **Professional Photographic Documentation**: Minimum 50 high-resolution images with measurement scales  \n- **Complete Dimensional Survey**: Comprehensive defect measurement inventory with engineering calculations\n- **Professional Assessment Report**: Structural significance evaluation with prioritized repair recommendations\n- **Priority Matrix**: Risk-based repair scheduling with comprehensive cost-benefit analysis\n\nThis comprehensive training with AI tutoring provides the professional foundation required for commercial diving NDT operations, ensuring consistent, reliable results meeting industry standards and regulatory requirements.`,\n  }).returning();\n\n  const [ndtLesson2] = await db.insert(lessons).values({\n    trackId: ndtTrack.id,\n    title: \"Corrosion Assessment Techniques\",\n    order: 2,\n    content: `# Corrosion Assessment Techniques\n\n## AI Tutor: Dr. Sarah Chen - Corrosion Assessment Expert\n*Specialized in underwater corrosion assessment, electrochemical processes, and marine environment analysis*\n\nAdvanced corrosion assessment techniques are essential for professional underwater operations. I'll guide you through electrochemical processes, measurement methods, and industry standards for marine environments.\n\n## Professional Corrosion Assessment Framework\n\n### Electrochemical Fundamentals\nUnderstanding corrosion science for professional assessment:\n\n#### Corrosion Cell Components in Marine Environment\n- **Anode (Oxidation Reaction)**: Metal dissolution releasing electrons (Fe → Fe²⁺ + 2e⁻)\n- **Cathode (Reduction Reaction)**: Electron consumption (O₂ + 4H⁺ + 4e⁻ → 2H₂O)\n- **Electrolyte Function**: Seawater providing ionic conductivity (35,000 ppm dissolved salts)\n- **Metallic Current Path**: Electron flow through structural steel components\n\n#### Marine Environment Corrosion Factors\n- **Chloride Ion Concentration**: Aggressive attack mechanism (19,000 ppm typical seawater)\n- **Dissolved Oxygen Availability**: Cathodic reaction support, depth-dependent variations\n- **Temperature Gradient Effects**: Corrosion rate doubling every 10°C temperature increase\n- **pH Variation Impact**: Local acidity effects from marine biological activity\n\n### Assessment Methodology Standards\n\n#### Visual Corrosion Assessment Protocol\nProfessional visual evaluation techniques:\n\n**Surface Condition Classification**:\n- **Grade A (Excellent)**: No visible corrosion, intact protective coating systems\n- **Grade B (Good)**: Light surface corrosion, 5-25% surface area affected\n- **Grade C (Fair)**: Moderate corrosion damage, 25-50% surface area affected\n- **Grade D (Poor)**: Heavy corrosion damage, >50% area affected with significant metal loss\n\n**Professional Pattern Recognition**:\n- **Uniform Attack Pattern**: Even metal loss distribution across large structural areas\n- **Localized Corrosion Pattern**: Concentrated attack in specific environmental zones\n- **Preferential Corrosion Pattern**: Selective attack on specific metallurgical phases\n- **Microbiologically Influenced Pattern**: Bacterial colony-associated corrosion patterns\n\n#### Quantitative Assessment Techniques\n\n**Half-Cell Potential Measurement Protocol**:\n- **Reference Electrode Standard**: Silver/Silver Chloride (Ag/AgCl) in seawater electrolyte\n- **Measurement Grid System**: 1-meter spacing for detailed commercial surveys\n- **Professional Interpretation**: More negative potentials indicate active corrosion processes\n- **Industry Standards**: ASTM C876 modified for marine underwater applications\n\n**Professional Measurement Steps**:\n1. **Equipment Calibration**: Daily verification using certified standard solutions\n2. **Grid Establishment**: Systematic measurement point layout with GPS coordination\n3. **Contact Verification**: Proper electrical connection confirmation with structure\n4. **Data Recording**: Potential values with precise location coordinates\n5. **Trend Analysis**: Statistical comparison with previous survey data\n\n## Cathodic Protection Assessment\n\n### Industry Protection Criteria\nProfessional protection standards for marine structures:\n\n#### Primary Professional Criteria\n- **-850 mV (Ag/AgCl)**: Industry standard minimum protection potential for carbon steel\n- **Polarization Decay Test**: 100 mV shift requirement from native corrosion potential\n- **Current Density Range**: 20-50 mA/m² typical protection current requirements\n- **Environmental Corrections**: Temperature and salinity adjustment calculations\n\n#### Assessment Procedures\n**Instant-Off Potential Measurement**:\n- **Purpose**: Eliminate ohmic (IR) drop effects for accurate steel potential\n- **Technique**: Momentary cathodic current interruption, rapid potential reading\n- **Equipment**: High-speed data logging systems, synchronized interruption equipment\n- **Interpretation**: True steel electrochemical potential without voltage influences\n\n### Common Protection System Problems\n\n#### Inadequate Protection Issues\n- **Insufficient Current**: Anode capacity limitations or galvanic anode depletion\n- **Poor Distribution**: Current shadowing behind large structural components\n- **High Resistance**: Connection deterioration, protective coating breakdown\n- **Design Limitations**: Inadequate anode quantity or suboptimal placement\n\n**Diagnostic Techniques**:\n- **Current Distribution Surveys**: Anode effectiveness evaluation mapping\n- **Resistance Measurements**: Connection integrity verification testing\n- **Anode Condition Assessment**: Consumption rate and remaining life calculation\n- **Performance Trending**: Historical effectiveness analysis over time\n\nThis comprehensive corrosion assessment training ensures professional competency in advanced underwater inspection techniques for commercial diving operations.`,\n  }).returning();\n\n  // Diver Medic Track\n  const [medicLesson1] = await db.insert(lessons).values({\n    trackId: medicTrack.id,\n    title: \"ABCDE Emergency Assessment Protocol\",\n    order: 1,\n    content: `# ABCDE Emergency Assessment Protocol\n\n## AI Tutor: Dr. Michael Rodriguez - Emergency Medicine Specialist\n*Emergency medicine specialist focused on diving-related medical emergencies, hyperbaric treatment, and underwater rescue protocols*\n\nWelcome to professional emergency medical response training! I'm Dr. Michael Rodriguez, your AI tutor specializing in diving medical emergencies. The ABCDE protocol provides a systematic, life-saving approach for managing diving emergencies with optimal patient outcomes.\n\n## ABCDE Protocol Professional Framework\n\n### Primary Assessment Sequence\nThe ABCDE approach requires strict sequential order:\n- **A**: Airway management and patency assessment\n- **B**: Breathing evaluation and ventilation support\n- **C**: Circulation assessment and hemorrhage control\n- **D**: Disability (Neurological) evaluation and protection\n- **E**: Exposure/Environment control and complete examination\n\n**Critical Principle**: Each step must be completed and stabilized before progressing to the next, with immediate life-saving interventions taking absolute priority.\n\n## A - Airway Assessment and Management\n\n### Comprehensive Initial Assessment\nProfessional **Look, Listen, Feel** systematic approach:\n- **Visual Assessment**: Chest movement patterns, facial cyanosis, visible foreign objects\n- **Auditory Assessment**: Air movement sounds, vocalization ability, abnormal breathing noises  \n- **Tactile Assessment**: Air flow sensation at nose/mouth, chest rise confirmation\n\n### Airway Obstruction Recognition\n**Complete Obstruction Emergency Signs**:\n- Absent air movement despite obvious respiratory effort and distress\n- Silent chest presentation with visible distress and panic\n- Rapid progression to unconsciousness and cyanosis\n- Complete inability to cough, speak, or vocalize\n\n**Partial Obstruction Warning Signs**:\n- Stridor (high-pitched inspiratory sound indicating upper airway narrowing)\n- Significantly diminished air movement with increased respiratory effort\n- Use of accessory breathing muscles indicating respiratory distress\n- Anxiety and agitation from developing hypoxia and air hunger\n\n### Professional Management Techniques\n\n#### Basic Airway Management\n1. **Head Tilt-Chin Lift**: Primary positioning technique for unconscious patients\n   - Place hand on forehead, apply gentle backward pressure\n   - Use fingertips to lift chin upward (avoid soft tissue pressure)\n   - Maintain neutral spine alignment if spinal injury suspected\n\n2. **Jaw Thrust**: Alternative for suspected spinal injury\n   - Position at patient's head for optimal leverage\n   - Place fingers behind jaw angles, lift jaw forward\n   - Maintain head and neck stabilization throughout\n\n#### Advanced Airway Clearance\n- **Manual Removal**: Finger sweep for visible foreign objects\n- **Suction Clearance**: Professional devices for fluid or debris\n- **Patient Positioning**: Log roll for drainage with spinal alignment\n- **Back Blow Technique**: Conscious choking victim intervention\n\n### Professional Advanced Management\n- **Oropharyngeal Airway**: Unconscious patients without gag reflex\n- **Nasopharyngeal Airway**: Conscious or semiconscious patients\n- **Bag-Valve-Mask**: Positive pressure ventilation for inadequate breathing\n- **Advanced Airways**: Endotracheal intubation when trained and equipped\n\n## B - Breathing Assessment and Support\n\n### Comprehensive Evaluation\nProfessional assessment of **Rate, Rhythm, Quality, Effort**:\n- **Respiratory Rate**: Normal adult range 12-20 breaths per minute\n- **Breathing Rhythm**: Regular versus irregular breathing patterns  \n- **Quality Analysis**: Deep versus shallow, effective versus ineffective\n- **Effort Assessment**: Accessory muscles, signs of respiratory distress\n\n### Professional Emergency Management\n\n#### Respiratory Arrest Protocol\n- **Recognition**: Complete absence of chest movement, no detectable air flow\n- **Management**: Institute rescue breathing immediately without delay\n- **Ventilation Rate**: 10-12 assisted breaths per minute for adults\n- **Volume**: Sufficient to produce visible chest rise with each breath\n\n#### Respiratory Distress Management\n- **Recognition**: Increased rate, labored breathing, accessory muscle use\n- **Positioning**: Upright position if conscious and no spinal contraindications\n- **Oxygen Therapy**: High-flow oxygen if available and trained\n- **Monitoring**: Ongoing assessment of effectiveness and patient response\n\n### Diving-Specific Emergencies\n\n#### Pulmonary Barotrauma Management\n- **Pneumothorax Recognition**: Sudden chest pain, severe breathing difficulty, decreased sounds\n- **Emergency Management**: High-flow oxygen, upright positioning, urgent evacuation\n- **Tension Pneumothorax**: Life-threatening condition requiring needle decompression\n- **Prevention Education**: Proper ascent procedures, lung overexpansion awareness\n\n#### Near Drowning Protocol\n- **Laryngospasm Recognition**: Vocal cord spasm preventing air entry\n- **Pulmonary Edema Management**: Fluid accumulation requiring ventilation support\n- **Aspiration Concerns**: Inhaled water or foreign material requiring clearance\n- **Management**: Optimal airway positioning, assisted ventilation, high-flow oxygen\n\n## C - Circulation Assessment and Management\n\n### Professional Pulse Assessment\n**Location Selection and Clinical Significance**:\n- **Carotid Pulse**: Central pulse, optimal for emergency assessment and CPR\n- **Radial Pulse**: Peripheral pulse indicating systolic pressure >90 mmHg\n- **Femoral Pulse**: Strong central pulse useful in shock states\n- **Brachial Pulse**: Primary for infants and blood pressure measurement\n\n**Quality Interpretation**:\n- **Strong and Regular**: Normal cardiovascular function and adequate circulation\n- **Weak and Thready**: Shock states, dehydration, significant blood loss\n- **Irregular Pattern**: Cardiac arrhythmias, electrolyte imbalances\n- **Absent Pulse**: Cardiac arrest, severe shock, local vascular injury\n\n#### Professional Bleeding Control\n**Progressive Control Protocol**:\n1. **Direct Pressure**: Primary method for external bleeding control\n2. **Extremity Elevation**: Raise injured extremity above heart level\n3. **Arterial Pressure Points**: Strategic pressure for extremity bleeding\n4. **Tourniquet Application**: Last resort for life-threatening extremity hemorrhage\n\n**Internal Bleeding Recognition**:\n- **Abdominal Distension**: Potential intra-abdominal hemorrhage\n- **Chest Pain with Dyspnea**: Possible hemothorax or cardiac tamponade\n- **Neurological Changes**: Potential intracranial bleeding\n- **Shock Presentation**: Hypotension, tachycardia, altered mental status\n\n## D - Disability (Neurological Assessment)\n\n### Professional Consciousness Evaluation\n**AVPU Scale Application**:\n- **Alert**: Awake, oriented to person/place/time, following commands appropriately\n- **Voice Responsive**: Responds to verbal stimuli, may be disoriented\n- **Pain Responsive**: Responds only to painful stimulation\n- **Unresponsive**: No response to verbal or painful stimuli\n\n#### Diving-Specific Neurological Emergencies\n**Decompression Sickness Assessment**:\n- **Type I DCS**: Joint pain (bends), skin changes, lymphatic swelling\n- **Type II DCS**: Neurological symptoms, pulmonary involvement, serious manifestations\n- **Assessment**: Symptom onset timing correlation with dive profile\n- **Management**: High-flow oxygen, supine positioning, rapid evacuation\n\n**Arterial Gas Embolism Protocol**:\n- **Recognition**: Immediate neurological symptoms upon surfacing\n- **Symptoms**: Focal neurological deficits, altered consciousness\n- **Management**: Immediate high-flow oxygen, left lateral positioning\n- **Evacuation**: Urgent hyperbaric treatment facility transport\n\n## E - Exposure and Environmental Assessment\n\n### Complete Patient Examination\n**Systematic Exposure Protocol**:\n- **Privacy Preservation**: Maintain patient dignity during examination\n- **Hypothermia Prevention**: Minimize heat loss, provide warming\n- **Complete Assessment**: Identify all injuries and medical conditions\n- **Evidence Preservation**: Document all injuries, preserve legal evidence\n\n#### Environmental Injury Management\n**Hypothermia Recognition and Treatment**:\n- **Mild (90-95°F)**: Shivering, increased heart rate, confusion\n- **Moderate (82-90°F)**: Decreased shivering, muscle rigidity, altered mental status\n- **Severe (<82°F)**: Cardiac arrhythmias, unconsciousness, apparent death\n- **Treatment**: Gradual rewarming, gentle handling, insulation, warm environment\n\n## Professional Emergency Communication\n\n### Medical Emergency Reporting\n**Critical Information for Medical Control**:\n- **Scene Description**: Exact location, environmental conditions, safety status\n- **Patient Information**: Age, sex, consciousness level, vital signs\n- **Mechanism**: Detailed dive profile, symptom onset timing, current condition\n- **Treatment Provided**: All interventions performed, patient response\n- **Resources Required**: Equipment, personnel, transportation requirements\n\n### Documentation Requirements\n**Legal and Medical Documentation**:\n- **Incident Timeline**: Precise timing of all events and interventions\n- **Patient Assessment**: Complete ABCDE findings and serial reassessments\n- **Treatment Record**: All interventions with exact times and responses\n- **Witness Information**: Contact details for follow-up investigation\n- **Equipment Status**: Condition and operational status of emergency equipment\n\nThis comprehensive ABCDE training with AI tutoring ensures systematic, professional emergency response capabilities essential for diving operations safety and medical care effectiveness.`,\n  }).returning();\n\n  // Create comprehensive assessments\n  const [ndtAssessment] = await db.insert(quizzes).values({\n    lessonId: ndtLesson1.id,\n    title: \"Professional NDT Assessment - Visual Inspection Mastery\",\n    timeLimit: 30,\n  }).returning();\n\n  await db.insert(questions).values([\n    {\n      quizId: ndtAssessment.id,\n      prompt: \"In professional commercial underwater inspection operations, what is the primary advantage of systematic grid pattern inspection methodology?\",\n      a: \"Reduces total inspection time and operational costs significantly\",\n      b: \"Ensures complete systematic coverage with quality assurance verification and eliminates missed critical structural areas\",\n      c: \"Minimizes specialized lighting and equipment requirements for operations\",\n      d: \"Reduces diver physical exertion and gas consumption rates during work\",\n      answer: \"b\",\n      order: 1,\n    },\n    {\n      quizId: ndtAssessment.id,\n      prompt: \"Which corrosion type is most commonly associated with dissimilar metal connections in marine environments and requires electrochemical galvanic series analysis for assessment?\",\n      a: \"General uniform corrosion across large surface areas of structures\",\n      b: \"Localized pitting corrosion with high depth-to-diameter ratios\",\n      c: \"Galvanic corrosion with preferential anode attack at connection points and interfaces\",\n      d: \"Crevice corrosion in confined joint spaces and under marine growth deposits\",\n      answer: \"c\", \n      order: 2,\n    },\n    {\n      quizId: ndtAssessment.id,\n      prompt: \"According to NACE industry standards for cathodic protection, what is the minimum protection potential for steel structures in seawater using Silver/Silver Chloride reference electrode?\",\n      a: \"-750 mV (Ag/AgCl) with polarization verification\",\n      b: \"-850 mV (Ag/AgCl) with instant-off potential measurement\",\n      c: \"-950 mV (Ag/AgCl) with current density confirmation\",\n      d: \"-650 mV (Ag/AgCl) with environmental correction factors\",\n      answer: \"b\",\n      order: 3,\n    },\n  ]);\n\n  const [medicAssessment] = await db.insert(quizzes).values({\n    lessonId: medicLesson1.id,\n    title: \"Professional Emergency Medical Response Assessment\", \n    timeLimit: 25,\n  }).returning();\n\n  await db.insert(questions).values([\n    {\n      quizId: medicAssessment.id,\n      prompt: \"In the professional ABCDE emergency assessment protocol for diving emergencies, what is the correct systematic sequence and primary clinical focus of each component?\",\n      a: \"Airway patency assessment, Breathing adequacy evaluation, Circulation status check, Disability neurological assessment, Exposure complete examination with sequential stabilization\",\n      b: \"Alert level determination, Blood pressure measurement, CPR readiness assessment, Drug administration protocol, Emergency transport preparation\",\n      c: \"Ascent procedure verification, Buoyancy control assessment, Communication system check, Depth monitoring evaluation, Emergency evacuation preparation\",\n      d: \"Assessment priority determination, Basic life support initiation, Clinical evaluation completion, Diagnostic testing performance, Emergency procedure implementation\",\n      answer: \"a\",\n      order: 1,\n    },\n    {\n      quizId: medicAssessment.id,\n      prompt: \"What is the primary clinical difference between Type I and Type II decompression sickness in terms of symptom presentation and treatment urgency requirements?\",\n      a: \"Type I affects only joint systems with delayed onset, Type II affects only pulmonary systems with immediate onset\",\n      b: \"Type I involves mild joint pain and skin manifestations with lower urgency, Type II involves serious neurological and pulmonary complications requiring immediate intervention\",\n      c: \"Type I occurs exclusively at shallow recreational depths, Type II occurs exclusively at deep commercial diving depths\",\n      d: \"Type I responds to surface oxygen therapy alone, Type II requires immediate surgical intervention and advanced life support\",\n      answer: \"b\",\n      order: 2,\n    },\n    {\n      quizId: medicAssessment.id,\n      prompt: \"In arterial gas embolism (AGE) emergency management, what is the optimal patient positioning and immediate treatment protocol for maximum effectiveness?\",\n      a: \"Upright sitting position with standard oxygen therapy and gradual ascent procedures\",\n      b: \"Left lateral recumbent position with immediate high-flow oxygen therapy and urgent hyperbaric facility evacuation\",\n      c: \"Prone position with assisted mechanical ventilation and intravenous fluid administration\",\n      d: \"Right lateral position with standard oxygen therapy and delayed transport to medical facility\",\n      answer: \"b\",\n      order: 3,\n    },\n  ]);\n\n  console.log('✅ Professional diving education platform successfully seeded with comprehensive content!');\n  console.log(`Created ${await db.select().from(tracks).then(r => r.length)} comprehensive professional training tracks`);\n  console.log(`Created ${await db.select().from(lessons).then(r => r.length)} detailed professional lessons with AI tutors`);\n  console.log(`Created ${await db.select().from(quizzes).then(r => r.length)} professional assessments`);\n  console.log(`Created ${await db.select().from(questions).then(r => r.length)} comprehensive assessment questions`);\n  \n  console.log('\\n🎓 Professional Training Tracks Created with AI Tutors:');\n  console.log('1. Inspection & Non-Destructive Testing (NDT) - AI Tutor: Dr. Sarah Chen');\n  console.log('2. Diver Medic Technician - AI Tutor: Dr. Michael Rodriguez');\n  console.log('3. Commercial Dive Supervisor - AI Tutor: Captain James Mitchell');\n  console.log('4. Air Diver Certification - AI Tutor: Lisa Thompson');\n  console.log('5. Saturation Diver Training - AI Tutor: Commander Robert Hayes');\n  console.log('6. Assistant Life Support Technician (ALST) - AI Tutor: David Kim');\n  console.log('7. Life Support Technician (LST) - AI Tutor: Rebecca Foster');\n\n  console.log('\\n📚 Enhanced Features Integrated:');\n  console.log('- AI tutors embedded in lesson content with specialist backgrounds');\n  console.log('- Professional-grade comprehensive lesson content'); \n  console.log('- Industry-standard assessment questions');\n  console.log('- Real-world commercial diving scenarios');\n  console.log('- Professional documentation and safety protocols');\n}\n\nworkingSeed().catch(console.error).finally(() => process.exit(0));","size_bytes":35038},"server/temp-storage.ts":{"content":"import { db } from \"./db\";\nimport { tracks, lessons, quizzes, questions, invites, clients, users, aiTutors } from \"@shared/schema\";\nimport { eq, sql } from \"drizzle-orm\";\n\n// Temporary storage class that works with current database structure\nexport class TempDatabaseStorage {\n  async getAllTracks() {\n    try {\n      const result = await db.select({\n        id: tracks.id,\n        title: tracks.title,\n        slug: tracks.slug,\n        summary: tracks.summary,\n        isPublished: tracks.isPublished,\n        createdAt: tracks.createdAt,\n        aiTutor: {\n          id: aiTutors.id,\n          name: aiTutors.name,\n          specialty: aiTutors.specialty,\n          description: aiTutors.description,\n        }\n      }).from(tracks)\n        .leftJoin(aiTutors, eq(tracks.aiTutorId, aiTutors.id))\n        .where(eq(tracks.isPublished, true))\n        .orderBy(tracks.title);\n      return result;\n    } catch (error) {\n      console.error('Error fetching tracks:', error);\n      throw error;\n    }\n  }\n\n  async getTrackBySlug(slug: string) {\n    try {\n      const [track] = await db.select({\n        id: tracks.id,\n        title: tracks.title,\n        slug: tracks.slug,\n        summary: tracks.summary,\n        isPublished: tracks.isPublished,\n        createdAt: tracks.createdAt,\n        aiTutor: {\n          id: aiTutors.id,\n          name: aiTutors.name,\n          specialty: aiTutors.specialty,\n          description: aiTutors.description,\n        }\n      }).from(tracks)\n        .leftJoin(aiTutors, eq(tracks.aiTutorId, aiTutors.id))\n        .where(eq(tracks.slug, slug));\n      \n      if (!track) return undefined;\n\n      const trackLessons = await db.select({\n        id: lessons.id,\n        trackId: lessons.trackId,\n        title: lessons.title,\n        order: lessons.order,\n        content: lessons.content,\n        createdAt: lessons.createdAt,\n        updatedAt: lessons.updatedAt,\n      }).from(lessons).where(eq(lessons.trackId, track.id)).orderBy(lessons.order);\n      \n      return {\n        ...track,\n        lessons: trackLessons\n      };\n    } catch (error) {\n      console.error('Error fetching track by slug:', error);\n      throw error;\n    }\n  }\n\n  async getLessonById(id: string) {\n    try {\n      const [lesson] = await db.select({\n        id: lessons.id,\n        trackId: lessons.trackId,\n        title: lessons.title,\n        order: lessons.order,\n        content: lessons.content,\n        createdAt: lessons.createdAt,\n        updatedAt: lessons.updatedAt,\n      }).from(lessons).where(eq(lessons.id, id));\n      \n      return lesson || undefined;\n    } catch (error) {\n      console.error('Error fetching lesson:', error);\n      throw error;\n    }\n  }\n\n  async getQuizByLessonId(lessonId: string) {\n    try {\n      const [quiz] = await db.select({\n        id: quizzes.id,\n        lessonId: quizzes.lessonId,\n        title: quizzes.title,\n        timeLimit: quizzes.timeLimit,\n      }).from(quizzes).where(eq(quizzes.lessonId, lessonId));\n      \n      if (!quiz) return undefined;\n\n      const quizQuestions = await db.select({\n        id: questions.id,\n        quizId: questions.quizId,\n        prompt: questions.prompt,\n        options: questions.options,\n        correctAnswer: questions.correctAnswer,\n        order: questions.order,\n      }).from(questions).where(eq(questions.quizId, quiz.id)).orderBy(questions.order);\n      \n      return {\n        ...quiz,\n        questions: quizQuestions\n      };\n    } catch (error) {\n      console.error('Error fetching quiz:', error);\n      throw error;\n    }\n  }\n\n  async getAllInvites() {\n    try {\n      const result = await db.select().from(invites).orderBy(invites.createdAt);\n      return result;\n    } catch (error) {\n      console.error('Error fetching invites:', error);\n      throw error;\n    }\n  }\n\n  async getUserProgress(userId: string) {\n    try {\n      // Since user_progress table may not exist, return empty array for now\n      return [];\n    } catch (error) {\n      console.error('Error fetching user progress:', error);\n      return [];\n    }\n  }\n\n  // Client Management\n  async getAllClients() {\n    try {\n      const result = await db.execute(`\n        SELECT id, name, email, subscription_type, status, subscription_date, monthly_revenue, notes, created_at, updated_at \n        FROM clients \n        ORDER BY created_at DESC\n      `);\n      return result.rows;\n    } catch (error) {\n      console.error('Error fetching clients:', error);\n      return [];\n    }\n  }\n\n  async createClient(client: any) {\n    try {\n      const result = await db.execute(`\n        INSERT INTO clients (name, email, subscription_type, status, subscription_date, monthly_revenue, notes) \n        VALUES ($1, $2, $3, $4, $5, $6, $7) \n        RETURNING *\n      `, [client.name, client.email, client.subscriptionType, client.status, client.subscriptionDate, client.monthlyRevenue, client.notes]);\n      return result.rows[0];\n    } catch (error) {\n      console.error('Error creating client:', error);\n      throw error;\n    }\n  }\n\n  async updateClient(id: string, updates: any) {\n    try {\n      const result = await db.execute(`\n        UPDATE clients \n        SET name = $2, email = $3, subscription_type = $4, status = $5, subscription_date = $6, monthly_revenue = $7, notes = $8, updated_at = CURRENT_TIMESTAMP\n        WHERE id = $1 \n        RETURNING *\n      `, [id, updates.name, updates.email, updates.subscriptionType, updates.status, updates.subscriptionDate, updates.monthlyRevenue, updates.notes]);\n      return result.rows[0];\n    } catch (error) {\n      console.error('Error updating client:', error);\n      throw error;\n    }\n  }\n\n  async deleteClient(id: string) {\n    try {\n      await db.execute('DELETE FROM clients WHERE id = $1', [id]);\n      return { success: true };\n    } catch (error) {\n      console.error('Error deleting client:', error);\n      throw error;\n    }\n  }\n\n  async getClientStats() {\n    try {\n      const totalResult = await db.execute('SELECT COUNT(*) as total FROM clients');\n      const total = parseInt(totalResult.rows[0].total);\n\n      const activeResult = await db.execute(\"SELECT COUNT(*) as active FROM clients WHERE status = 'ACTIVE'\");\n      const active = parseInt(activeResult.rows[0].active);\n\n      const revenueResult = await db.execute(\"SELECT SUM(monthly_revenue) as mrr FROM clients WHERE status = 'ACTIVE'\");\n      const totalMRR = parseInt(revenueResult.rows[0].mrr || 0);\n\n      return {\n        totalClients: total,\n        activeClients: active,\n        monthlyRecurringRevenue: totalMRR,\n        lastUpdated: new Date().toISOString()\n      };\n    } catch (error) {\n      console.error('Error fetching client stats:', error);\n      return {\n        totalClients: 0,\n        activeClients: 0,\n        monthlyRecurringRevenue: 0,\n        lastUpdated: new Date().toISOString()\n      };\n    }\n  }\n\n  async getQuizAnalytics() {\n    try {\n      // Get quiz completion statistics\n      const quizStats = await db.execute(`\n        SELECT \n          q.id,\n          q.title,\n          l.title as lesson_title,\n          t.title as track_title,\n          COUNT(CASE WHEN qa.id IS NOT NULL THEN 1 END) as total_attempts,\n          AVG(CASE WHEN qa.score IS NOT NULL THEN qa.score::float END) as avg_score,\n          MAX(CASE WHEN qa.score IS NOT NULL THEN qa.score END) as max_score,\n          MIN(CASE WHEN qa.score IS NOT NULL THEN qa.score END) as min_score\n        FROM quizzes q\n        LEFT JOIN lessons l ON q.lesson_id = l.id\n        LEFT JOIN tracks t ON l.track_id = t.id\n        LEFT JOIN quiz_attempts qa ON q.id = qa.quiz_id\n        GROUP BY q.id, q.title, l.title, t.title\n        ORDER BY total_attempts DESC\n      `);\n\n      // Get track-level analytics\n      const trackStats = await db.execute(`\n        SELECT \n          t.id,\n          t.title,\n          COUNT(DISTINCT l.id) as total_lessons,\n          COUNT(DISTINCT q.id) as total_quizzes,\n          COUNT(qa.id) as total_attempts,\n          AVG(CASE WHEN qa.score IS NOT NULL THEN qa.score::float END) as avg_score\n        FROM tracks t\n        LEFT JOIN lessons l ON t.id = l.track_id\n        LEFT JOIN quizzes q ON l.id = q.lesson_id\n        LEFT JOIN quiz_attempts qa ON q.id = qa.quiz_id\n        WHERE t.is_published = true\n        GROUP BY t.id, t.title\n        ORDER BY total_attempts DESC\n      `);\n\n      // Get recent quiz attempts for activity feed\n      const recentAttempts = await db.execute(`\n        SELECT \n          qa.id,\n          qa.score,\n          qa.total_questions,\n          qa.created_at,\n          q.title as quiz_title,\n          l.title as lesson_title,\n          t.title as track_title\n        FROM quiz_attempts qa\n        LEFT JOIN quizzes q ON qa.quiz_id = q.id\n        LEFT JOIN lessons l ON q.lesson_id = l.id\n        LEFT JOIN tracks t ON l.track_id = t.id\n        ORDER BY qa.created_at DESC\n        LIMIT 20\n      `);\n\n      return {\n        quizStats: quizStats.rows,\n        trackStats: trackStats.rows,\n        recentAttempts: recentAttempts.rows\n      };\n    } catch (error) {\n      console.error('Error fetching quiz analytics:', error);\n      // Return empty data structure\n      return {\n        quizStats: [],\n        trackStats: [],\n        recentAttempts: []\n      };\n    }\n  }\n\n  // User operations for trial signup\n  async createTrialUser(userData: { name: string; email: string }) {\n    try {\n      // Check if user already exists\n      const existingUserResult = await db.execute('SELECT id FROM users WHERE email = $1', [userData.email]);\n      if (existingUserResult.rows.length > 0) {\n        throw new Error(\"User already exists with this email\");\n      }\n\n      // Create 24-hour trial expiration\n      const trialExpiration = new Date();\n      trialExpiration.setHours(trialExpiration.getHours() + 24);\n\n      const result = await db.execute(`\n        INSERT INTO users (email, name, subscription_type, trial_expires_at, subscription_status) \n        VALUES ($1, $2, 'TRIAL', $3, 'ACTIVE') \n        RETURNING *\n      `, [userData.email, userData.name, trialExpiration.toISOString()]);\n      \n      return result.rows[0];\n    } catch (error) {\n      console.error('Error creating trial user:', error);\n      throw error;\n    }\n  }\n\n  async getUserByEmail(email: string) {\n    try {\n      const result = await db.execute('SELECT * FROM users WHERE email = $1', [email]);\n      return result.rows[0] || null;\n    } catch (error) {\n      console.error('Error fetching user by email:', error);\n      return null;\n    }\n  }\n\n  async getUserById(id: string) {\n    try {\n      const result = await db.execute('SELECT * FROM users WHERE id = $1', [id]);\n      return result.rows[0] || null;\n    } catch (error) {\n      console.error('Error fetching user by id:', error);\n      return null;\n    }\n  }\n}\n\nexport const tempStorage = new TempDatabaseStorage();","size_bytes":10805},"CloudFlare-Deployment-Guide.md":{"content":"# CloudFlare Deployment Guide for Professional Diver - Diver Well Training\n\n## Setting up CloudFlare for https://professional-diver.diverwell.app\n\n### Prerequisites\n- CloudFlare account\n- Domain ownership verification for diverwell.app\n- Replit Core or higher plan for custom domains\n\n### Step 1: CloudFlare Domain Configuration\n\n1. **Add Domain to CloudFlare:**\n   - Log in to CloudFlare dashboard\n   - Click \"Add a Site\" \n   - Enter `diverwell.app`\n   - Select plan (Free plan works for basic setup)\n   - CloudFlare will scan existing DNS records\n\n2. **Update Nameservers:**\n   - Copy the CloudFlare nameservers provided\n   - Update nameservers at your domain registrar to point to CloudFlare\n   - Wait for propagation (usually 24-48 hours)\n\n### Step 2: DNS Configuration\n\n3. **Add Subdomain Record:**\n   ```\n   Type: CNAME\n   Name: professional-diver\n   Target: <your-replit-url>.replit.dev\n   Proxy Status: Proxied (orange cloud)\n   TTL: Auto\n   ```\n\n4. **SSL/TLS Settings:**\n   - Go to SSL/TLS → Overview\n   - Set encryption mode to \"Full (strict)\" for production\n   - Enable \"Always Use HTTPS\"\n\n### Step 3: Replit Domain Configuration\n\n5. **Configure Custom Domain in Replit:**\n   - Open your Replit project\n   - Go to the webview/preview\n   - Click on the URL bar and select \"Custom domains\"\n   - Add `professional-diver.diverwell.app`\n   - Follow Replit's verification process\n\n### Step 4: CloudFlare Performance & Security\n\n6. **Performance Optimization:**\n   - Enable \"Auto Minify\" for CSS, HTML, JS\n   - Enable \"Brotli\" compression\n   - Set Browser Cache TTL to appropriate value\n   - Enable \"Always Online\"\n\n7. **Security Configuration:**\n   - Enable \"Security Level: Medium\"\n   - Configure \"Challenge Passage\" to 30 minutes\n   - Enable \"Browser Integrity Check\"\n   - Set up \"Rate Limiting\" if needed\n\n### Step 5: Page Rules & Redirects\n\n8. **Create Page Rules:**\n   ```\n   Rule 1: Redirect www to non-www\n   URL: www.professional-diver.diverwell.app/*\n   Setting: Forwarding URL (Status Code: 301, Destination: https://professional-diver.diverwell.app/$1)\n\n   Rule 2: Force HTTPS\n   URL: http://professional-diver.diverwell.app/*\n   Setting: Always Use HTTPS\n   ```\n\n### Step 6: Additional Configuration\n\n9. **HTTP/2 & HTTP/3:**\n   - Enable HTTP/2 and HTTP/3 in Network settings\n   - Enable \"0-RTT Connection Resumption\"\n\n10. **Analytics Setup:**\n    - Enable CloudFlare Web Analytics\n    - Configure custom analytics if needed\n\n### Step 7: Email Marketing Integration\n\n11. **Email Routing (Optional):**\n    - Set up email routing for support@diverwell.app\n    - Configure SPF/DKIM records for email marketing\n    - Add MX records if using CloudFlare email routing\n\n### Step 8: Testing & Verification\n\n12. **Domain Verification:**\n    ```bash\n    # Test DNS resolution\n    nslookup professional-diver.diverwell.app\n    \n    # Test SSL certificate\n    openssl s_client -connect professional-diver.diverwell.app:443 -servername professional-diver.diverwell.app\n    \n    # Test HTTP to HTTPS redirect\n    curl -I http://professional-diver.diverwell.app\n    ```\n\n13. **Performance Testing:**\n    - Use CloudFlare's Speed Test\n    - Test with Google PageSpeed Insights\n    - Verify all resources load correctly\n\n### Environment Variables Update\n\n14. **Update Application Configuration:**\n    ```env\n    # Add to Replit Secrets\n    SITE_URL=https://professional-diver.diverwell.app\n    REPLIT_DOMAINS=professional-diver.diverwell.app\n    ```\n\n### Monitoring & Maintenance\n\n15. **Set up CloudFlare Monitoring:**\n    - Configure uptime monitoring\n    - Set up email alerts for downtime\n    - Monitor traffic analytics\n\n16. **Regular Maintenance:**\n    - Review security logs monthly\n    - Update firewall rules as needed\n    - Monitor performance metrics\n\n## Troubleshooting Common Issues\n\n### DNS Propagation Delays\n- Use `dig` or `nslookup` to check propagation\n- Clear DNS cache: `ipconfig /flushdns` (Windows) or `sudo dscacheutil -flushcache` (Mac)\n\n### SSL Certificate Issues\n- Ensure CloudFlare SSL mode is \"Full (strict)\"\n- Verify Replit is generating SSL certificates for custom domain\n- Check for mixed content warnings\n\n### Replit Connection Issues\n- Verify the Replit project is running\n- Check custom domain configuration in Replit\n- Ensure the application binds to 0.0.0.0:5000\n\n### Performance Issues\n- Enable CloudFlare caching for static assets\n- Optimize images and minimize HTTP requests\n- Use CloudFlare's Polish feature for image optimization\n\n## Security Best Practices\n\n1. **Enable CloudFlare Security Features:**\n   - Bot Fight Mode for basic bot protection\n   - Rate limiting for API endpoints\n   - WAF rules for common attacks\n\n2. **Content Security Policy:**\n   - Add CSP headers for XSS protection\n   - Whitelist trusted domains only\n\n3. **Regular Updates:**\n   - Keep Replit runtime updated\n   - Monitor security advisories\n   - Review access logs regularly\n\n## Success Verification\n\nOnce completed, verify:\n- ✅ https://professional-diver.diverwell.app loads correctly\n- ✅ HTTP redirects to HTTPS\n- ✅ SSL certificate is valid and trusted\n- ✅ All features work (trial signup, AI consultant, payment links)\n- ✅ Email marketing functions properly\n- ✅ Performance is optimized with CloudFlare\n- ✅ Analytics and monitoring are configured\n\nThis setup provides enterprise-grade performance, security, and reliability for the Professional Diver platform through CloudFlare's global CDN network.","size_bytes":5436},"client/src/components/footer.tsx":{"content":"import { Mail, Phone, MapPin } from \"lucide-react\";\nimport diverWellLogo from \"@assets/DIVER_WELL_TRAINING-500x500-rbg-preview_1756088331820.png\";\n\nexport default function Footer() {\n  return (\n    <footer className=\"bg-slate-900 text-white\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n          {/* Logo and Company Info */}\n          <div>\n            <div className=\"flex items-center space-x-3 mb-4\">\n              <img \n                src={diverWellLogo} \n                alt=\"Professional Diver - Diver Well Training\" \n                className=\"w-12 h-12 rounded-lg\"\n              />\n              <div>\n                <h3 className=\"text-xl font-bold\">Professional Diver</h3>\n                <p className=\"text-sm text-slate-300\">Diver Well Training</p>\n              </div>\n            </div>\n            <p className=\"text-slate-300 mb-6 max-w-md\">\n              Brand-neutral commercial diving education platform with comprehensive training tracks, \n              AI-powered learning, and professional certification preparation.\n            </p>\n          </div>\n\n          {/* Contact Info */}\n          <div>\n            <h4 className=\"text-lg font-semibold mb-4\">Contact Us</h4>\n            <div className=\"space-y-2\">\n              <div className=\"flex items-center space-x-2 text-sm text-slate-300\">\n                <Mail className=\"w-4 h-4\" />\n                <a href=\"mailto:support@diverwell.app\" className=\"hover:text-white\">support@diverwell.app</a>\n              </div>\n              <div className=\"flex items-center space-x-2 text-sm text-slate-300\">\n                <Phone className=\"w-4 h-4\" />\n                <span>+44 (0) 208 123 4567</span>\n              </div>\n              <div className=\"flex items-center space-x-2 text-sm text-slate-300\">\n                <MapPin className=\"w-4 h-4\" />\n                <span>London, United Kingdom</span>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Bottom Bar with Disclaimer */}\n        <div className=\"border-t border-slate-700 mt-8 pt-8\">\n          <div className=\"text-center space-y-4\">\n            <div className=\"bg-slate-800 rounded-lg p-4 text-sm text-slate-300\">\n              <p className=\"font-semibold text-slate-200 mb-2\">Brand Neutrality & Compliance Notice</p>\n              <p>\n                All content provided by Professional Diver - Diver Well Training is brand-neutral and has been \n                reworded to ensure compliance and congruence with educational standards. We are not affiliated \n                with any specific certification bodies or industry organizations. Our materials are original, \n                independently developed content covering comparable knowledge domains without reproducing \n                proprietary material or implying endorsement from any third-party brands.\n              </p>\n            </div>\n            \n            <div className=\"flex flex-col sm:flex-row justify-between items-center text-sm text-slate-400\">\n              <p>&copy; 2025 Professional Diver - Diver Well Training. All rights reserved.</p>\n              <p>Professional diving education platform | Brand-neutral content</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </footer>\n  );\n}","size_bytes":3352},"client/src/components/trial-countdown.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { Clock, AlertTriangle } from \"lucide-react\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Alert, AlertDescription } from \"@/components/ui/alert\";\n\ninterface TrialCountdownProps {\n  expiresAt: string;\n  onUpgrade?: () => void;\n  showUpgradeButton?: boolean;\n}\n\nexport default function TrialCountdown({ expiresAt, onUpgrade, showUpgradeButton = true }: TrialCountdownProps) {\n  const [timeLeft, setTimeLeft] = useState<{\n    hours: number;\n    minutes: number;\n    seconds: number;\n    total: number;\n  }>({ hours: 0, minutes: 0, seconds: 0, total: 0 });\n\n  useEffect(() => {\n    const calculateTimeLeft = () => {\n      const now = new Date().getTime();\n      const expiration = new Date(expiresAt).getTime();\n      const difference = expiration - now;\n\n      if (difference > 0) {\n        const hours = Math.floor(difference / (1000 * 60 * 60));\n        const minutes = Math.floor((difference % (1000 * 60 * 60)) / (1000 * 60));\n        const seconds = Math.floor((difference % (1000 * 60)) / 1000);\n        \n        setTimeLeft({ hours, minutes, seconds, total: difference });\n      } else {\n        setTimeLeft({ hours: 0, minutes: 0, seconds: 0, total: 0 });\n      }\n    };\n\n    calculateTimeLeft();\n    const timer = setInterval(calculateTimeLeft, 1000);\n\n    return () => clearInterval(timer);\n  }, [expiresAt]);\n\n  const isExpired = timeLeft.total <= 0;\n  const isLowTime = timeLeft.total <= 3600000; // 1 hour remaining\n\n  if (isExpired) {\n    return (\n      <Alert className=\"border-red-200 bg-red-50\">\n        <AlertTriangle className=\"h-4 w-4 text-red-600\" />\n        <AlertDescription className=\"text-red-800\">\n          <div className=\"flex items-center justify-between\">\n            <span className=\"font-medium\">Your free trial has expired</span>\n            {showUpgradeButton && (\n              <Button \n                size=\"sm\" \n                className=\"bg-red-600 hover:bg-red-700 text-white ml-4\"\n                onClick={onUpgrade}\n                data-testid=\"button-upgrade-expired\"\n              >\n                Upgrade Now\n              </Button>\n            )}\n          </div>\n        </AlertDescription>\n      </Alert>\n    );\n  }\n\n  return (\n    <Card className={`${isLowTime ? 'border-orange-200 bg-orange-50' : 'border-blue-200 bg-blue-50'}`}>\n      <CardContent className=\"p-4\">\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-3\">\n            <div className={`w-10 h-10 rounded-full flex items-center justify-center ${\n              isLowTime ? 'bg-orange-100' : 'bg-blue-100'\n            }`}>\n              <Clock className={`w-5 h-5 ${isLowTime ? 'text-orange-600' : 'text-blue-600'}`} />\n            </div>\n            <div>\n              <div className=\"font-semibold text-slate-900\">Free Trial</div>\n              <div className={`text-sm ${isLowTime ? 'text-orange-600' : 'text-blue-600'}`}>\n                <span className=\"font-mono text-lg\">\n                  {timeLeft.hours.toString().padStart(2, '0')}:\n                  {timeLeft.minutes.toString().padStart(2, '0')}:\n                  {timeLeft.seconds.toString().padStart(2, '0')}\n                </span>\n                <span className=\"ml-2\">remaining</span>\n              </div>\n            </div>\n          </div>\n          \n          {showUpgradeButton && (\n            <div className=\"flex space-x-2\">\n              <Button \n                size=\"sm\" \n                variant=\"outline\"\n                className=\"border-blue-300 text-blue-600 hover:bg-blue-50\"\n                onClick={() => window.open('https://buy.stripe.com/8x24gzg9S2gG7WX4XugMw03', '_blank')}\n                data-testid=\"button-upgrade-monthly\"\n              >\n                $25/month\n              </Button>\n              <Button \n                size=\"sm\" \n                className=\"bg-blue-600 hover:bg-blue-700 text-white\"\n                onClick={() => window.open('https://buy.stripe.com/eVq8wP1eY2gG4KLblSgMw04', '_blank')}\n                data-testid=\"button-upgrade-yearly\"\n              >\n                $250/year\n              </Button>\n            </div>\n          )}\n        </div>\n        \n        {isLowTime && (\n          <div className=\"mt-3 text-sm text-orange-700\">\n            <strong>Hurry!</strong> Your trial expires soon. Upgrade now to continue your diving education.\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  );\n}","size_bytes":4530},"client/src/pages/contact.tsx":{"content":"import { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { z } from \"zod\";\nimport { Link } from \"wouter\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { Mail, Phone, MapPin, MessageSquare } from \"lucide-react\";\nimport Footer from \"@/components/footer\";\nimport diverWellLogo from \"@assets/DIVER_WELL_TRAINING-500x500-rbg-preview_1756088331820.png\";\n\nconst contactSchema = z.object({\n  name: z.string().min(1, \"Name is required\"),\n  email: z.string().email(\"Please enter a valid email address\"),\n  subject: z.string().min(1, \"Subject is required\"),\n  message: z.string().min(10, \"Message must be at least 10 characters\"),\n  priority: z.enum([\"low\", \"medium\", \"high\", \"urgent\"]).default(\"medium\")\n});\n\ntype ContactForm = z.infer<typeof contactSchema>;\n\nexport default function Contact() {\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const { toast } = useToast();\n\n  const form = useForm<ContactForm>({\n    resolver: zodResolver(contactSchema),\n    defaultValues: {\n      name: \"\",\n      email: \"\",\n      subject: \"\",\n      message: \"\",\n      priority: \"medium\"\n    },\n  });\n\n  const onSubmit = async (data: ContactForm) => {\n    setIsSubmitting(true);\n    try {\n      await apiRequest('/api/support/ticket', {\n        method: 'POST',\n        body: JSON.stringify(data),\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n\n      toast({\n        title: \"Message sent successfully!\",\n        description: \"We'll get back to you within 24 hours. Check your email for confirmation.\",\n        variant: \"default\",\n      });\n\n      form.reset();\n    } catch (error) {\n      toast({\n        title: \"Failed to send message\",\n        description: \"Please try again or contact us directly at support@diverwell.app\",\n        variant: \"destructive\",\n      });\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-white to-slate-50\">\n      {/* Header */}\n      <nav className=\"bg-white/80 backdrop-blur-md border-b border-slate-200 sticky top-0 z-50\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex justify-between items-center h-16\">\n            <Link href=\"/\">\n              <a className=\"flex items-center space-x-3\">\n                <img \n                  src={diverWellLogo} \n                  alt=\"Professional Diver - Diver Well Training\" \n                  className=\"w-10 h-10 rounded-lg\"\n                />\n                <div>\n                  <div className=\"text-lg font-bold text-slate-900\">Professional Diver</div>\n                  <div className=\"text-xs text-slate-500\">Diver Well Training</div>\n                </div>\n              </a>\n            </Link>\n            <div className=\"flex items-center space-x-4\">\n              <Link href=\"/\">\n                <a className=\"text-slate-600 hover:text-slate-900 font-medium\">\n                  ← Back to Platform\n                </a>\n              </Link>\n            </div>\n          </div>\n        </div>\n      </nav>\n\n      <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\n        <div className=\"text-center mb-12\">\n          <h1 className=\"text-4xl font-bold text-slate-900 mb-4\">Contact Support</h1>\n          <p className=\"text-xl text-slate-600 max-w-3xl mx-auto\">\n            Get in touch with our professional diving education specialists. We're here to help \n            with technical support, course guidance, and any questions about our platform.\n          </p>\n        </div>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n          {/* Contact Information */}\n          <div className=\"lg:col-span-1\">\n            <Card className=\"h-fit\">\n              <CardHeader>\n                <CardTitle className=\"flex items-center gap-2\">\n                  <MessageSquare className=\"w-5 h-5 text-blue-600\" />\n                  Get in Touch\n                </CardTitle>\n              </CardHeader>\n              <CardContent className=\"space-y-6\">\n                <div className=\"space-y-4\">\n                  <div className=\"flex items-start space-x-3\">\n                    <Mail className=\"w-5 h-5 text-blue-600 mt-1\" />\n                    <div>\n                      <p className=\"font-medium text-slate-900\">Email Support</p>\n                      <a \n                        href=\"mailto:support@diverwell.app\" \n                        className=\"text-blue-600 hover:text-blue-700\"\n                      >\n                        support@diverwell.app\n                      </a>\n                      <p className=\"text-sm text-slate-500\">Response within 24 hours</p>\n                    </div>\n                  </div>\n\n                  <div className=\"flex items-start space-x-3\">\n                    <Phone className=\"w-5 h-5 text-blue-600 mt-1\" />\n                    <div>\n                      <p className=\"font-medium text-slate-900\">Phone Support</p>\n                      <p className=\"text-slate-700\">+44 (0) 208 123 4567</p>\n                      <p className=\"text-sm text-slate-500\">Mon-Fri, 9AM-6PM GMT</p>\n                    </div>\n                  </div>\n\n                  <div className=\"flex items-start space-x-3\">\n                    <MapPin className=\"w-5 h-5 text-blue-600 mt-1\" />\n                    <div>\n                      <p className=\"font-medium text-slate-900\">Office Location</p>\n                      <p className=\"text-slate-700\">London, United Kingdom</p>\n                      <p className=\"text-sm text-slate-500\">Remote-first team</p>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"border-t pt-6\">\n                  <h4 className=\"font-semibold text-slate-900 mb-3\">Quick Resources</h4>\n                  <div className=\"space-y-2\">\n                    <button \n                      onClick={() => window.open('https://chatgpt.com/g/g-6897d42d3ba48191b48883a4839c09bf-diver-well-commercial-diver-ai-consultant', '_blank')}\n                      className=\"block w-full text-left text-blue-600 hover:text-blue-700 text-sm\"\n                    >\n                      → AI Consultant (Instant Help)\n                    </button>\n                    <Link href=\"/privacy\">\n                      <a className=\"block text-blue-600 hover:text-blue-700 text-sm\">\n                        → Privacy Policy\n                      </a>\n                    </Link>\n                    <Link href=\"/trial-signup\">\n                      <a className=\"block text-blue-600 hover:text-blue-700 text-sm\">\n                        → Start Free Trial\n                      </a>\n                    </Link>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n\n          {/* Contact Form */}\n          <div className=\"lg:col-span-2\">\n            <Card>\n              <CardHeader>\n                <CardTitle>Send us a Message</CardTitle>\n                <p className=\"text-slate-600\">\n                  Fill out the form below and we'll get back to you as soon as possible. \n                  For urgent matters, please call us directly.\n                </p>\n              </CardHeader>\n              <CardContent>\n                <Form {...form}>\n                  <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                      <FormField\n                        control={form.control}\n                        name=\"name\"\n                        render={({ field }) => (\n                          <FormItem>\n                            <FormLabel>Full Name</FormLabel>\n                            <FormControl>\n                              <Input \n                                placeholder=\"Enter your full name\" \n                                {...field} \n                                data-testid=\"input-contact-name\"\n                              />\n                            </FormControl>\n                            <FormMessage />\n                          </FormItem>\n                        )}\n                      />\n\n                      <FormField\n                        control={form.control}\n                        name=\"email\"\n                        render={({ field }) => (\n                          <FormItem>\n                            <FormLabel>Email Address</FormLabel>\n                            <FormControl>\n                              <Input \n                                type=\"email\" \n                                placeholder=\"Enter your email\" \n                                {...field} \n                                data-testid=\"input-contact-email\"\n                              />\n                            </FormControl>\n                            <FormMessage />\n                          </FormItem>\n                        )}\n                      />\n                    </div>\n\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                      <FormField\n                        control={form.control}\n                        name=\"subject\"\n                        render={({ field }) => (\n                          <FormItem>\n                            <FormLabel>Subject</FormLabel>\n                            <FormControl>\n                              <Input \n                                placeholder=\"Brief description of your inquiry\" \n                                {...field} \n                                data-testid=\"input-contact-subject\"\n                              />\n                            </FormControl>\n                            <FormMessage />\n                          </FormItem>\n                        )}\n                      />\n\n                      <FormField\n                        control={form.control}\n                        name=\"priority\"\n                        render={({ field }) => (\n                          <FormItem>\n                            <FormLabel>Priority Level</FormLabel>\n                            <Select onValueChange={field.onChange} defaultValue={field.value}>\n                              <FormControl>\n                                <SelectTrigger data-testid=\"select-contact-priority\">\n                                  <SelectValue placeholder=\"Select priority\" />\n                                </SelectTrigger>\n                              </FormControl>\n                              <SelectContent>\n                                <SelectItem value=\"low\">Low - General inquiry</SelectItem>\n                                <SelectItem value=\"medium\">Medium - Course support</SelectItem>\n                                <SelectItem value=\"high\">High - Technical issue</SelectItem>\n                                <SelectItem value=\"urgent\">Urgent - Cannot access platform</SelectItem>\n                              </SelectContent>\n                            </Select>\n                            <FormMessage />\n                          </FormItem>\n                        )}\n                      />\n                    </div>\n\n                    <FormField\n                      control={form.control}\n                      name=\"message\"\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>Message</FormLabel>\n                          <FormControl>\n                            <Textarea \n                              placeholder=\"Please describe your question or issue in detail. Include any error messages or steps you've already tried.\"\n                              className=\"min-h-[120px]\"\n                              {...field}\n                              data-testid=\"textarea-contact-message\"\n                            />\n                          </FormControl>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n\n                    <div className=\"bg-blue-50 p-4 rounded-lg\">\n                      <p className=\"text-sm text-blue-800\">\n                        <strong>Response Time:</strong> We typically respond within 24 hours during business days. \n                        For urgent technical issues affecting your learning, please call our support line.\n                      </p>\n                    </div>\n\n                    <Button \n                      type=\"submit\" \n                      disabled={isSubmitting}\n                      className=\"w-full bg-blue-600 hover:bg-blue-700 text-white py-3 text-lg font-semibold\"\n                      data-testid=\"button-send-message\"\n                    >\n                      {isSubmitting ? \"Sending Message...\" : \"Send Message\"}\n                    </Button>\n                  </form>\n                </Form>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n\n        {/* Additional Information */}\n        <div className=\"mt-16 text-center\">\n          <div className=\"bg-white rounded-lg p-8 shadow-sm border border-slate-200\">\n            <h3 className=\"text-xl font-semibold text-slate-900 mb-4\">\n              Professional Diving Education Support\n            </h3>\n            <p className=\"text-slate-600 max-w-4xl mx-auto\">\n              Our support team consists of qualified diving professionals and technical experts \n              who understand both the educational content and platform functionality. Whether you need \n              help with course material, technical issues, or have questions about commercial diving \n              certification, we're here to support your professional development journey.\n            </p>\n          </div>\n        </div>\n      </main>\n\n      <Footer />\n    </div>\n  );\n}","size_bytes":14379},"client/src/pages/landing.tsx":{"content":"import { Link } from \"wouter\";\nimport { CheckCircle, Clock, BookOpen, Brain, BarChart3, Mic, ChevronRight, Star, Users, Trophy, Shield } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport Footer from \"@/components/footer\";\nimport LauraAssistant from \"@/components/laura-assistant\";\nimport diverWellLogo from \"@assets/DIVER_WELL_TRAINING-500x500-rbg-preview_1756088331820.png\";\n\nexport default function Landing() {\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-white to-slate-50\">\n      {/* Header */}\n      <nav className=\"bg-white/80 backdrop-blur-md border-b border-slate-200 sticky top-0 z-50\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex justify-between items-center h-16\">\n            <div className=\"flex items-center space-x-3\">\n              <img \n                src={diverWellLogo} \n                alt=\"Professional Diver - Diver Well Training\" \n                className=\"w-12 h-12 rounded-lg\"\n              />\n              <div>\n                <div className=\"text-xl font-bold text-slate-900\">Professional Diver</div>\n                <div className=\"text-xs text-slate-500\">Diver Well Training</div>\n              </div>\n            </div>\n            <div className=\"flex items-center space-x-4\">\n              {/* Clean sales page - no navigation links */}\n            </div>\n          </div>\n        </div>\n      </nav>\n\n      {/* Hero Section */}\n      <section className=\"px-4 sm:px-6 lg:px-8 py-16 lg:py-24\">\n        <div className=\"max-w-7xl mx-auto\">\n          <div className=\"text-center max-w-4xl mx-auto\">\n            <h1 className=\"text-4xl sm:text-5xl lg:text-6xl font-bold text-slate-900 mb-6\">\n              Master Commercial Diving \n              <span className=\"text-transparent bg-clip-text bg-gradient-to-r from-blue-600 to-blue-800\"> Certification Exams</span>\n            </h1>\n            <p className=\"text-xl text-slate-600 mb-8 leading-relaxed\">\n              Professional diving exam preparation platform with comprehensive practice tests, AI-powered tutors, \n              timed mock exams, and adaptive learning to ace your certification exams at certified diving schools.\n            </p>\n            \n            {/* CTA Buttons */}\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center items-center mb-12\">\n              <Link href=\"/trial-signup\">\n                <Button \n                  size=\"lg\" \n                  className=\"bg-gradient-to-r from-blue-600 to-blue-700 hover:from-blue-700 hover:to-blue-800 text-white px-8 py-3 text-lg font-semibold shadow-lg hover:shadow-xl transition-all\"\n                  data-testid=\"button-start-free-trial\"\n                >\n                  <Clock className=\"w-5 h-5 mr-2\" />\n                  Start 24-Hour Free Trial\n                </Button>\n              </Link>\n              <p className=\"text-sm text-slate-500\">No credit card required • Full platform access</p>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Features Grid */}\n      <section className=\"px-4 sm:px-6 lg:px-8 py-16 bg-white\">\n        <div className=\"max-w-7xl mx-auto\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-3xl font-bold text-slate-900 mb-4\">\n              Complete Professional Diving Exam Preparation\n            </h2>\n            <p className=\"text-lg text-slate-600 max-w-3xl mx-auto\">\n              From NDT inspection to emergency medical response, prepare for all commercial diving certification exams with our comprehensive practice platform.\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n            {/* Feature Cards */}\n            <Card className=\"border-0 shadow-lg hover:shadow-xl transition-all bg-gradient-to-br from-blue-50 to-white\">\n              <CardHeader>\n                <div className=\"w-12 h-12 bg-blue-100 rounded-lg flex items-center justify-center mb-4\">\n                  <BookOpen className=\"w-6 h-6 text-blue-600\" />\n                </div>\n                <CardTitle className=\"text-slate-900\">Written Exams + Voice</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <p className=\"text-slate-600\">\n                  Practice professional written examinations with voice-to-text dictation. Master essay questions with authentic exam conditions.\n                </p>\n              </CardContent>\n            </Card>\n\n            <Card className=\"border-0 shadow-lg hover:shadow-xl transition-all bg-gradient-to-br from-green-50 to-white\">\n              <CardHeader>\n                <div className=\"w-12 h-12 bg-green-100 rounded-lg flex items-center justify-center mb-4\">\n                  <Trophy className=\"w-6 h-6 text-green-600\" />\n                </div>\n                <CardTitle className=\"text-slate-900\">Timed Mock Exams</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <p className=\"text-slate-600\">\n                  Practice with authentic timed mock exams for all commercial diving levels with performance analytics and adaptive learning.\n                </p>\n              </CardContent>\n            </Card>\n\n            <Card className=\"border-0 shadow-lg hover:shadow-xl transition-all bg-gradient-to-br from-purple-50 to-white\">\n              <CardHeader>\n                <div className=\"w-12 h-12 bg-purple-100 rounded-lg flex items-center justify-center mb-4\">\n                  <Brain className=\"w-6 h-6 text-purple-600\" />\n                </div>\n                <CardTitle className=\"text-slate-900\">AI-Powered Learning</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <p className=\"text-slate-600\">\n                  Instant detailed explanations with AI tutors plus spaced repetition algorithm for effective exam preparation and knowledge retention.\n                </p>\n              </CardContent>\n            </Card>\n\n            <Card className=\"border-0 shadow-lg hover:shadow-xl transition-all bg-gradient-to-br from-orange-50 to-white\">\n              <CardHeader>\n                <div className=\"w-12 h-12 bg-orange-100 rounded-lg flex items-center justify-center mb-4\">\n                  <Shield className=\"w-6 h-6 text-orange-600\" />\n                </div>\n                <CardTitle className=\"text-slate-900\">All Commercial Levels</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <p className=\"text-slate-600\">\n                  Complete coverage of NDT inspection, commercial dive supervision, emergency medical response, and safety protocols.\n                </p>\n              </CardContent>\n            </Card>\n\n            <Card className=\"border-0 shadow-lg hover:shadow-xl transition-all bg-gradient-to-br from-red-50 to-white\">\n              <CardHeader>\n                <div className=\"w-12 h-12 bg-red-100 rounded-lg flex items-center justify-center mb-4\">\n                  <BarChart3 className=\"w-6 h-6 text-red-600\" />\n                </div>\n                <CardTitle className=\"text-slate-900\">Advanced Analytics</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <p className=\"text-slate-600\">\n                  Comprehensive progress tracking across topics, difficulty levels, and exam formats. Identify weak areas effectively.\n                </p>\n              </CardContent>\n            </Card>\n\n            <Card className=\"border-0 shadow-lg hover:shadow-xl transition-all bg-gradient-to-br from-cyan-50 to-white\">\n              <CardHeader>\n                <div className=\"w-12 h-12 bg-cyan-100 rounded-lg flex items-center justify-center mb-4\">\n                  <Mic className=\"w-6 h-6 text-cyan-600\" />\n                </div>\n                <CardTitle className=\"text-slate-900\">Voice Technology</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <p className=\"text-slate-600\">\n                  Professional speech-to-text recording for written answers. Perfect for diving professionals who prefer verbal communication.\n                </p>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      </section>\n\n      {/* Free Trial CTA */}\n      <section className=\"px-4 sm:px-6 lg:px-8 py-16 bg-gradient-to-r from-blue-600 to-blue-800\">\n        <div className=\"max-w-4xl mx-auto text-center\">\n          <h2 className=\"text-3xl font-bold text-white mb-4\">\n            🎯 Start Your 24-Hour Free Trial\n          </h2>\n          <p className=\"text-xl text-blue-100 mb-8\">\n            Experience full platform access • All exam formats • No credit card required\n          </p>\n          \n          <Link href=\"/trial-signup\">\n            <Button \n              size=\"lg\" \n              className=\"bg-white text-blue-600 hover:bg-blue-50 px-8 py-3 text-lg font-semibold shadow-lg hover:shadow-xl transition-all mb-8\"\n              data-testid=\"button-start-trial-cta\"\n            >\n              Start Free Trial\n            </Button>\n          </Link>\n          \n          <p className=\"text-blue-200 text-sm\">\n            Access all features for 24 hours, then choose your plan\n          </p>\n        </div>\n      </section>\n\n      {/* Pricing Plans */}\n      <section className=\"px-4 sm:px-6 lg:px-8 py-16 bg-slate-50\">\n        <div className=\"max-w-6xl mx-auto\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl font-bold text-slate-900 mb-4\">Choose Your Plan</h2>\n            <p className=\"text-lg text-slate-600\">Professional diving education that fits your learning schedule</p>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8 max-w-4xl mx-auto\">\n            {/* Monthly Plan */}\n            <Card className=\"border-2 border-slate-200 hover:border-blue-300 transition-all shadow-lg\">\n              <CardHeader className=\"text-center pb-6\">\n                <CardTitle className=\"text-2xl font-bold text-slate-900\">Monthly Subscription</CardTitle>\n                <div className=\"text-4xl font-bold text-blue-600 mt-4\">$25/Month</div>\n                <p className=\"text-slate-600 mt-2\">Monthly billing • Full platform access • Cancel anytime</p>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                <ul className=\"space-y-3\">\n                  {[\n                    \"Multiple Choice + Written Exams\",\n                    \"Voice Dictation Technology\", \n                    \"500+ Professional Questions\",\n                    \"AI Explanations & Tutors\",\n                    \"All Commercial Diving Levels\",\n                    \"Progress Analytics\",\n                    \"Spaced Repetition Learning\"\n                  ].map((feature, index) => (\n                    <li key={index} className=\"flex items-center space-x-3\">\n                      <CheckCircle className=\"w-5 h-5 text-green-500 flex-shrink-0\" />\n                      <span className=\"text-slate-700\">{feature}</span>\n                    </li>\n                  ))}\n                </ul>\n                <a \n                  href=\"https://buy.stripe.com/8x24gzg9S2gG7WX4XugMw03\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  className=\"block\"\n                >\n                  <Button className=\"w-full bg-blue-600 hover:bg-blue-700 text-white py-3 text-lg font-semibold\" data-testid=\"button-subscribe-monthly\">\n                    Subscribe Monthly\n                  </Button>\n                </a>\n              </CardContent>\n            </Card>\n\n            {/* Yearly Plan */}\n            <Card className=\"border-2 border-blue-300 bg-gradient-to-br from-blue-50 to-white relative shadow-xl\">\n              <div className=\"absolute -top-4 left-1/2 transform -translate-x-1/2\">\n                <div className=\"bg-gradient-to-r from-blue-600 to-blue-700 text-white px-4 py-1 rounded-full text-sm font-semibold\">\n                  BEST VALUE\n                </div>\n              </div>\n              <CardHeader className=\"text-center pb-6 pt-8\">\n                <CardTitle className=\"text-2xl font-bold text-slate-900\">Yearly Subscription</CardTitle>\n                <div className=\"text-4xl font-bold text-blue-600 mt-4\">$250/Year</div>\n                <p className=\"text-slate-600 mt-2\">Save over 15% • Full platform access • All exam formats included</p>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                <ul className=\"space-y-3\">\n                  {[\n                    \"Multiple Choice + Written Exams\",\n                    \"Voice Dictation Technology\", \n                    \"500+ Professional Questions\",\n                    \"AI Explanations & Tutors\",\n                    \"All Commercial Diving Levels\",\n                    \"Priority Support\",\n                    \"Advanced Analytics Dashboard\"\n                  ].map((feature, index) => (\n                    <li key={index} className=\"flex items-center space-x-3\">\n                      <CheckCircle className=\"w-5 h-5 text-green-500 flex-shrink-0\" />\n                      <span className=\"text-slate-700\">{feature}</span>\n                    </li>\n                  ))}\n                </ul>\n                <a \n                  href=\"https://buy.stripe.com/eVq8wP1eY2gG4KLblSgMw04\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  className=\"block\"\n                >\n                  <Button className=\"w-full bg-gradient-to-r from-blue-600 to-blue-700 hover:from-blue-700 hover:to-blue-800 text-white py-3 text-lg font-semibold\" data-testid=\"button-subscribe-yearly\">\n                    Subscribe Yearly\n                  </Button>\n                </a>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      </section>\n\n      {/* Already Purchased */}\n      <section className=\"px-4 sm:px-6 lg:px-8 py-12 bg-white border-t border-slate-200\">\n        <div className=\"max-w-4xl mx-auto text-center\">\n          <h3 className=\"text-xl font-semibold text-slate-900 mb-4\">Already Purchased?</h3>\n          <p className=\"text-slate-600 mb-6\">Access your study dashboard and continue your exam preparation journey</p>\n          <Link href=\"/login\">\n            <Button variant=\"outline\" className=\"border-blue-200 text-blue-600 hover:bg-blue-50\" data-testid=\"button-login-existing\">\n              <ChevronRight className=\"w-4 h-4 mr-2\" />\n              Login to Your Account\n            </Button>\n          </Link>\n        </div>\n      </section>\n\n      {/* Footer */}\n      <Footer />\n      \n      {/* Laura Assistant Chat Bubble */}\n      <LauraAssistant />\n    </div>\n  );\n}","size_bytes":14850},"client/src/pages/privacy.tsx":{"content":"import { Link } from \"wouter\";\n\nexport default function Privacy() {\n  const effectiveDate = \"24 August 2025\";\n  const orgEmail = \"privacy@diverwell.app\";\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <nav className=\"bg-white border-b border-gray-200 sticky top-0 z-50\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex justify-between items-center h-16\">\n            <Link href=\"/\">\n              <a className=\"text-blue-600 hover:text-blue-700 font-medium\">\n                ← Back to Platform\n              </a>\n            </Link>\n          </div>\n        </div>\n      </nav>\n\n      <main className=\"mx-auto max-w-4xl px-6 py-10\">\n        {/* Header */}\n        <header className=\"mb-8 flex items-start justify-between gap-4\">\n          <div>\n            <h1 className=\"text-4xl font-bold text-slate-900\">Privacy Policy</h1>\n            <p className=\"mt-2 text-lg text-slate-600\">\n              Effective date: {effectiveDate}\n            </p>\n          </div>\n          <div className=\"no-print\">\n            <button\n              onClick={() => window.print()}\n              className=\"inline-flex items-center rounded-lg border px-4 py-2 text-sm hover:bg-slate-50 font-medium\"\n              aria-label=\"Print this page\"\n            >\n              Print Policy\n            </button>\n          </div>\n        </header>\n\n        {/* Policy body */}\n        <article className=\"prose prose-slate max-w-none prose-headings:font-semibold prose-a:text-blue-600 prose-a:hover:text-blue-700\">\n          <p className=\"text-lg leading-relaxed\">\n            Professional Diver - Diver Well Training (the \"Platform\", \"we\", \"our\", or \"us\") provides\n            brand‑neutral training and revision tools for commercial diving\n            professionals. This Privacy Policy explains how we collect, use,\n            disclose, and safeguard personal information when you use the\n            Platform, and describes your choices and rights.\n          </p>\n          \n          <div className=\"bg-blue-50 border-l-4 border-blue-400 p-6 my-8\">\n            <p className=\"font-semibold text-blue-900 mb-2\">Brand neutrality & original content.</p>\n            <p className=\"text-blue-800\">\n              Professional Diver - Diver Well Training is <strong>not affiliated with</strong> and <strong>does not represent</strong> any\n              certification body or brand (e.g., industry associations or\n              regulators). All learning materials, multiple‑choice questions, and\n              explanations are <strong>original and re‑worded</strong> to remain\n              brand‑neutral while covering comparable knowledge areas. We do not\n              process or display third‑party marks, logos, or proprietary content.\n            </p>\n          </div>\n\n          <h2 id=\"who-we-are\" className=\"text-2xl font-bold text-slate-900 mt-8 mb-4\">1) Who we are</h2>\n          <p>\n            <strong>Controller:</strong> Professional Diver - Diver Well Training (UK)\n            <br />\n            <strong>Contact:</strong> <a href={`mailto:${orgEmail}`}>{orgEmail}</a>\n          </p>\n          <p>\n            If you are in the UK/EEA, we process personal data in accordance with\n            UK GDPR / EU GDPR and the Data Protection Act 2018. If you are outside\n            the UK/EEA, we apply comparable privacy safeguards and your rights may\n            vary per local law.\n          </p>\n\n          <h2 id=\"what-we-collect\" className=\"text-2xl font-bold text-slate-900 mt-8 mb-4\">2) What information we collect</h2>\n          <ul className=\"space-y-2\">\n            <li>\n              <strong>Account & access:</strong> email address; authentication artifacts\n              (e.g., session tokens, magic‑link verification tokens).\n            </li>\n            <li>\n              <strong>Learning activity:</strong> tracks/lessons viewed, quizzes taken,\n              scores, attempts, completion status, timestamps; admin/editor\n              actions with user/time attribution.\n            </li>\n            <li>\n              <strong>Technical & security:</strong> IP address, device/browser info,\n              basic diagnostic logs; session and CSRF cookies.\n            </li>\n            <li>\n              <strong>Support & feedback:</strong> messages you send us and related contact\n              details.\n            </li>\n          </ul>\n          <p>\n            We do <strong>not</strong> intentionally collect special category data and we do\n            <strong> not</strong> profile for advertising.\n          </p>\n\n          <h2 id=\"how-we-use\" className=\"text-2xl font-bold text-slate-900 mt-8 mb-4\">3) How we use information (purposes & legal bases)</h2>\n          <ul className=\"space-y-2\">\n            <li>\n              <strong>Provide the service</strong> (accounts, authentication, lessons,\n              quizzes, progress). <em>Legal basis: Contract.</em>\n            </li>\n            <li>\n              <strong>Secure & maintain</strong> the Platform (logging, abuse prevention,\n              uptime). <em>Legal basis: Legitimate Interests.</em>\n            </li>\n            <li>\n              <strong>Improve content & UX</strong> (aggregated, anonymised analytics;\n              quality checks on brand‑neutral coverage). <em>Legal basis:\n              Legitimate Interests.</em>\n            </li>\n            <li>\n              <strong>Communicate</strong> (service messages, account notices; optional\n              updates). <em>Legal basis: Contract / Consent.</em>\n            </li>\n            <li>\n              <strong>Comply with law.</strong> <em>Legal basis: Legal Obligation.</em>\n            </li>\n          </ul>\n          <p>We do not use your personal information for behavioural advertising.</p>\n\n          <h2 id=\"cookies\" className=\"text-2xl font-bold text-slate-900 mt-8 mb-4\">4) Cookies & similar technologies</h2>\n          <p>\n            We use strictly necessary cookies for authentication (session) and\n            security (e.g., CSRF). Optional analytics cookies, if any, are\n            disabled by default and presented with clear consent choices.\n          </p>\n\n          <h2 id=\"sharing\" className=\"text-2xl font-bold text-slate-900 mt-8 mb-4\">5) Data sharing & processors</h2>\n          <p>\n            We share personal data only with service providers who help us run the\n            Platform under data‑processing agreements, such as hosting,\n            email‑delivery, and error monitoring. We do not sell personal\n            information.\n          </p>\n\n          <h2 id=\"transfers\" className=\"text-2xl font-bold text-slate-900 mt-8 mb-4\">6) International transfers</h2>\n          <p>\n            Our processors may store data in the UK, EEA, and/or other\n            countries with adequate safeguards. Where required, we rely on\n            Standard Contractual Clauses or equivalent mechanisms.\n          </p>\n\n          <h2 id=\"retention\" className=\"text-2xl font-bold text-slate-900 mt-8 mb-4\">7) Data retention</h2>\n          <ul className=\"space-y-2\">\n            <li>\n              <strong>Account & learning records:</strong> retained while your account is\n              active; deleted or anonymised within 30–90 days of confirmed\n              deletion request.\n            </li>\n            <li>\n              <strong>Operational logs:</strong> typically ≤ 30 days for security and\n              troubleshooting.\n            </li>\n            <li>\n              <strong>Legal/financial records:</strong> retained as required by law.\n            </li>\n          </ul>\n\n          <h2 id=\"rights\" className=\"text-2xl font-bold text-slate-900 mt-8 mb-4\">8) Your rights</h2>\n          <p>\n            Depending on your location, you may have the right to access, rectify,\n            erase, restrict, object, or port your data, and to withdraw consent\n            where applicable. To exercise rights, email\n            {\" \"}\n            <a href={`mailto:${orgEmail}`}>{orgEmail}</a>.\n          </p>\n\n          <h2 id=\"children\" className=\"text-2xl font-bold text-slate-900 mt-8 mb-4\">9) Children</h2>\n          <p>\n            The Platform is intended for users 13+ (or the age required by your\n            jurisdiction). We do not knowingly collect personal data from children\n            under the applicable age.\n          </p>\n\n          <h2 id=\"security\" className=\"text-2xl font-bold text-slate-900 mt-8 mb-4\">10) Security</h2>\n          <p>\n            We maintain administrative, technical, and organisational measures\n            appropriate to risk (encryption in transit, access controls,\n            least‑privilege access, audit logging, secure credential management).\n            No system is 100% secure; we will notify users/authorities of\n            significant incidents as required by law.\n          </p>\n\n          <h2 id=\"brand-neutrality\" className=\"text-2xl font-bold text-slate-900 mt-8 mb-4\">11) Brand‑neutral content & intellectual property</h2>\n          <ul className=\"space-y-2\">\n            <li>\n              <strong>Brand neutrality.</strong> We vet materials to exclude third‑party\n              marks, logos, proprietary passages, or branded question banks. Our\n              content is re‑written to cover comparable knowledge domains without\n              reproducing protected text or implying endorsement.\n            </li>\n            <li>\n              <strong>Your inputs.</strong> If you submit suggestions/corrections, you\n              confirm you have rights to share them. We may use such inputs to\n              improve materials while maintaining neutrality.\n            </li>\n            <li>\n              <strong>Takedown.</strong> If you believe any content infringes rights or\n              includes unintended brand references, email\n              {\" \"}\n              <a href={`mailto:${orgEmail}`}>{orgEmail}</a> (subject: \"Content\n              Review\").\n            </li>\n          </ul>\n\n          <h2 id=\"third-parties\" className=\"text-2xl font-bold text-slate-900 mt-8 mb-4\">12) Third‑party links</h2>\n          <p>\n            The Platform may link to non‑affiliated sites. Their privacy practices\n            are their own; we encourage you to review their policies.\n          </p>\n\n          <h2 id=\"changes\" className=\"text-2xl font-bold text-slate-900 mt-8 mb-4\">13) Changes to this policy</h2>\n          <p>\n            We may update this policy to reflect operational, legal, or regulatory\n            changes. We will post the new version with an updated date and, where\n            appropriate, provide prominent notice.\n          </p>\n\n          <h2 id=\"contact\" className=\"text-2xl font-bold text-slate-900 mt-8 mb-4\">14) Contact</h2>\n          <p>\n            Questions or requests? Email {\" \"}\n            <a href={`mailto:${orgEmail}`}>{orgEmail}</a>.\n          </p>\n\n          <div className=\"border-t border-gray-200 pt-8 mt-8\">\n            <h3 className=\"text-xl font-semibold text-slate-900 mb-4\">Quick summary</h3>\n            <ul className=\"space-y-2\">\n              <li>• We only collect what we need: email for login, session cookies, quiz progress.</li>\n              <li>• No ads, no sale of data.</li>\n              <li>• Content is brand‑neutral and re‑worded—no third‑party marks.</li>\n              <li>• You control your data via access/deletion requests.</li>\n              <li>• We use reputable processors under contracts and safeguards.</li>\n            </ul>\n          </div>\n        </article>\n      </main>\n    </div>\n  );\n}","size_bytes":11607},"client/src/pages/trial-signup.tsx":{"content":"import { useState } from \"react\";\nimport { useMutation } from \"@tanstack/react-query\";\nimport { useLocation } from \"wouter\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { z } from \"zod\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { Clock, CheckCircle, ArrowLeft } from \"lucide-react\";\nimport { Link } from \"wouter\";\nimport officialLogo from \"@assets/DIVER_WELL_TRAINING-500x500-rbg-preview_1756117367176.png\";\n\nconst trialSignupSchema = z.object({\n  name: z.string().min(2, \"Name must be at least 2 characters\"),\n  email: z.string().email(\"Please enter a valid email address\"),\n});\n\ntype TrialSignupForm = z.infer<typeof trialSignupSchema>;\n\nexport default function TrialSignup() {\n  const [, setLocation] = useLocation();\n  const { toast } = useToast();\n  const [isSuccess, setIsSuccess] = useState(false);\n\n  const form = useForm<TrialSignupForm>({\n    resolver: zodResolver(trialSignupSchema),\n    defaultValues: {\n      name: \"\",\n      email: \"\",\n    },\n  });\n\n  const signupMutation = useMutation({\n    mutationFn: async (data: TrialSignupForm) => {\n      return apiRequest(\"POST\", \"/api/trial-signup\", data);\n    },\n    onSuccess: (data) => {\n      setIsSuccess(true);\n      toast({\n        title: \"Welcome to Professional Diver!\",\n        description: \"Your 24-hour free trial has started. Redirecting to dashboard...\",\n      });\n      // Redirect to dashboard after 2 seconds\n      setTimeout(() => {\n        setLocation(\"/dashboard\");\n      }, 2000);\n    },\n    onError: (error: any) => {\n      toast({\n        title: \"Signup Failed\",\n        description: error.message || \"Please try again or contact support.\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const handleSubmit = (data: TrialSignupForm) => {\n    signupMutation.mutate(data);\n  };\n\n  if (isSuccess) {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-white to-slate-50 flex items-center justify-center px-4\">\n        <Card className=\"w-full max-w-md text-center\">\n          <CardContent className=\"pt-6\">\n            <div className=\"w-16 h-16 bg-green-100 rounded-full flex items-center justify-center mx-auto mb-6\">\n              <CheckCircle className=\"w-8 h-8 text-green-600\" />\n            </div>\n            <h2 className=\"text-2xl font-bold text-slate-900 mb-2\">Welcome to Professional Diver!</h2>\n            <p className=\"text-slate-600 mb-4\">\n              Your 24-hour free trial has started successfully.\n            </p>\n            <p className=\"text-sm text-slate-500\">\n              Redirecting to your dashboard...\n            </p>\n          </CardContent>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-white to-slate-50\">\n      {/* Header */}\n      <nav className=\"bg-white/80 backdrop-blur-md border-b border-slate-200\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex justify-between items-center h-16\">\n            <Link href=\"/\">\n              <a className=\"flex items-center space-x-3\" data-testid=\"link-home\">\n                <ArrowLeft className=\"w-5 h-5 text-slate-600\" />\n                <div className=\"flex items-center space-x-2\">\n                  <img \n                    src={officialLogo}\n                    alt=\"Professional Diver - Diver Well Training\"\n                    className=\"w-8 h-8 rounded-lg\"\n                  />\n                  <span className=\"text-lg font-bold text-slate-900\">Professional Diver</span>\n                </div>\n              </a>\n            </Link>\n            <div className=\"text-sm text-slate-600\">Already have an account? \n              <Link href=\"/login\">\n                <a className=\"text-blue-600 hover:text-blue-700 ml-1 font-medium\" data-testid=\"link-login\">\n                  Sign in\n                </a>\n              </Link>\n            </div>\n          </div>\n        </div>\n      </nav>\n\n      {/* Main Content */}\n      <div className=\"flex items-center justify-center px-4 py-16\">\n        <div className=\"w-full max-w-md\">\n          <Card className=\"shadow-xl border-0 bg-white/80 backdrop-blur-sm\">\n            <CardHeader className=\"text-center pb-6\">\n              <div className=\"w-16 h-16 bg-blue-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n                <Clock className=\"w-8 h-8 text-blue-600\" />\n              </div>\n              <CardTitle className=\"text-2xl font-bold text-slate-900\">\n                Start Your 24-Hour Free Trial\n              </CardTitle>\n              <p className=\"text-slate-600 mt-2\">\n                Get instant access to all professional diving courses, mock exams, and AI tutors.\n              </p>\n            </CardHeader>\n            \n            <CardContent>\n              <Form {...form}>\n                <form onSubmit={form.handleSubmit(handleSubmit)} className=\"space-y-6\">\n                  <FormField\n                    control={form.control}\n                    name=\"name\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel className=\"text-slate-700 font-medium\">Full Name</FormLabel>\n                        <FormControl>\n                          <Input \n                            placeholder=\"Enter your full name\" \n                            className=\"border-slate-300 focus:border-blue-500 focus:ring-blue-500\"\n                            data-testid=\"input-name\"\n                            {...field} \n                          />\n                        </FormControl>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n                  \n                  <FormField\n                    control={form.control}\n                    name=\"email\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel className=\"text-slate-700 font-medium\">Email Address</FormLabel>\n                        <FormControl>\n                          <Input \n                            type=\"email\" \n                            placeholder=\"Enter your email address\"\n                            className=\"border-slate-300 focus:border-blue-500 focus:ring-blue-500\"\n                            data-testid=\"input-email\"\n                            {...field} \n                          />\n                        </FormControl>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n\n                  <Button \n                    type=\"submit\" \n                    disabled={signupMutation.isPending}\n                    className=\"w-full bg-gradient-to-r from-blue-600 to-blue-700 hover:from-blue-700 hover:to-blue-800 text-white py-3 text-lg font-semibold\"\n                    data-testid=\"button-start-trial\"\n                  >\n                    {signupMutation.isPending ? \"Starting Trial...\" : \"Start My Free Trial\"}\n                  </Button>\n                </form>\n              </Form>\n\n              {/* Trial Benefits */}\n              <div className=\"mt-8 pt-6 border-t border-slate-200\">\n                <h4 className=\"font-semibold text-slate-900 mb-4\">What's included in your trial:</h4>\n                <ul className=\"space-y-2 text-sm text-slate-600\">\n                  {[\n                    \"Full access to all commercial diving courses\",\n                    \"Timed mock exams with detailed explanations\", \n                    \"AI-powered tutors and instant feedback\",\n                    \"Voice dictation for written examinations\",\n                    \"Progress analytics and performance tracking\",\n                    \"All NDT inspection and emergency protocols\"\n                  ].map((benefit, index) => (\n                    <li key={index} className=\"flex items-center space-x-2\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 flex-shrink-0\" />\n                      <span>{benefit}</span>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n\n              <div className=\"mt-6 p-4 bg-blue-50 rounded-lg\">\n                <p className=\"text-xs text-blue-800 text-center\">\n                  <strong>No credit card required.</strong> After your trial, choose a plan that works for you.\n                </p>\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":8853},"server/email-marketing.ts":{"content":"// Email marketing utilities for Professional Diver - Diver Well Training\n// This module handles support tickets, Google review requests, and user communications\n\ninterface EmailTemplate {\n  subject: string;\n  html: string;\n  text: string;\n}\n\ninterface SupportTicket {\n  userId: string;\n  email: string;\n  name: string;\n  subject: string;\n  message: string;\n  priority: 'low' | 'medium' | 'high' | 'urgent';\n  createdAt: Date;\n}\n\ninterface ReviewRequest {\n  userId: string;\n  email: string;\n  name: string;\n  completedCourses: number;\n  avgScore: number;\n}\n\nexport class EmailMarketing {\n  private fromEmail = \"noreply@diverwell.app\";\n  private supportEmail = \"support@diverwell.app\";\n\n  // Support ticket templates\n  private getTicketConfirmationTemplate(ticket: SupportTicket): EmailTemplate {\n    return {\n      subject: `Support Ticket Confirmation - ${ticket.subject}`,\n      html: `\n        <!DOCTYPE html>\n        <html>\n        <head>\n          <meta charset=\"utf-8\">\n          <title>Support Ticket Confirmation</title>\n        </head>\n        <body style=\"font-family: Arial, sans-serif; line-height: 1.6; color: #333;\">\n          <div style=\"max-width: 600px; margin: 0 auto; padding: 20px;\">\n            <div style=\"text-align: center; margin-bottom: 30px;\">\n              <h1 style=\"color: #1e40af;\">Professional Diver</h1>\n              <p style=\"color: #64748b;\">Diver Well Training</p>\n            </div>\n            \n            <h2 style=\"color: #1e40af;\">Support Ticket Received</h2>\n            \n            <p>Hello ${ticket.name},</p>\n            \n            <p>We've received your support request and will respond within 24 hours. Here are the details:</p>\n            \n            <div style=\"background: #f8fafc; padding: 20px; border-radius: 8px; margin: 20px 0;\">\n              <p><strong>Subject:</strong> ${ticket.subject}</p>\n              <p><strong>Priority:</strong> ${ticket.priority.toUpperCase()}</p>\n              <p><strong>Submitted:</strong> ${ticket.createdAt.toLocaleDateString()}</p>\n              <p><strong>Message:</strong></p>\n              <p style=\"background: white; padding: 15px; border-radius: 4px;\">${ticket.message}</p>\n            </div>\n            \n            <p>Our diving education specialists are reviewing your request. For urgent matters, please contact us directly at ${this.supportEmail}.</p>\n            \n            <div style=\"margin-top: 30px; padding-top: 20px; border-top: 1px solid #e2e8f0; text-align: center; color: #64748b; font-size: 14px;\">\n              <p>Professional Diver - Diver Well Training</p>\n              <p>Brand-neutral commercial diving education</p>\n            </div>\n          </div>\n        </body>\n        </html>\n      `,\n      text: `\n        Professional Diver - Diver Well Training\n        Support Ticket Confirmation\n        \n        Hello ${ticket.name},\n        \n        We've received your support request and will respond within 24 hours.\n        \n        Subject: ${ticket.subject}\n        Priority: ${ticket.priority.toUpperCase()}\n        Submitted: ${ticket.createdAt.toLocaleDateString()}\n        \n        Message:\n        ${ticket.message}\n        \n        Our diving education specialists are reviewing your request.\n        For urgent matters, contact: ${this.supportEmail}\n        \n        Best regards,\n        Professional Diver - Diver Well Training Team\n      `\n    };\n  }\n\n  // Google review request template\n  private getReviewRequestTemplate(request: ReviewRequest): EmailTemplate {\n    return {\n      subject: \"Share Your Professional Diver Experience 🌟\",\n      html: `\n        <!DOCTYPE html>\n        <html>\n        <head>\n          <meta charset=\"utf-8\">\n          <title>Review Request</title>\n        </head>\n        <body style=\"font-family: Arial, sans-serif; line-height: 1.6; color: #333;\">\n          <div style=\"max-width: 600px; margin: 0 auto; padding: 20px;\">\n            <div style=\"text-align: center; margin-bottom: 30px;\">\n              <h1 style=\"color: #1e40af;\">Professional Diver</h1>\n              <p style=\"color: #64748b;\">Diver Well Training</p>\n            </div>\n            \n            <h2 style=\"color: #1e40af;\">How's Your Learning Experience?</h2>\n            \n            <p>Hello ${request.name},</p>\n            \n            <p>Congratulations on completing ${request.completedCourses} courses with an average score of ${request.avgScore}%! 🎉</p>\n            \n            <p>We'd love to hear about your experience with our brand-neutral commercial diving education platform. Your feedback helps other diving professionals discover quality training resources.</p>\n            \n            <div style=\"text-align: center; margin: 30px 0;\">\n              <a href=\"https://g.page/r/professional-diver-reviews\" \n                 style=\"display: inline-block; background: #1e40af; color: white; padding: 15px 30px; text-decoration: none; border-radius: 8px; font-weight: bold;\">\n                Leave a Google Review\n              </a>\n            </div>\n            \n            <div style=\"background: #f0f9ff; padding: 20px; border-radius: 8px; margin: 20px 0;\">\n              <h3 style=\"color: #0369a1; margin-top: 0;\">Your Progress:</h3>\n              <ul style=\"margin: 0;\">\n                <li>Courses Completed: ${request.completedCourses}</li>\n                <li>Average Score: ${request.avgScore}%</li>\n                <li>Professional diving knowledge gained through brand-neutral content</li>\n              </ul>\n            </div>\n            \n            <p>Thank you for choosing Professional Diver for your commercial diving education. Your success in the industry is our priority!</p>\n            \n            <p style=\"font-size: 14px; color: #64748b;\">\n              If you have any concerns or suggestions, please reply to this email or contact our support team at ${this.supportEmail}.\n            </p>\n            \n            <div style=\"margin-top: 30px; padding-top: 20px; border-top: 1px solid #e2e8f0; text-align: center; color: #64748b; font-size: 14px;\">\n              <p>Professional Diver - Diver Well Training</p>\n              <p>Brand-neutral commercial diving education</p>\n            </div>\n          </div>\n        </body>\n        </html>\n      `,\n      text: `\n        Professional Diver - Diver Well Training\n        \n        Hello ${request.name},\n        \n        Congratulations on completing ${request.completedCourses} courses with an average score of ${request.avgScore}%!\n        \n        We'd love to hear about your experience with our brand-neutral commercial diving education platform.\n        \n        Please consider leaving a Google review: https://g.page/r/professional-diver-reviews\n        \n        Your Progress:\n        - Courses Completed: ${request.completedCourses}\n        - Average Score: ${request.avgScore}%\n        - Professional diving knowledge gained through brand-neutral content\n        \n        Thank you for choosing Professional Diver for your commercial diving education.\n        \n        Best regards,\n        Professional Diver - Diver Well Training Team\n      `\n    };\n  }\n\n  // Welcome email for new trial users\n  private getWelcomeTrialTemplate(user: { name: string; email: string }): EmailTemplate {\n    return {\n      subject: \"Welcome to Professional Diver - Your 24-Hour Trial Starts Now! 🤿\",\n      html: `\n        <!DOCTYPE html>\n        <html>\n        <head>\n          <meta charset=\"utf-8\">\n          <title>Welcome to Professional Diver</title>\n        </head>\n        <body style=\"font-family: Arial, sans-serif; line-height: 1.6; color: #333;\">\n          <div style=\"max-width: 600px; margin: 0 auto; padding: 20px;\">\n            <div style=\"text-align: center; margin-bottom: 30px;\">\n              <h1 style=\"color: #1e40af;\">Professional Diver</h1>\n              <p style=\"color: #64748b;\">Diver Well Training</p>\n            </div>\n            \n            <h2 style=\"color: #1e40af;\">Welcome to Professional Diving Education!</h2>\n            \n            <p>Hello ${user.name},</p>\n            \n            <p>Welcome to Professional Diver - Diver Well Training! Your 24-hour free trial has begun, giving you full access to our brand-neutral commercial diving education platform.</p>\n            \n            <div style=\"background: #f0f9ff; padding: 20px; border-radius: 8px; margin: 20px 0;\">\n              <h3 style=\"color: #0369a1; margin-top: 0;\">What You Can Access:</h3>\n              <ul style=\"margin: 0;\">\n                <li>📚 Comprehensive learning tracks</li>\n                <li>🧠 AI-powered diving consultant</li>\n                <li>📝 Timed mock examinations</li>\n                <li>📊 Progress tracking and analytics</li>\n                <li>🎯 Spaced repetition learning system</li>\n              </ul>\n            </div>\n            \n            <div style=\"text-align: center; margin: 30px 0;\">\n              <a href=\"https://professional-diver.diverwell.app/dashboard\" \n                 style=\"display: inline-block; background: #1e40af; color: white; padding: 15px 30px; text-decoration: none; border-radius: 8px; font-weight: bold;\">\n                Start Learning Now\n              </a>\n            </div>\n            \n            <p>Need help getting started? Contact our support team at ${this.supportEmail} or use the AI Consultant built into the platform.</p>\n            \n            <div style=\"background: #fefce8; padding: 15px; border-radius: 8px; border-left: 4px solid #fbbf24;\">\n              <p style=\"margin: 0; font-weight: bold; color: #92400e;\">\n                🔒 Brand-Neutral Content: All our materials are original, reworded content that maintains educational quality while remaining independent of any certification bodies.\n              </p>\n            </div>\n            \n            <div style=\"margin-top: 30px; padding-top: 20px; border-top: 1px solid #e2e8f0; text-align: center; color: #64748b; font-size: 14px;\">\n              <p>Professional Diver - Diver Well Training</p>\n              <p>Commercial diving education that's compliant and congruent</p>\n            </div>\n          </div>\n        </body>\n        </html>\n      `,\n      text: `\n        Professional Diver - Diver Well Training\n        \n        Hello ${user.name},\n        \n        Welcome to Professional Diver! Your 24-hour free trial has begun.\n        \n        What You Can Access:\n        - Comprehensive learning tracks\n        - AI-powered diving consultant  \n        - Timed mock examinations\n        - Progress tracking and analytics\n        - Spaced repetition learning system\n        \n        Start learning: https://professional-diver.diverwell.app/dashboard\n        \n        Need help? Contact: ${this.supportEmail}\n        \n        All our content is brand-neutral, original, and educationally focused.\n        \n        Best regards,\n        Professional Diver - Diver Well Training Team\n      `\n    };\n  }\n\n  // Send support ticket confirmation\n  async sendTicketConfirmation(ticket: SupportTicket): Promise<boolean> {\n    try {\n      const template = this.getTicketConfirmationTemplate(ticket);\n      \n      // In a real implementation, this would integrate with SendGrid or similar service\n      console.log('Sending support ticket confirmation email:', {\n        to: ticket.email,\n        subject: template.subject,\n        priority: ticket.priority\n      });\n      \n      // Would also create internal ticket in support system\n      await this.createInternalTicket(ticket);\n      \n      return true;\n    } catch (error) {\n      console.error('Error sending support ticket confirmation:', error);\n      return false;\n    }\n  }\n\n  // Send review request\n  async sendReviewRequest(request: ReviewRequest): Promise<boolean> {\n    try {\n      const template = this.getReviewRequestTemplate(request);\n      \n      console.log('Sending review request email:', {\n        to: request.email,\n        subject: template.subject,\n        courses: request.completedCourses\n      });\n      \n      return true;\n    } catch (error) {\n      console.error('Error sending review request:', error);\n      return false;\n    }\n  }\n\n  // Send welcome trial email\n  async sendWelcomeTrialEmail(user: { name: string; email: string }): Promise<boolean> {\n    try {\n      const template = this.getWelcomeTrialTemplate(user);\n      \n      console.log('Sending welcome trial email:', {\n        to: user.email,\n        subject: template.subject\n      });\n      \n      return true;\n    } catch (error) {\n      console.error('Error sending welcome trial email:', error);\n      return false;\n    }\n  }\n\n  // Create internal support ticket\n  private async createInternalTicket(ticket: SupportTicket): Promise<void> {\n    // This would integrate with a ticketing system like Zendesk, Freshdesk, etc.\n    console.log('Creating internal support ticket:', {\n      id: `PDT-${Date.now()}`,\n      user: ticket.email,\n      subject: ticket.subject,\n      priority: ticket.priority,\n      message: ticket.message\n    });\n  }\n\n  // Trigger review request based on user progress\n  async checkAndRequestReview(userId: string): Promise<void> {\n    try {\n      // This would check user progress and send review request if criteria met\n      // Example criteria: completed 3+ courses, average score 80%+, no recent review request\n      \n      const mockUser = {\n        userId,\n        email: 'user@example.com',\n        name: 'Professional Diver',\n        completedCourses: 5,\n        avgScore: 87\n      };\n\n      if (mockUser.completedCourses >= 3 && mockUser.avgScore >= 80) {\n        await this.sendReviewRequest(mockUser);\n      }\n    } catch (error) {\n      console.error('Error checking review request criteria:', error);\n    }\n  }\n}\n\nexport const emailMarketing = new EmailMarketing();","size_bytes":13761},"client/src/pages/affiliate-dashboard.tsx":{"content":"import { useState } from \"react\";\nimport { useQuery, useMutation } from \"@tanstack/react-query\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { \n  Users, \n  DollarSign, \n  TrendingUp, \n  ExternalLink, \n  Copy, \n  Target\n} from \"lucide-react\";\nimport { Link } from \"wouter\";\nimport Footer from \"@/components/footer\";\nimport diverWellLogo from \"@assets/DIVER_WELL_TRAINING-500x500-rbg-preview_1756088331820.png\";\n\nexport default function AffiliateDashboard() {\n  const [copiedLink, setCopiedLink] = useState(false);\n  const { toast } = useToast();\n\n  // Fetch affiliate dashboard data\n  const { data: dashboardData, isLoading } = useQuery({\n    queryKey: ['/api/affiliate/dashboard'],\n    refetchInterval: 30000, // Refresh every 30 seconds\n  });\n\n  // Fetch affiliate leaderboard\n  const { data: leaderboard } = useQuery({\n    queryKey: ['/api/affiliate/leaderboard'],\n    refetchInterval: 60000, // Refresh every minute\n  });\n\n  const copyReferralLink = async () => {\n    if (dashboardData?.affiliate?.referralLink) {\n      await navigator.clipboard.writeText(dashboardData.affiliate.referralLink);\n      setCopiedLink(true);\n      toast({\n        title: \"Copied!\",\n        description: \"Referral link copied to clipboard\",\n      });\n      setTimeout(() => setCopiedLink(false), 2000);\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-white to-slate-50 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin w-8 h-8 border-2 border-blue-600 border-t-transparent rounded-full mx-auto mb-4\"></div>\n          <p className=\"text-slate-600\">Loading affiliate dashboard...</p>\n        </div>\n      </div>\n    );\n  }\n\n  const stats = dashboardData?.stats || {\n    totalEarnings: 0,\n    monthlyEarnings: 0,\n    totalReferrals: 0,\n    conversionRate: 0,\n    monthlyReferrals: 0,\n    totalClicks: 0,\n    totalConversions: 0,\n    averageOrderValue: 0\n  };\n  const affiliate = dashboardData?.affiliate || {\n    referralLink: '',\n    name: '',\n    email: '',\n    affiliateCode: ''\n  };\n  const recentReferrals = dashboardData?.recentReferrals || [];\n  const recentClicks = dashboardData?.recentClicks || [];\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-white to-slate-50\">\n      {/* Header */}\n      <nav className=\"bg-white/80 backdrop-blur-md border-b border-slate-200 sticky top-0 z-50\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex justify-between items-center h-16\">\n            <Link href=\"/\">\n              <a className=\"flex items-center space-x-3\">\n                <img \n                  src={diverWellLogo} \n                  alt=\"Professional Diver - Diver Well Training\" \n                  className=\"w-10 h-10 rounded-lg\"\n                />\n                <div>\n                  <div className=\"text-lg font-bold text-slate-900\">Professional Diver</div>\n                  <div className=\"text-xs text-slate-500\">Affiliate Program</div>\n                </div>\n              </a>\n            </Link>\n            <div className=\"flex items-center space-x-4\">\n              <Link href=\"/dashboard\">\n                <a className=\"text-slate-600 hover:text-slate-900 font-medium\">\n                  Dashboard\n                </a>\n              </Link>\n              <Link href=\"/\">\n                <a className=\"text-slate-600 hover:text-slate-900 font-medium\">\n                  Home\n                </a>\n              </Link>\n            </div>\n          </div>\n        </div>\n      </nav>\n\n      <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        {/* Welcome Section */}\n        <div className=\"mb-8\">\n          <h1 className=\"text-3xl font-bold text-slate-900 mb-2\">\n            Partner Dashboard\n          </h1>\n          <p className=\"text-lg text-slate-600\">\n            Earn 50% commission on every referral to Professional Diver platform\n          </p>\n        </div>\n\n        {/* Referral Link Card */}\n        <Card className=\"mb-8 border-blue-200 bg-gradient-to-r from-blue-50 to-white\">\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2\">\n              <ExternalLink className=\"w-5 h-5 text-blue-600\" />\n              Your Referral Link\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"flex gap-2\">\n              <Input \n                value={affiliate.referralLink || ''}\n                readOnly\n                className=\"font-mono text-sm\"\n                data-testid=\"input-referral-link\"\n              />\n              <Button \n                onClick={copyReferralLink}\n                variant={copiedLink ? \"default\" : \"outline\"}\n                className={copiedLink ? \"bg-green-600 hover:bg-green-700\" : \"\"}\n                data-testid=\"button-copy-link\"\n              >\n                {copiedLink ? \"Copied!\" : <Copy className=\"w-4 h-4\" />}\n              </Button>\n            </div>\n            <p className=\"text-sm text-slate-600 mt-2\">\n              Share this link to earn 50% commission on Monthly ($25) and Annual ($250) subscriptions\n            </p>\n          </CardContent>\n        </Card>\n\n        {/* Stats Overview */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\">\n          <Card>\n            <CardContent className=\"p-6\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <p className=\"text-sm font-medium text-slate-600\">Total Earnings</p>\n                  <p className=\"text-2xl font-bold text-green-600\">\n                    ${((stats.totalEarnings || 0) / 100).toFixed(2)}\n                  </p>\n                </div>\n                <DollarSign className=\"w-8 h-8 text-green-600\" />\n              </div>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardContent className=\"p-6\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <p className=\"text-sm font-medium text-slate-600\">Monthly Earnings</p>\n                  <p className=\"text-2xl font-bold text-blue-600\">\n                    ${((stats.monthlyEarnings || 0) / 100).toFixed(2)}\n                  </p>\n                </div>\n                <TrendingUp className=\"w-8 h-8 text-blue-600\" />\n              </div>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardContent className=\"p-6\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <p className=\"text-sm font-medium text-slate-600\">Total Referrals</p>\n                  <p className=\"text-2xl font-bold text-purple-600\">{stats.totalReferrals || 0}</p>\n                </div>\n                <Users className=\"w-8 h-8 text-purple-600\" />\n              </div>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardContent className=\"p-6\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <p className=\"text-sm font-medium text-slate-600\">Conversion Rate</p>\n                  <p className=\"text-2xl font-bold text-orange-600\">\n                    {stats.conversionRate || 0}%\n                  </p>\n                </div>\n                <Target className=\"w-8 h-8 text-orange-600\" />\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n\n        {/* Detailed Analytics */}\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6 mb-8\">\n          <Card className=\"lg:col-span-1\">\n            <CardHeader>\n              <CardTitle className=\"text-lg\">Quick Stats</CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              <div className=\"flex items-center justify-between\">\n                <span className=\"text-slate-600\">Monthly Referrals</span>\n                <Badge variant=\"secondary\">{stats.monthlyReferrals || 0}</Badge>\n              </div>\n              <div className=\"flex items-center justify-between\">\n                <span className=\"text-slate-600\">Total Clicks</span>\n                <Badge variant=\"outline\">{stats.totalClicks || 0}</Badge>\n              </div>\n              <div className=\"flex items-center justify-between\">\n                <span className=\"text-slate-600\">Conversions</span>\n                <Badge variant=\"outline\">{stats.totalConversions || 0}</Badge>\n              </div>\n              <div className=\"flex items-center justify-between\">\n                <span className=\"text-slate-600\">Avg. Order Value</span>\n                <Badge variant=\"secondary\">\n                  ${((stats.averageOrderValue || 0) / 100).toFixed(2)}\n                </Badge>\n              </div>\n              <div className=\"flex items-center justify-between\">\n                <span className=\"text-slate-600\">Commission Rate</span>\n                <Badge variant=\"default\" className=\"bg-green-600\">50%</Badge>\n              </div>\n            </CardContent>\n          </Card>\n\n          <Card className=\"lg:col-span-2\">\n            <CardHeader>\n              <CardTitle className=\"text-lg\">Partner Leaderboard</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-3\">\n                {(leaderboard || []).slice(0, 10).map((partner: any, index: number) => (\n                  <div key={partner.affiliateCode} className=\"flex items-center justify-between p-3 rounded-lg bg-slate-50\">\n                    <div className=\"flex items-center gap-3\">\n                      <div className={`w-8 h-8 rounded-full flex items-center justify-center text-sm font-bold ${\n                        index === 0 ? 'bg-yellow-500 text-white' :\n                        index === 1 ? 'bg-gray-400 text-white' :\n                        index === 2 ? 'bg-orange-600 text-white' :\n                        'bg-slate-200 text-slate-700'\n                      }`}>\n                        {index + 1}\n                      </div>\n                      <div>\n                        <div className=\"font-medium text-slate-900\">{partner.name}</div>\n                        <div className=\"text-sm text-slate-500\">{partner.affiliateCode}</div>\n                      </div>\n                    </div>\n                    <div className=\"text-right\">\n                      <div className=\"font-bold text-green-600\">\n                        ${(partner.monthlyEarnings / 100).toFixed(2)}\n                      </div>\n                      <div className=\"text-sm text-slate-500\">\n                        {partner.totalReferrals} referrals\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n\n        {/* Recent Activity Tabs */}\n        <Tabs defaultValue=\"referrals\" className=\"mb-8\">\n          <TabsList className=\"grid w-full grid-cols-2\">\n            <TabsTrigger value=\"referrals\">Recent Referrals</TabsTrigger>\n            <TabsTrigger value=\"clicks\">Recent Clicks</TabsTrigger>\n          </TabsList>\n\n          <TabsContent value=\"referrals\">\n            <Card>\n              <CardHeader>\n                <CardTitle>Recent Referrals</CardTitle>\n              </CardHeader>\n              <CardContent>\n                {recentReferrals.length > 0 ? (\n                  <Table>\n                    <TableHeader>\n                      <TableRow>\n                        <TableHead>Date</TableHead>\n                        <TableHead>User</TableHead>\n                        <TableHead>Plan</TableHead>\n                        <TableHead>Commission</TableHead>\n                        <TableHead>Status</TableHead>\n                      </TableRow>\n                    </TableHeader>\n                    <TableBody>\n                      {recentReferrals.map((referral: any) => (\n                        <TableRow key={referral.id}>\n                          <TableCell>\n                            {new Date(referral.createdAt).toLocaleDateString()}\n                          </TableCell>\n                          <TableCell>{referral.referredUserId}</TableCell>\n                          <TableCell>\n                            <Badge variant=\"outline\">{referral.subscriptionType}</Badge>\n                          </TableCell>\n                          <TableCell className=\"font-medium text-green-600\">\n                            ${(referral.commissionEarned / 100).toFixed(2)}\n                          </TableCell>\n                          <TableCell>\n                            <Badge \n                              variant={referral.status === 'ACTIVE' ? 'default' : 'secondary'}\n                              className={referral.status === 'ACTIVE' ? 'bg-green-600' : ''}\n                            >\n                              {referral.status}\n                            </Badge>\n                          </TableCell>\n                        </TableRow>\n                      ))}\n                    </TableBody>\n                  </Table>\n                ) : (\n                  <div className=\"text-center py-8 text-slate-500\">\n                    No referrals yet. Start sharing your link to earn commissions!\n                  </div>\n                )}\n              </CardContent>\n            </Card>\n          </TabsContent>\n\n          <TabsContent value=\"clicks\">\n            <Card>\n              <CardHeader>\n                <CardTitle>Recent Clicks</CardTitle>\n              </CardHeader>\n              <CardContent>\n                {recentClicks.length > 0 ? (\n                  <Table>\n                    <TableHeader>\n                      <TableRow>\n                        <TableHead>Date</TableHead>\n                        <TableHead>Landing Page</TableHead>\n                        <TableHead>Referrer</TableHead>\n                        <TableHead>Converted</TableHead>\n                      </TableRow>\n                    </TableHeader>\n                    <TableBody>\n                      {recentClicks.map((click: any) => (\n                        <TableRow key={click.id}>\n                          <TableCell>\n                            {new Date(click.createdAt).toLocaleDateString()}\n                          </TableCell>\n                          <TableCell className=\"font-mono text-sm\">\n                            {click.landingPage || '/'}\n                          </TableCell>\n                          <TableCell className=\"text-sm text-slate-600\">\n                            {click.referrerUrl ? new URL(click.referrerUrl).hostname : 'Direct'}\n                          </TableCell>\n                          <TableCell>\n                            {click.converted ? (\n                              <Badge className=\"bg-green-600\">Converted</Badge>\n                            ) : (\n                              <Badge variant=\"outline\">Pending</Badge>\n                            )}\n                          </TableCell>\n                        </TableRow>\n                      ))}\n                    </TableBody>\n                  </Table>\n                ) : (\n                  <div className=\"text-center py-8 text-slate-500\">\n                    No clicks tracked yet. Share your referral link to start tracking!\n                  </div>\n                )}\n              </CardContent>\n            </Card>\n          </TabsContent>\n        </Tabs>\n\n        {/* Commission Information */}\n        <Card className=\"mb-8\">\n          <CardHeader>\n            <CardTitle>Commission Structure</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div className=\"space-y-4\">\n                <h4 className=\"font-semibold text-slate-900\">Subscription Plans</h4>\n                <div className=\"space-y-3\">\n                  <div className=\"flex justify-between items-center p-3 bg-slate-50 rounded-lg\">\n                    <div>\n                      <div className=\"font-medium\">Monthly Plan</div>\n                      <div className=\"text-sm text-slate-600\">$25/month</div>\n                    </div>\n                    <div className=\"text-right\">\n                      <div className=\"font-bold text-green-600\">$12.50</div>\n                      <div className=\"text-sm text-slate-600\">50% commission</div>\n                    </div>\n                  </div>\n                  <div className=\"flex justify-between items-center p-3 bg-slate-50 rounded-lg\">\n                    <div>\n                      <div className=\"font-medium\">Annual Plan</div>\n                      <div className=\"text-sm text-slate-600\">$250/year</div>\n                    </div>\n                    <div className=\"text-right\">\n                      <div className=\"font-bold text-green-600\">$125.00</div>\n                      <div className=\"text-sm text-slate-600\">50% commission</div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              \n              <div className=\"space-y-4\">\n                <h4 className=\"font-semibold text-slate-900\">Payment Information</h4>\n                <div className=\"space-y-2 text-sm text-slate-600\">\n                  <p>• Commissions are paid monthly via PayPal or bank transfer</p>\n                  <p>• Minimum payout threshold: $50</p>\n                  <p>• Payments processed on the 1st of each month</p>\n                  <p>• Recurring commissions for active subscriptions</p>\n                  <p>• Real-time tracking and transparent reporting</p>\n                </div>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      </main>\n\n      <Footer />\n    </div>\n  );\n}","size_bytes":18270},"server/affiliate-service.ts":{"content":"import { nanoid } from \"nanoid\";\n\n// Affiliate service for managing partner/referral program\nexport class AffiliateService {\n  private affiliates: Map<string, any> = new Map();\n  private referrals: Map<string, any> = new Map();\n  private clicks: Map<string, any> = new Map();\n\n  // Create affiliate account\n  async createAffiliate(userData: { userId: string; name: string; email: string }) {\n    const affiliateCode = this.generateAffiliateCode();\n    const referralLink = `https://professional-diver.diverwell.app/?ref=${affiliateCode}`;\n    \n    const affiliate = {\n      id: nanoid(),\n      userId: userData.userId,\n      name: userData.name,\n      email: userData.email,\n      affiliateCode,\n      commissionRate: 50, // 50% commission\n      totalReferrals: 0,\n      totalEarnings: 0,\n      monthlyEarnings: 0,\n      referralLink,\n      isActive: true,\n      createdAt: new Date(),\n      updatedAt: new Date(),\n    };\n\n    this.affiliates.set(affiliate.id, affiliate);\n    return affiliate;\n  }\n\n  // Generate unique affiliate code\n  private generateAffiliateCode(): string {\n    return `PD${nanoid(8).toUpperCase()}`;\n  }\n\n  // Track affiliate click\n  async trackClick(affiliateCode: string, clickData: {\n    ipAddress?: string;\n    userAgent?: string;\n    referrerUrl?: string;\n    landingPage?: string;\n  }) {\n    const click = {\n      id: nanoid(),\n      affiliateCode,\n      ...clickData,\n      converted: false,\n      createdAt: new Date(),\n    };\n\n    this.clicks.set(click.id, click);\n    return click;\n  }\n\n  // Process referral conversion\n  async processReferral(data: {\n    affiliateCode: string;\n    referredUserId: string;\n    subscriptionType: string;\n    monthlyValue: number; // in cents\n  }) {\n    const affiliate = Array.from(this.affiliates.values())\n      .find(a => a.affiliateCode === data.affiliateCode);\n\n    if (!affiliate) {\n      throw new Error('Affiliate not found');\n    }\n\n    const commissionEarned = Math.round(data.monthlyValue * (affiliate.commissionRate / 100));\n\n    const referral = {\n      id: nanoid(),\n      affiliateId: affiliate.id,\n      referredUserId: data.referredUserId,\n      affiliateCode: data.affiliateCode,\n      subscriptionType: data.subscriptionType,\n      monthlyValue: data.monthlyValue,\n      commissionEarned,\n      status: 'ACTIVE',\n      firstPaymentDate: new Date(),\n      lastPaymentDate: new Date(),\n      createdAt: new Date(),\n      updatedAt: new Date(),\n    };\n\n    // Update affiliate stats\n    affiliate.totalReferrals += 1;\n    affiliate.totalEarnings += commissionEarned;\n    affiliate.monthlyEarnings += commissionEarned;\n    affiliate.updatedAt = new Date();\n\n    this.referrals.set(referral.id, referral);\n    this.affiliates.set(affiliate.id, affiliate);\n\n    // Mark corresponding click as converted\n    const relatedClick = Array.from(this.clicks.values())\n      .find(c => c.affiliateCode === data.affiliateCode && !c.converted);\n    \n    if (relatedClick) {\n      relatedClick.converted = true;\n      relatedClick.convertedUserId = data.referredUserId;\n      this.clicks.set(relatedClick.id, relatedClick);\n    }\n\n    return referral;\n  }\n\n  // Get affiliate dashboard data\n  async getAffiliateDashboard(affiliateId: string) {\n    const affiliate = this.affiliates.get(affiliateId);\n    if (!affiliate) {\n      throw new Error('Affiliate not found');\n    }\n\n    const referrals = Array.from(this.referrals.values())\n      .filter(r => r.affiliateId === affiliateId);\n\n    const clicks = Array.from(this.clicks.values())\n      .filter(c => c.affiliateCode === affiliate.affiliateCode);\n\n    const totalClicks = clicks.length;\n    const totalConversions = clicks.filter(c => c.converted).length;\n    const conversionRate = totalClicks > 0 ? (totalConversions / totalClicks) * 100 : 0;\n\n    const monthlyReferrals = referrals.filter(r => {\n      const referralDate = new Date(r.createdAt);\n      const now = new Date();\n      return referralDate.getMonth() === now.getMonth() && \n             referralDate.getFullYear() === now.getFullYear();\n    });\n\n    return {\n      affiliate,\n      stats: {\n        totalReferrals: affiliate.totalReferrals,\n        totalEarnings: affiliate.totalEarnings,\n        monthlyEarnings: affiliate.monthlyEarnings,\n        monthlyReferrals: monthlyReferrals.length,\n        totalClicks,\n        totalConversions,\n        conversionRate: Math.round(conversionRate * 100) / 100,\n        averageOrderValue: referrals.length > 0 \n          ? Math.round(referrals.reduce((sum, r) => sum + r.monthlyValue, 0) / referrals.length)\n          : 0\n      },\n      recentReferrals: referrals\n        .sort((a, b) => new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime())\n        .slice(0, 10),\n      recentClicks: clicks\n        .sort((a, b) => new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime())\n        .slice(0, 20)\n    };\n  }\n\n  // Get affiliate leaderboard\n  async getLeaderboard() {\n    const affiliatesList = Array.from(this.affiliates.values())\n      .filter(a => a.isActive)\n      .sort((a, b) => b.monthlyEarnings - a.monthlyEarnings)\n      .slice(0, 20);\n\n    return affiliatesList.map((affiliate, index) => ({\n      rank: index + 1,\n      name: affiliate.name,\n      totalReferrals: affiliate.totalReferrals,\n      monthlyEarnings: affiliate.monthlyEarnings,\n      totalEarnings: affiliate.totalEarnings,\n      affiliateCode: affiliate.affiliateCode,\n      joinDate: affiliate.createdAt,\n    }));\n  }\n\n  // Calculate monthly commissions for all affiliates\n  async calculateMonthlyCommissions() {\n    const affiliatesList = Array.from(this.affiliates.values())\n      .filter(a => a.isActive);\n\n    const commissions = affiliatesList.map(affiliate => {\n      const monthlyReferrals = Array.from(this.referrals.values())\n        .filter(r => {\n          if (r.affiliateId !== affiliate.id) return false;\n          \n          const referralDate = new Date(r.createdAt);\n          const now = new Date();\n          return referralDate.getMonth() === now.getMonth() && \n                 referralDate.getFullYear() === now.getFullYear();\n        });\n\n      const monthlyCommission = monthlyReferrals\n        .reduce((sum, r) => sum + r.commissionEarned, 0);\n\n      return {\n        affiliateId: affiliate.id,\n        affiliateCode: affiliate.affiliateCode,\n        name: affiliate.name,\n        email: affiliate.email,\n        monthlyCommission,\n        referralCount: monthlyReferrals.length,\n        paymentStatus: 'PENDING'\n      };\n    });\n\n    return commissions.filter(c => c.monthlyCommission > 0);\n  }\n\n  // Get all affiliates\n  async getAllAffiliates() {\n    return Array.from(this.affiliates.values());\n  }\n\n  // Get affiliate by code\n  async getAffiliateByCode(code: string) {\n    return Array.from(this.affiliates.values())\n      .find(a => a.affiliateCode === code);\n  }\n\n  // Add predefined super admins and lifetime users\n  async initializeSpecialUsers() {\n    // Super Admins\n    const superAdmins = [\n      { email: 'lalabalavu.jon@gmail.com', name: 'Jon Lalabalavu' },\n      { email: 'sephdee@hotmail.com', name: 'Jon Lalabalavu' }\n    ];\n\n    // Lifetime Access Users\n    const lifetimeUsers = [\n      { email: 'freddierusseljoseph@yahoo.com', name: 'Freddie Russell Joseph' },\n      { email: 'deesuks@gmail.com', name: 'Dilo Suka' },\n      { email: 'steve44hall@yahoo.co.uk', name: 'Steve Hall' },\n      { email: 'mike@ascotwood.com', name: 'Mike Scarpellini' },\n      // Eroni Cirikidaveta - email to follow\n    ];\n\n    const specialUsers = {\n      superAdmins,\n      lifetimeUsers,\n      initialized: true,\n      createdAt: new Date(),\n    };\n\n    return specialUsers;\n  }\n}\n\nexport const affiliateService = new AffiliateService();\n\n// Initialize demo data\n(async () => {\n  // Create demo affiliate for testing\n  const demoAffiliate = await affiliateService.createAffiliate({\n    userId: 'demo-affiliate-1',\n    name: 'Demo Partner',\n    email: 'partner@example.com'\n  });\n\n  // Add some sample referrals for demo\n  await affiliateService.processReferral({\n    affiliateCode: demoAffiliate.affiliateCode,\n    referredUserId: 'user-1',\n    subscriptionType: 'MONTHLY',\n    monthlyValue: 2500 // $25.00\n  });\n\n  await affiliateService.processReferral({\n    affiliateCode: demoAffiliate.affiliateCode,\n    referredUserId: 'user-2', \n    subscriptionType: 'ANNUAL',\n    monthlyValue: 25000 // $250.00\n  });\n\n  // Track some demo clicks\n  await affiliateService.trackClick(demoAffiliate.affiliateCode, {\n    ipAddress: '192.168.1.1',\n    userAgent: 'Mozilla/5.0...',\n    landingPage: '/',\n    referrerUrl: 'https://google.com'\n  });\n\n  await affiliateService.trackClick(demoAffiliate.affiliateCode, {\n    ipAddress: '192.168.1.2',\n    userAgent: 'Mozilla/5.0...',\n    landingPage: '/trial-signup',\n    referrerUrl: 'https://facebook.com'\n  });\n\n  // Initialize special users\n  await affiliateService.initializeSpecialUsers();\n})();","size_bytes":8881},"server/user-management.ts":{"content":"// User management service for special accounts\nexport class UserManagementService {\n  private specialUsers = new Map<string, any>();\n\n  constructor() {\n    this.initializeSpecialUsers();\n  }\n\n  // Initialize super admins and lifetime users\n  private initializeSpecialUsers() {\n    // Super Admin accounts\n    const superAdmins = [\n      {\n        id: 'super-admin-1',\n        email: 'lalabalavu.jon@gmail.com',\n        name: 'Jon Lalabalavu',\n        role: 'SUPER_ADMIN',\n        subscriptionType: 'LIFETIME',\n        subscriptionStatus: 'ACTIVE',\n        specialAccess: true,\n        createdAt: new Date(),\n        updatedAt: new Date(),\n      },\n      {\n        id: 'super-admin-2', \n        email: 'sephdee@hotmail.com',\n        name: 'Jon Lalabalavu',\n        role: 'SUPER_ADMIN',\n        subscriptionType: 'LIFETIME',\n        subscriptionStatus: 'ACTIVE',\n        specialAccess: true,\n        createdAt: new Date(),\n        updatedAt: new Date(),\n      }\n    ];\n\n    // Lifetime access users for testing and marketing\n    const lifetimeUsers = [\n      {\n        id: 'lifetime-1',\n        email: 'freddierusseljoseph@yahoo.com',\n        name: 'Freddie Russell Joseph',\n        role: 'LIFETIME',\n        subscriptionType: 'LIFETIME',\n        subscriptionStatus: 'ACTIVE',\n        specialAccess: true,\n        purpose: 'Testing and Marketing',\n        createdAt: new Date(),\n        updatedAt: new Date(),\n      },\n      {\n        id: 'lifetime-2',\n        email: 'deesuks@gmail.com', \n        name: 'Dilo Suka',\n        role: 'LIFETIME',\n        subscriptionType: 'LIFETIME',\n        subscriptionStatus: 'ACTIVE',\n        specialAccess: true,\n        purpose: 'Testing and Marketing',\n        createdAt: new Date(),\n        updatedAt: new Date(),\n      },\n      {\n        id: 'lifetime-3',\n        email: 'steve44hall@yahoo.co.uk',\n        name: 'Steve Hall',\n        role: 'LIFETIME',\n        subscriptionType: 'LIFETIME',\n        subscriptionStatus: 'ACTIVE',\n        specialAccess: true,\n        purpose: 'Testing and Marketing',\n        createdAt: new Date(),\n        updatedAt: new Date(),\n      },\n      {\n        id: 'lifetime-4',\n        email: 'mike@ascotwood.com',\n        name: 'Mike Scarpellini',\n        role: 'LIFETIME',\n        subscriptionType: 'LIFETIME',\n        subscriptionStatus: 'ACTIVE',\n        specialAccess: true,\n        purpose: 'Testing and Marketing',\n        createdAt: new Date(),\n        updatedAt: new Date(),\n      },\n      {\n        id: 'lifetime-5',\n        email: 'eroni2519@gmail.com', // Eroni Cirikidaveta\n        name: 'Eroni Cirikidaveta',\n        role: 'LIFETIME',\n        subscriptionType: 'LIFETIME',\n        subscriptionStatus: 'ACTIVE', // Email provided\n        specialAccess: true,\n        purpose: 'Testing and Marketing',\n        note: 'Email address updated',\n        createdAt: new Date(),\n        updatedAt: new Date(),\n      }\n    ];\n\n    // Store all special users\n    [...superAdmins, ...lifetimeUsers].forEach(user => {\n      this.specialUsers.set(user.email, user);\n    });\n\n    console.log('Initialized special users:', {\n      superAdmins: superAdmins.length,\n      lifetimeUsers: lifetimeUsers.length,\n      total: this.specialUsers.size\n    });\n  }\n\n  // Check if user has special access\n  hasSpecialAccess(email: string): boolean {\n    return this.specialUsers.has(email);\n  }\n\n  // Get user details by email\n  getSpecialUser(email: string) {\n    return this.specialUsers.get(email);\n  }\n\n  // Get all super admins\n  getSuperAdmins() {\n    return Array.from(this.specialUsers.values())\n      .filter(user => user.role === 'SUPER_ADMIN');\n  }\n\n  // Get all lifetime users\n  getLifetimeUsers() {\n    return Array.from(this.specialUsers.values())\n      .filter(user => user.role === 'LIFETIME');\n  }\n\n  // Update Eroni's email when provided\n  updateEroniEmail(newEmail: string) {\n    const eroniUser = Array.from(this.specialUsers.values())\n      .find(user => user.name === 'Eroni Cirikidaveta');\n    \n    if (eroniUser) {\n      // Remove old entry\n      this.specialUsers.delete('eroni@pending.com');\n      \n      // Update email and status\n      eroniUser.email = newEmail;\n      eroniUser.subscriptionStatus = 'ACTIVE';\n      eroniUser.note = 'Email address updated';\n      eroniUser.updatedAt = new Date();\n      \n      // Store with new email\n      this.specialUsers.set(newEmail, eroniUser);\n      \n      console.log(`Updated Eroni's email to: ${newEmail}`);\n      return eroniUser;\n    }\n    \n    return null;\n  }\n\n  // Get user role and access level\n  getUserAccessLevel(email: string) {\n    const user = this.getSpecialUser(email);\n    \n    if (!user) {\n      return { role: 'USER', hasSpecialAccess: false };\n    }\n\n    return {\n      role: user.role,\n      hasSpecialAccess: user.specialAccess,\n      subscriptionType: user.subscriptionType,\n      subscriptionStatus: user.subscriptionStatus,\n      purpose: user.purpose || null\n    };\n  }\n\n  // List all special users for admin dashboard\n  getAllSpecialUsers() {\n    return Array.from(this.specialUsers.values())\n      .sort((a, b) => {\n        // Sort by role first (SUPER_ADMIN first), then by name\n        if (a.role !== b.role) {\n          return a.role === 'SUPER_ADMIN' ? -1 : 1;\n        }\n        return a.name.localeCompare(b.name);\n      });\n  }\n}\n\nexport const userManagement = new UserManagementService();","size_bytes":5345},"shared/affiliate-schema.ts":{"content":"import { sql } from \"drizzle-orm\";\nimport { pgTable, varchar, text, integer, timestamp, boolean } from \"drizzle-orm/pg-core\";\nimport { createInsertSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\nimport { users } from \"./schema\";\n\n// Affiliate program tables\nexport const affiliates = pgTable(\"affiliates\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  userId: varchar(\"user_id\").notNull().references(() => users.id, { onDelete: \"cascade\" }),\n  affiliateCode: varchar(\"affiliate_code\").notNull().unique(),\n  commissionRate: integer(\"commission_rate\").default(50), // 50% commission\n  totalReferrals: integer(\"total_referrals\").default(0),\n  totalEarnings: integer(\"total_earnings\").default(0), // in cents\n  monthlyEarnings: integer(\"monthly_earnings\").default(0), // current month in cents\n  isActive: boolean(\"is_active\").default(true),\n  referralLink: text(\"referral_link\").notNull(),\n  paypalEmail: text(\"paypal_email\"),\n  bankDetails: text(\"bank_details\"), // encrypted bank details for payouts\n  createdAt: timestamp(\"created_at\").defaultNow().notNull(),\n  updatedAt: timestamp(\"updated_at\").defaultNow().notNull(),\n});\n\nexport const referrals = pgTable(\"referrals\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  affiliateId: varchar(\"affiliate_id\").notNull().references(() => affiliates.id, { onDelete: \"cascade\" }),\n  referredUserId: varchar(\"referred_user_id\").notNull().references(() => users.id, { onDelete: \"cascade\" }),\n  affiliateCode: varchar(\"affiliate_code\").notNull(),\n  subscriptionType: text(\"subscription_type\").notNull(), // MONTHLY, ANNUAL, LIFETIME\n  monthlyValue: integer(\"monthly_value\").notNull(), // subscription value in cents\n  commissionEarned: integer(\"commission_earned\").notNull(), // in cents\n  status: text(\"status\").default(\"ACTIVE\").notNull(), // ACTIVE, CANCELLED, EXPIRED\n  firstPaymentDate: timestamp(\"first_payment_date\"),\n  lastPaymentDate: timestamp(\"last_payment_date\"),\n  createdAt: timestamp(\"created_at\").defaultNow().notNull(),\n  updatedAt: timestamp(\"updated_at\").defaultNow().notNull(),\n});\n\nexport const commissionPayments = pgTable(\"commission_payments\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  affiliateId: varchar(\"affiliate_id\").notNull().references(() => affiliates.id, { onDelete: \"cascade\" }),\n  amount: integer(\"amount\").notNull(), // in cents\n  paymentMethod: text(\"payment_method\").notNull(), // PAYPAL, BANK_TRANSFER, STRIPE\n  paymentReference: text(\"payment_reference\"),\n  paymentStatus: text(\"payment_status\").default(\"PENDING\").notNull(), // PENDING, COMPLETED, FAILED\n  periodStart: timestamp(\"period_start\").notNull(),\n  periodEnd: timestamp(\"period_end\").notNull(),\n  paidAt: timestamp(\"paid_at\"),\n  createdAt: timestamp(\"created_at\").defaultNow().notNull(),\n});\n\nexport const affiliateClicks = pgTable(\"affiliate_clicks\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  affiliateCode: varchar(\"affiliate_code\").notNull(),\n  ipAddress: text(\"ip_address\"),\n  userAgent: text(\"user_agent\"),\n  referrerUrl: text(\"referrer_url\"),\n  landingPage: text(\"landing_page\"),\n  converted: boolean(\"converted\").default(false),\n  convertedUserId: varchar(\"converted_user_id\").references(() => users.id),\n  createdAt: timestamp(\"created_at\").defaultNow().notNull(),\n});\n\n// Insert schemas\nexport const insertAffiliateSchema = createInsertSchema(affiliates).omit({\n  id: true,\n  createdAt: true,\n  updatedAt: true,\n});\n\nexport const insertReferralSchema = createInsertSchema(referrals).omit({\n  id: true,\n  createdAt: true,\n  updatedAt: true,\n});\n\nexport const insertCommissionPaymentSchema = createInsertSchema(commissionPayments).omit({\n  id: true,\n  createdAt: true,\n});\n\nexport const insertAffiliateClickSchema = createInsertSchema(affiliateClicks).omit({\n  id: true,\n  createdAt: true,\n});\n\n// Types\nexport type Affiliate = typeof affiliates.$inferSelect;\nexport type InsertAffiliate = z.infer<typeof insertAffiliateSchema>;\nexport type Referral = typeof referrals.$inferSelect;\nexport type InsertReferral = z.infer<typeof insertReferralSchema>;\nexport type CommissionPayment = typeof commissionPayments.$inferSelect;\nexport type InsertCommissionPayment = z.infer<typeof insertCommissionPaymentSchema>;\nexport type AffiliateClick = typeof affiliateClicks.$inferSelect;\nexport type InsertAffiliateClick = z.infer<typeof insertAffiliateClickSchema>;","size_bytes":4409},"client/src/components/enhanced-markdown-editor.tsx":{"content":"import { useState, useRef, useCallback, useEffect } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport remarkGfm from \"remark-gfm\";\nimport remarkBreaks from \"remark-breaks\";\nimport rehypeRaw from \"rehype-raw\";\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\nimport { tomorrow } from \"react-syntax-highlighter/dist/esm/styles/prism\";\nimport { Button } from \"@/components/ui/button\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Separator } from \"@/components/ui/separator\";\nimport { \n  Bold, \n  Italic, \n  Hash, \n  Link, \n  List, \n  ListOrdered, \n  Quote, \n  Code, \n  Image, \n  Table,\n  Eye,\n  EyeOff,\n  Undo,\n  Redo,\n  Type,\n  AlignLeft,\n  CheckSquare,\n  Minus\n} from \"lucide-react\";\n\ninterface EnhancedMarkdownEditorProps {\n  value: string;\n  onChange: (value: string) => void;\n  placeholder?: string;\n  height?: string;\n  showWordCount?: boolean;\n  showPreview?: boolean;\n}\n\nexport default function EnhancedMarkdownEditor({\n  value,\n  onChange,\n  placeholder = \"Start writing in Markdown...\",\n  height = \"500px\",\n  showWordCount = true,\n  showPreview = true\n}: EnhancedMarkdownEditorProps) {\n  const [activeTab, setActiveTab] = useState<\"write\" | \"preview\" | \"split\">(\"split\");\n  const [undoStack, setUndoStack] = useState<string[]>([]);\n  const [redoStack, setRedoStack] = useState<string[]>([]);\n  const textareaRef = useRef<HTMLTextAreaElement>(null);\n\n  // Save to undo stack\n  const saveToUndoStack = useCallback(() => {\n    setUndoStack(prev => [...prev.slice(-19), value]); // Keep last 20 states\n    setRedoStack([]);\n  }, [value]);\n\n  // Undo functionality\n  const handleUndo = useCallback(() => {\n    if (undoStack.length > 0) {\n      const lastState = undoStack[undoStack.length - 1];\n      setRedoStack(prev => [value, ...prev]);\n      setUndoStack(prev => prev.slice(0, -1));\n      onChange(lastState);\n    }\n  }, [undoStack, value, onChange]);\n\n  // Redo functionality\n  const handleRedo = useCallback(() => {\n    if (redoStack.length > 0) {\n      const nextState = redoStack[0];\n      setUndoStack(prev => [...prev, value]);\n      setRedoStack(prev => prev.slice(1));\n      onChange(nextState);\n    }\n  }, [redoStack, value, onChange]);\n\n  // Insert markdown formatting\n  const insertMarkdown = useCallback((type: string) => {\n    const textarea = textareaRef.current;\n    if (!textarea) return;\n\n    saveToUndoStack();\n    \n    const start = textarea.selectionStart;\n    const end = textarea.selectionEnd;\n    const selectedText = value.substring(start, end);\n    const beforeText = value.substring(0, start);\n    const afterText = value.substring(end);\n\n    let insertText = \"\";\n    let cursorOffset = 0;\n\n    switch (type) {\n      case \"bold\":\n        insertText = selectedText ? `**${selectedText}**` : \"**bold text**\";\n        cursorOffset = selectedText ? insertText.length : 2;\n        break;\n      case \"italic\":\n        insertText = selectedText ? `*${selectedText}*` : \"*italic text*\";\n        cursorOffset = selectedText ? insertText.length : 1;\n        break;\n      case \"header1\":\n        insertText = selectedText ? `# ${selectedText}` : \"# Header 1\";\n        cursorOffset = insertText.length;\n        break;\n      case \"header2\":\n        insertText = selectedText ? `## ${selectedText}` : \"## Header 2\";\n        cursorOffset = insertText.length;\n        break;\n      case \"header3\":\n        insertText = selectedText ? `### ${selectedText}` : \"### Header 3\";\n        cursorOffset = insertText.length;\n        break;\n      case \"link\":\n        insertText = selectedText ? `[${selectedText}](url)` : \"[link text](url)\";\n        cursorOffset = insertText.length - 4;\n        break;\n      case \"image\":\n        insertText = selectedText ? `![${selectedText}](image-url)` : \"![alt text](image-url)\";\n        cursorOffset = insertText.length - 11;\n        break;\n      case \"code\":\n        insertText = selectedText ? `\\`${selectedText}\\`` : \"`code`\";\n        cursorOffset = selectedText ? insertText.length : 1;\n        break;\n      case \"codeblock\":\n        insertText = selectedText ? `\\`\\`\\`\\n${selectedText}\\n\\`\\`\\`` : \"```\\ncode block\\n```\";\n        cursorOffset = selectedText ? insertText.length : 4;\n        break;\n      case \"quote\":\n        insertText = selectedText ? `> ${selectedText}` : \"> Quote text\";\n        cursorOffset = insertText.length;\n        break;\n      case \"ul\":\n        insertText = selectedText ? `- ${selectedText}` : \"- List item\";\n        cursorOffset = insertText.length;\n        break;\n      case \"ol\":\n        insertText = selectedText ? `1. ${selectedText}` : \"1. List item\";\n        cursorOffset = insertText.length;\n        break;\n      case \"checkbox\":\n        insertText = selectedText ? `- [ ] ${selectedText}` : \"- [ ] Task item\";\n        cursorOffset = insertText.length;\n        break;\n      case \"table\":\n        insertText = \"| Header 1 | Header 2 | Header 3 |\\n|----------|----------|----------|\\n| Cell 1   | Cell 2   | Cell 3   |\";\n        cursorOffset = insertText.length;\n        break;\n      case \"hr\":\n        insertText = \"\\n---\\n\";\n        cursorOffset = insertText.length;\n        break;\n      default:\n        return;\n    }\n\n    const newValue = beforeText + insertText + afterText;\n    onChange(newValue);\n\n    // Set cursor position\n    setTimeout(() => {\n      textarea.focus();\n      textarea.setSelectionRange(start + cursorOffset, start + cursorOffset);\n    }, 0);\n  }, [value, onChange, saveToUndoStack]);\n\n  // Keyboard shortcuts\n  const handleKeyDown = useCallback((e: React.KeyboardEvent) => {\n    if (e.ctrlKey || e.metaKey) {\n      switch (e.key) {\n        case 'z':\n          e.preventDefault();\n          if (e.shiftKey) {\n            handleRedo();\n          } else {\n            handleUndo();\n          }\n          break;\n        case 'b':\n          e.preventDefault();\n          insertMarkdown('bold');\n          break;\n        case 'i':\n          e.preventDefault();\n          insertMarkdown('italic');\n          break;\n        case 'k':\n          e.preventDefault();\n          insertMarkdown('link');\n          break;\n      }\n    }\n  }, [handleUndo, handleRedo, insertMarkdown]);\n\n  // Word and character count\n  const wordCount = value.trim() ? value.trim().split(/\\s+/).length : 0;\n  const charCount = value.length;\n  const charCountNoSpaces = value.replace(/\\s/g, '').length;\n\n  // Custom markdown components\n  const components = {\n    code({ node, inline, className, children, ...props }: any) {\n      const match = /language-(\\w+)/.exec(className || '');\n      return !inline && match ? (\n        <SyntaxHighlighter\n          style={tomorrow}\n          language={match[1]}\n          PreTag=\"div\"\n          className=\"rounded-lg\"\n          {...props}\n        >\n          {String(children).replace(/\\n$/, '')}\n        </SyntaxHighlighter>\n      ) : (\n        <code className=\"bg-slate-100 text-slate-800 px-1.5 py-0.5 rounded text-sm font-mono\" {...props}>\n          {children}\n        </code>\n      );\n    },\n    blockquote({ children }: any) {\n      return (\n        <blockquote className=\"border-l-4 border-blue-500 pl-4 py-2 my-4 bg-blue-50 text-slate-700 italic\">\n          {children}\n        </blockquote>\n      );\n    },\n    table({ children }: any) {\n      return (\n        <div className=\"overflow-x-auto my-4\">\n          <table className=\"min-w-full border-collapse border border-slate-300\">\n            {children}\n          </table>\n        </div>\n      );\n    },\n    th({ children }: any) {\n      return (\n        <th className=\"border border-slate-300 bg-slate-100 px-4 py-2 text-left font-semibold\">\n          {children}\n        </th>\n      );\n    },\n    td({ children }: any) {\n      return (\n        <td className=\"border border-slate-300 px-4 py-2\">\n          {children}\n        </td>\n      );\n    },\n  };\n\n  return (\n    <div className=\"w-full border border-slate-200 rounded-lg overflow-hidden bg-white\">\n      {/* Toolbar */}\n      <div className=\"bg-slate-50 border-b border-slate-200 p-3\">\n        <div className=\"flex items-center justify-between mb-3\">\n          <div className=\"flex items-center space-x-2\">\n            <Badge variant=\"secondary\" className=\"text-xs\">\n              Enhanced Markdown Editor\n            </Badge>\n            {showWordCount && (\n              <div className=\"text-xs text-slate-500 flex items-center space-x-3\">\n                <span>{wordCount} words</span>\n                <span>{charCount} chars</span>\n                <span>{charCountNoSpaces} chars (no spaces)</span>\n              </div>\n            )}\n          </div>\n          <div className=\"flex items-center space-x-1\">\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={handleUndo}\n              disabled={undoStack.length === 0}\n              className=\"h-8 w-8 p-0\"\n              title=\"Undo (Ctrl+Z)\"\n            >\n              <Undo className=\"w-4 h-4\" />\n            </Button>\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={handleRedo}\n              disabled={redoStack.length === 0}\n              className=\"h-8 w-8 p-0\"\n              title=\"Redo (Ctrl+Shift+Z)\"\n            >\n              <Redo className=\"w-4 h-4\" />\n            </Button>\n          </div>\n        </div>\n\n        {/* Formatting Toolbar */}\n        <div className=\"flex flex-wrap items-center gap-1\">\n          {/* Text Formatting */}\n          <div className=\"flex items-center space-x-1\">\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={() => insertMarkdown('bold')}\n              className=\"h-8 w-8 p-0\"\n              title=\"Bold (Ctrl+B)\"\n            >\n              <Bold className=\"w-4 h-4\" />\n            </Button>\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={() => insertMarkdown('italic')}\n              className=\"h-8 w-8 p-0\"\n              title=\"Italic (Ctrl+I)\"\n            >\n              <Italic className=\"w-4 h-4\" />\n            </Button>\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={() => insertMarkdown('code')}\n              className=\"h-8 w-8 p-0\"\n              title=\"Inline Code\"\n            >\n              <Code className=\"w-4 h-4\" />\n            </Button>\n          </div>\n\n          <Separator orientation=\"vertical\" className=\"h-6\" />\n\n          {/* Headers */}\n          <div className=\"flex items-center space-x-1\">\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={() => insertMarkdown('header1')}\n              className=\"h-8 px-2 text-xs\"\n              title=\"Header 1\"\n            >\n              H1\n            </Button>\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={() => insertMarkdown('header2')}\n              className=\"h-8 px-2 text-xs\"\n              title=\"Header 2\"\n            >\n              H2\n            </Button>\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={() => insertMarkdown('header3')}\n              className=\"h-8 px-2 text-xs\"\n              title=\"Header 3\"\n            >\n              H3\n            </Button>\n          </div>\n\n          <Separator orientation=\"vertical\" className=\"h-6\" />\n\n          {/* Lists and Elements */}\n          <div className=\"flex items-center space-x-1\">\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={() => insertMarkdown('ul')}\n              className=\"h-8 w-8 p-0\"\n              title=\"Bullet List\"\n            >\n              <List className=\"w-4 h-4\" />\n            </Button>\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={() => insertMarkdown('ol')}\n              className=\"h-8 w-8 p-0\"\n              title=\"Numbered List\"\n            >\n              <ListOrdered className=\"w-4 h-4\" />\n            </Button>\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={() => insertMarkdown('checkbox')}\n              className=\"h-8 w-8 p-0\"\n              title=\"Task List\"\n            >\n              <CheckSquare className=\"w-4 h-4\" />\n            </Button>\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={() => insertMarkdown('quote')}\n              className=\"h-8 w-8 p-0\"\n              title=\"Quote\"\n            >\n              <Quote className=\"w-4 h-4\" />\n            </Button>\n          </div>\n\n          <Separator orientation=\"vertical\" className=\"h-6\" />\n\n          {/* Links and Media */}\n          <div className=\"flex items-center space-x-1\">\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={() => insertMarkdown('link')}\n              className=\"h-8 w-8 p-0\"\n              title=\"Link (Ctrl+K)\"\n            >\n              <Link className=\"w-4 h-4\" />\n            </Button>\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={() => insertMarkdown('image')}\n              className=\"h-8 w-8 p-0\"\n              title=\"Image\"\n            >\n              <Image className=\"w-4 h-4\" />\n            </Button>\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={() => insertMarkdown('table')}\n              className=\"h-8 w-8 p-0\"\n              title=\"Table\"\n            >\n              <Table className=\"w-4 h-4\" />\n            </Button>\n          </div>\n\n          <Separator orientation=\"vertical\" className=\"h-6\" />\n\n          {/* Advanced */}\n          <div className=\"flex items-center space-x-1\">\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={() => insertMarkdown('codeblock')}\n              className=\"h-8 px-2 text-xs\"\n              title=\"Code Block\"\n            >\n              ```\n            </Button>\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={() => insertMarkdown('hr')}\n              className=\"h-8 w-8 p-0\"\n              title=\"Horizontal Rule\"\n            >\n              <Minus className=\"w-4 h-4\" />\n            </Button>\n          </div>\n        </div>\n      </div>\n\n      {/* Editor Content */}\n      <div className=\"relative\">\n        {showPreview ? (\n          <Tabs value={activeTab} onValueChange={(value) => setActiveTab(value as any)}>\n            <TabsList className=\"grid w-full grid-cols-3\">\n              <TabsTrigger value=\"write\">Write</TabsTrigger>\n              <TabsTrigger value=\"preview\">Preview</TabsTrigger>\n              <TabsTrigger value=\"split\">Split View</TabsTrigger>\n            </TabsList>\n\n            <TabsContent value=\"write\" className=\"mt-0\">\n              <textarea\n                ref={textareaRef}\n                value={value}\n                onChange={(e) => onChange(e.target.value)}\n                onKeyDown={handleKeyDown}\n                placeholder={placeholder}\n                className=\"w-full p-4 border-0 resize-none focus:outline-none focus:ring-0 font-mono text-sm leading-relaxed\"\n                style={{ height }}\n                data-testid=\"enhanced-markdown-textarea\"\n              />\n            </TabsContent>\n\n            <TabsContent value=\"preview\" className=\"mt-0\">\n              <div \n                className=\"p-4 overflow-auto prose prose-slate max-w-none\"\n                style={{ height }}\n              >\n                <ReactMarkdown\n                  remarkPlugins={[remarkGfm, remarkBreaks]}\n                  rehypePlugins={[rehypeRaw]}\n                  components={components}\n                >\n                  {value || \"*Nothing to preview yet. Start writing in the Write tab.*\"}\n                </ReactMarkdown>\n              </div>\n            </TabsContent>\n\n            <TabsContent value=\"split\" className=\"mt-0\">\n              <div className=\"grid grid-cols-2 gap-0\" style={{ height }}>\n                <div className=\"border-r border-slate-200\">\n                  <textarea\n                    ref={textareaRef}\n                    value={value}\n                    onChange={(e) => onChange(e.target.value)}\n                    onKeyDown={handleKeyDown}\n                    placeholder={placeholder}\n                    className=\"w-full h-full p-4 border-0 resize-none focus:outline-none focus:ring-0 font-mono text-sm leading-relaxed\"\n                    data-testid=\"enhanced-markdown-textarea-split\"\n                  />\n                </div>\n                <div className=\"overflow-auto p-4 prose prose-slate prose-sm max-w-none bg-slate-50\">\n                  <ReactMarkdown\n                    remarkPlugins={[remarkGfm, remarkBreaks]}\n                    rehypePlugins={[rehypeRaw]}\n                    components={components}\n                  >\n                    {value || \"*Nothing to preview yet. Start writing...*\"}\n                  </ReactMarkdown>\n                </div>\n              </div>\n            </TabsContent>\n          </Tabs>\n        ) : (\n          <textarea\n            ref={textareaRef}\n            value={value}\n            onChange={(e) => onChange(e.target.value)}\n            onKeyDown={handleKeyDown}\n            placeholder={placeholder}\n            className=\"w-full p-4 border-0 resize-none focus:outline-none focus:ring-0 font-mono text-sm leading-relaxed\"\n            style={{ height }}\n            data-testid=\"enhanced-markdown-textarea-simple\"\n          />\n        )}\n      </div>\n\n      {/* Help Text */}\n      <div className=\"bg-slate-50 border-t border-slate-200 px-4 py-2\">\n        <p className=\"text-xs text-slate-500\">\n          Supports GitHub Flavored Markdown with tables, task lists, syntax highlighting, and more. \n          Use <kbd className=\"bg-slate-200 px-1 rounded\">Ctrl+B</kbd> for bold, <kbd className=\"bg-slate-200 px-1 rounded\">Ctrl+I</kbd> for italic, \n          <kbd className=\"bg-slate-200 px-1 rounded\">Ctrl+K</kbd> for links.\n        </p>\n      </div>\n    </div>\n  );\n}","size_bytes":18111},"client/src/pages/markdown-editor.tsx":{"content":"import { useState } from \"react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Download, Upload, FileText, Copy } from \"lucide-react\";\nimport EnhancedMarkdownEditor from \"@/components/enhanced-markdown-editor\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { Link } from \"wouter\";\nimport Footer from \"@/components/footer\";\nimport diverWellLogo from \"@assets/DIVER_WELL_TRAINING-500x500-rbg-preview_1756088331820.png\";\n\nexport default function MarkdownEditor() {\n  const [content, setContent] = useState(`# Welcome to the Enhanced Markdown Editor\n\nThis is a powerful markdown editor with live preview, syntax highlighting, and advanced features.\n\n## Features\n\n- **Live Preview**: See your formatted content in real-time\n- **Split View**: Write and preview simultaneously\n- **Syntax Highlighting**: Code blocks with beautiful syntax highlighting\n- **Keyboard Shortcuts**: Quick formatting with Ctrl+B, Ctrl+I, Ctrl+K\n- **Word Count**: Track your writing progress\n- **Undo/Redo**: Full editing history management\n- **GitHub Flavored Markdown**: Tables, task lists, and more\n\n## Getting Started\n\nUse the toolbar above to format your text, or try these keyboard shortcuts:\n\n- \\`Ctrl+B\\` for **bold text**\n- \\`Ctrl+I\\` for *italic text*\n- \\`Ctrl+K\\` for [links](https://example.com)\n\n### Code Example\n\nHere's a JavaScript function:\n\n\\`\\`\\`javascript\nfunction calculateDiveTime(depth, airSupply) {\n  const safetyFactor = 0.8;\n  const consumptionRate = depth * 0.5;\n  return (airSupply * safetyFactor) / consumptionRate;\n}\n\\`\\`\\`\n\n### Task List\n\n- [x] Learn markdown basics\n- [x] Try the enhanced editor\n- [ ] Create professional content\n- [ ] Export your work\n\n### Table Example\n\n| Depth (m) | Pressure (bar) | Max Time (min) |\n|-----------|----------------|----------------|\n| 10        | 2.0            | 120           |\n| 20        | 3.0            | 80            |\n| 30        | 4.0            | 60            |\n\n---\n\n> **Tip**: Switch between Write, Preview, and Split View tabs to find your preferred editing style.\n\nHappy writing! 🚀`);\n\n  const { toast } = useToast();\n\n  const handleDownload = () => {\n    const blob = new Blob([content], { type: 'text/markdown' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'document.md';\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n    \n    toast({\n      title: \"Downloaded!\",\n      description: \"Your markdown file has been downloaded.\",\n    });\n  };\n\n  const handleUpload = () => {\n    const input = document.createElement('input');\n    input.type = 'file';\n    input.accept = '.md,.txt';\n    input.onchange = (e) => {\n      const file = (e.target as HTMLInputElement).files?.[0];\n      if (file) {\n        const reader = new FileReader();\n        reader.onload = (e) => {\n          const text = e.target?.result as string;\n          setContent(text);\n          toast({\n            title: \"File Loaded!\",\n            description: `${file.name} has been loaded into the editor.`,\n          });\n        };\n        reader.readAsText(file);\n      }\n    };\n    input.click();\n  };\n\n  const handleCopyToClipboard = async () => {\n    try {\n      await navigator.clipboard.writeText(content);\n      toast({\n        title: \"Copied!\",\n        description: \"Content copied to clipboard.\",\n      });\n    } catch (err) {\n      toast({\n        title: \"Error\",\n        description: \"Failed to copy to clipboard.\",\n        variant: \"destructive\",\n      });\n    }\n  };\n\n  const wordCount = content.trim() ? content.trim().split(/\\s+/).length : 0;\n  const charCount = content.length;\n  const readingTime = Math.ceil(wordCount / 200); // Average reading speed\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-white to-slate-50\">\n      {/* Header */}\n      <nav className=\"bg-white/80 backdrop-blur-md border-b border-slate-200 sticky top-0 z-50\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex justify-between items-center h-16\">\n            <Link href=\"/\">\n              <a className=\"flex items-center space-x-3\">\n                <img \n                  src={diverWellLogo} \n                  alt=\"Professional Diver - Diver Well Training\" \n                  className=\"w-10 h-10 rounded-lg\"\n                />\n                <div>\n                  <div className=\"text-lg font-bold text-slate-900\">Professional Diver</div>\n                  <div className=\"text-xs text-slate-500\">Markdown Editor</div>\n                </div>\n              </a>\n            </Link>\n            <div className=\"flex items-center space-x-4\">\n              <Link href=\"/dashboard\">\n                <a className=\"text-slate-600 hover:text-slate-900 font-medium\">\n                  Dashboard\n                </a>\n              </Link>\n              <Link href=\"/\">\n                <a className=\"text-slate-600 hover:text-slate-900 font-medium\">\n                  Home\n                </a>\n              </Link>\n            </div>\n          </div>\n        </div>\n      </nav>\n\n      <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        {/* Header Section */}\n        <div className=\"mb-8\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <div>\n              <h1 className=\"text-3xl font-bold text-slate-900 mb-2\">\n                Enhanced Markdown Editor\n              </h1>\n              <p className=\"text-lg text-slate-600\">\n                Create professional content with live preview and advanced formatting\n              </p>\n            </div>\n            <div className=\"flex items-center space-x-3\">\n              <Button\n                onClick={handleUpload}\n                variant=\"outline\"\n                className=\"flex items-center gap-2\"\n                data-testid=\"button-upload\"\n              >\n                <Upload className=\"w-4 h-4\" />\n                Import\n              </Button>\n              <Button\n                onClick={handleCopyToClipboard}\n                variant=\"outline\"\n                className=\"flex items-center gap-2\"\n                data-testid=\"button-copy\"\n              >\n                <Copy className=\"w-4 h-4\" />\n                Copy\n              </Button>\n              <Button\n                onClick={handleDownload}\n                className=\"bg-blue-600 hover:bg-blue-700 text-white flex items-center gap-2\"\n                data-testid=\"button-download\"\n              >\n                <Download className=\"w-4 h-4\" />\n                Export\n              </Button>\n            </div>\n          </div>\n\n          {/* Stats */}\n          <div className=\"flex items-center space-x-6 text-sm text-slate-600\">\n            <div className=\"flex items-center gap-2\">\n              <FileText className=\"w-4 h-4\" />\n              <span>{wordCount} words</span>\n            </div>\n            <div>\n              <span>{charCount} characters</span>\n            </div>\n            <div>\n              <span>~{readingTime} min read</span>\n            </div>\n          </div>\n        </div>\n\n        {/* Enhanced Markdown Editor */}\n        <Card className=\"mb-8\">\n          <CardContent className=\"p-0\">\n            <EnhancedMarkdownEditor\n              value={content}\n              onChange={setContent}\n              placeholder=\"Start writing your markdown content here...\"\n              height=\"700px\"\n              showWordCount={true}\n              showPreview={true}\n            />\n          </CardContent>\n        </Card>\n\n        {/* Quick Tips */}\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"text-lg\">Quick Tips</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n              <div className=\"space-y-2\">\n                <h4 className=\"font-semibold text-slate-900\">Keyboard Shortcuts</h4>\n                <ul className=\"text-sm text-slate-600 space-y-1\">\n                  <li><kbd className=\"bg-slate-200 px-1 rounded\">Ctrl+B</kbd> Bold text</li>\n                  <li><kbd className=\"bg-slate-200 px-1 rounded\">Ctrl+I</kbd> Italic text</li>\n                  <li><kbd className=\"bg-slate-200 px-1 rounded\">Ctrl+K</kbd> Insert link</li>\n                  <li><kbd className=\"bg-slate-200 px-1 rounded\">Ctrl+Z</kbd> Undo</li>\n                </ul>\n              </div>\n              \n              <div className=\"space-y-2\">\n                <h4 className=\"font-semibold text-slate-900\">Formatting</h4>\n                <ul className=\"text-sm text-slate-600 space-y-1\">\n                  <li><code># Text</code> Header 1</li>\n                  <li><code>## Text</code> Header 2</li>\n                  <li><code>**Text**</code> Bold</li>\n                  <li><code>*Text*</code> Italic</li>\n                </ul>\n              </div>\n              \n              <div className=\"space-y-2\">\n                <h4 className=\"font-semibold text-slate-900\">Advanced</h4>\n                <ul className=\"text-sm text-slate-600 space-y-1\">\n                  <li><code>```code```</code> Code block</li>\n                  <li><code>- [ ] Task</code> Checklist</li>\n                  <li><code>| Table |</code> Tables</li>\n                  <li><code>&gt; Quote</code> Blockquote</li>\n                </ul>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      </main>\n\n      <Footer />\n    </div>\n  );\n}","size_bytes":9639},"attached_assets/DIVER-WELL-TRAINING-main/README.md":{"content":"# DIVER-WELL-TRAINING\n# Diver Well - Professional Training Platform\n\nA comprehensive, brand-neutral training and revision platform for commercial divers, featuring AI-powered tutoring, interactive lessons, and progress tracking.\n\n## Features\n\n- **AI-Powered Learning**: Specialized AI tutors for each diving discipline\n- **Interactive Lessons**: Rich markdown content with practice scenarios\n- **Progress Tracking**: Real-time progress monitoring and assessment\n- **Quiz System**: Comprehensive testing with multiple question types\n- **User Authentication**: Secure login and role-based access\n- **Responsive Design**: Modern, mobile-friendly interface\n- **Written Exams**: Timed assessments with detailed feedback\n- **Brand-Neutral Content**: Professional, industry-standard training materials\n\n## Tech Stack\n\n- **Frontend**: Next.js 15, React 19, TypeScript\n- **Styling**: Tailwind CSS\n- **Database**: PostgreSQL with Prisma ORM\n- **Authentication**: NextAuth.js\n- **Deployment**: Vercel-ready\n\n## Prerequisites\n\n- Node.js 18+ and npm\n- PostgreSQL database\n- Git\n\n## Installation\n\n1. **Clone the repository**\n   ```bash\n   git clone <repository-url>\n   cd apps/web\n   ```\n\n2. **Install dependencies**\n   ```bash\n   npm install\n   ```\n\n3. **Set up environment variables**\n   Create a `.env.local` file in the root directory:\n   ```env\n   DATABASE_URL=\"postgresql://username:password@localhost:5432/diver_well\"\n   NEXTAUTH_SECRET=\"your-secret-key-here\"\n   NEXTAUTH_URL=\"http://localhost:3000\"\n   ```\n\n4. **Set up the database**\n   ```bash\n   npm run db:generate\n   npm run db:push\n   npm run db:seed\n   ```\n\n5. **Start the development server**\n   ```bash\n   npm run dev\n   ```\n\n## Available Scripts\n\n- `npm run dev` - Start development server\n- `npm run build` - Build for production\n- `npm run start` - Start production server\n- `npm run lint` - Run ESLint\n- `npm run db:generate` - Generate Prisma client\n- `npm run db:push` - Push schema to database\n- `npm run db:seed` - Seed database with initial data\n\n## Project Structure\n\n```\nsrc/\n├── app/                    # Next.js app directory\n│   ├── api/               # API routes\n│   ├── auth/              # Authentication pages\n│   ├── dashboard/         # User dashboard\n│   └── tracks/            # Track detail pages\n├── components/            # React components\n│   ├── LessonViewer.tsx   # Lesson display component\n│   └── QuizSystem.tsx     # Quiz and exam system\n├── lib/                   # Utility libraries\n└── content/               # Lesson content files\n│   ├── ndt-lessons.ts     # NDT training content\n│   ├── alst-lessons.ts    # ALST training content\n│   └── lst-lessons.ts     # LST training content\nprisma/\n├── schema.prisma         # Database schema\n└── seed.ts              # Database seeder\n```\n\n## Database Schema\n\nThe platform uses the following main entities:\n\n- **Users**: Authentication and role management\n- **Tracks**: Learning paths and courses\n- **Lessons**: Individual learning modules\n- **Questions**: Quiz and assessment items\n- **Progress**: User progress tracking\n- **Exam Results**: Assessment results and scores\n\n## API Endpoints\n\n- `GET /api/tracks` - Fetch all learning tracks\n- `GET /api/tracks/[id]` - Fetch specific track with lessons\n- `POST /api/auth/signup` - User registration\n- `GET /api/progress` - Fetch user progress\n- `POST /api/progress` - Update user progress\n\n## Training Tracks\n\nThe platform includes comprehensive training tracks for:\n\n### 1. Inspection & NDT\n**AI Tutor for Non-Destructive Testing and Inspection**\n- Visual inspection fundamentals\n- Corrosion assessment techniques\n- CP surveying procedures\n- Thickness gauging methods\n- Magnetic particle inspection\n- Photo/video documentation\n- Marine growth identification\n\n### 2. Diver Medic Technician\n**AI Tutor for Diver Medic Technician**\n- Scene assessment and safety\n- ABCDE emergency protocols\n- Airway management techniques\n- Breathing support procedures\n- Circulation assessment\n- Disability evaluation\n- Exposure management\n\n### 3. Commercial Dive Supervisor\n**AI Tutor for Commercial Dive Supervisor**\n- Dive planning fundamentals\n- Risk assessment methodologies\n- Hazard identification\n- Communication protocols\n- Emergency response procedures\n- Quality assurance systems\n\n### 4. Air Diver\n**AI Tutor for Air Diving**\n- Diving physics review\n- Gas management concepts\n- Ascent best practices\n- Problem-solving drills\n- Tool handling safety\n- Basic communications\n\n### 5. Saturation Diver\n**AI Tutor for Saturation Diving**\n- Saturation diving overview\n- System components and operation\n- Human factors in confined environments\n- High-level risk themes\n- Life support systems\n\n### 6. Assistant Life Support Technician (ALST)\n**AI Tutor for Assistant Life Support Technician**\n- Life support system operation\n- Gas management principles\n- Environmental control systems\n- Emergency procedures\n- Equipment maintenance\n- Safety protocols\n\n### 7. Life Support Technician (LST)\n**AI Tutor for Life Support Technician**\n- Advanced life support systems\n- System design principles\n- Troubleshooting methodologies\n- Emergency management\n- Team leadership\n- Quality assurance\n\n## AI Tutor Features\n\nEach track features specialized AI tutors that provide:\n\n### Personalized Learning\n- **Adaptive Content**: Content adjusts based on user progress\n- **Learning Paths**: Structured progression through topics\n- **Practice Scenarios**: Real-world simulation exercises\n- **Interactive Guidance**: Step-by-step problem-solving assistance\n\n### Assessment and Testing\n- **Multiple Choice Questions**: Standard assessment format\n- **True/False Questions**: Quick knowledge checks\n- **Short Answer Questions**: Detailed response assessment\n- **Timed Exams**: Professional examination environment\n- **Detailed Feedback**: Explanations for all answers\n- **Progress Tracking**: Real-time performance monitoring\n\n### Practice Scenarios\nEach lesson includes realistic scenarios such as:\n- **Pipeline Inspection**: Corrosion assessment procedures\n- **Emergency Response**: Medical emergency protocols\n- **System Failures**: Troubleshooting procedures\n- **Equipment Malfunctions**: Maintenance and repair\n\n## Quiz and Exam System\n\n### Features\n- **Timed Assessments**: 30-minute exam windows\n- **Multiple Question Types**: MC, True/False, Short Answer\n- **Real-time Progress**: Live progress tracking\n- **Detailed Results**: Comprehensive feedback and explanations\n- **Score Tracking**: Performance history and analytics\n- **Certificate Generation**: Professional certification tracking\n\n### Question Types\n1. **Multiple Choice**: Standard 4-option questions\n2. **True/False**: Quick knowledge verification\n3. **Short Answer**: Detailed response assessment\n\n### Assessment Process\n1. **Pre-Assessment**: Review lesson content\n2. **Quiz Launch**: Start timed assessment\n3. **Question Navigation**: Move between questions\n4. **Auto-Submit**: Automatic submission when time expires\n5. **Results Review**: Detailed feedback and explanations\n6. **Progress Update**: Automatic progress tracking\n\n## Content Standards\n\n### Brand-Neutral Approach\n- **Industry Standards**: Based on recognized diving standards\n- **Professional Language**: Clear, technical terminology\n- **Safety Focus**: Emphasis on safety procedures\n- **Best Practices**: Current industry best practices\n\n### Quality Assurance\n- **Expert Review**: Content reviewed by industry professionals\n- **Regular Updates**: Continuous content improvement\n- **Accuracy Verification**: Technical accuracy validation\n- **Compliance Check**: Regulatory compliance verification\n\n## User Experience\n\n### Learning Interface\n- **Clean Design**: Modern, professional interface\n- **Responsive Layout**: Works on all device sizes\n- **Progress Indicators**: Clear progress visualization\n- **Navigation**: Intuitive lesson navigation\n\n### Assessment Interface\n- **Professional Exams**: Timed, secure assessment environment\n- **Question Review**: Ability to review and change answers\n- **Time Management**: Clear time remaining indicators\n- **Results Display**: Comprehensive results with explanations\n\n## Deployment\n\n### Vercel Deployment\n\n1. Connect your repository to Vercel\n2. Set up environment variables in Vercel dashboard\n3. Deploy automatically on push to main branch\n\n### Manual Deployment\n\n1. Build the application: `npm run build`\n2. Start the production server: `npm run start`\n\n## Contributing\n\n1. Fork the repository\n2. Create a feature branch\n3. Make your changes\n4. Submit a pull request\n\n## License\n\nThis project is licensed under the MIT License.\n\n## Support\n\nFor technical support or questions about the platform, please contact the development team.\n\n---\n\n**Note**: This platform is for training use only. For operational work, follow your employer's procedures, current project specifications, and medical direction.\n#\u0000 \u0000D\u0000i\u0000v\u0000e\u0000r\u0000-\u0000W\u0000e\u0000l\u0000l\u0000\n\u0000\n\u0000\n","size_bytes":8959},"attached_assets/Diver-Well-main/README.md":{"content":"# Diver Well - Professional Training Platform\n\nA comprehensive, brand-neutral training and revision platform for commercial divers, featuring AI-powered tutoring, interactive lessons, and progress tracking.\n\n## Features\n\n- **AI-Powered Learning**: Specialized AI tutors for each diving discipline\n- **Interactive Lessons**: Rich markdown content with practice scenarios\n- **Progress Tracking**: Real-time progress monitoring and assessment\n- **Quiz System**: Comprehensive testing with multiple question types\n- **User Authentication**: Secure login and role-based access\n- **Responsive Design**: Modern, mobile-friendly interface\n- **Written Exams**: Timed assessments with detailed feedback\n- **Brand-Neutral Content**: Professional, industry-standard training materials\n\n## Tech Stack\n\n- **Frontend**: Next.js 15, React 19, TypeScript\n- **Styling**: Tailwind CSS\n- **Database**: PostgreSQL with Prisma ORM\n- **Authentication**: NextAuth.js\n- **Deployment**: Vercel-ready\n\n## Prerequisites\n\n- Node.js 18+ and npm\n- PostgreSQL database\n- Git\n\n## Installation\n\n1. **Clone the repository**\n   ```bash\n   git clone <repository-url>\n   cd apps/web\n   ```\n\n2. **Install dependencies**\n   ```bash\n   npm install\n   ```\n\n3. **Set up environment variables**\n   Create a `.env.local` file in the root directory:\n   ```env\n   DATABASE_URL=\"postgresql://username:password@localhost:5432/diver_well\"\n   NEXTAUTH_SECRET=\"your-secret-key-here\"\n   NEXTAUTH_URL=\"http://localhost:3000\"\n   ```\n\n4. **Set up the database**\n   ```bash\n   npm run db:generate\n   npm run db:push\n   npm run db:seed\n   ```\n\n5. **Start the development server**\n   ```bash\n   npm run dev\n   ```\n\n## Available Scripts\n\n- `npm run dev` - Start development server\n- `npm run build` - Build for production\n- `npm run start` - Start production server\n- `npm run lint` - Run ESLint\n- `npm run db:generate` - Generate Prisma client\n- `npm run db:push` - Push schema to database\n- `npm run db:seed` - Seed database with initial data\n\n## Project Structure\n\n```\nsrc/\n├── app/                    # Next.js app directory\n│   ├── api/               # API routes\n│   ├── auth/              # Authentication pages\n│   ├── dashboard/         # User dashboard\n│   └── tracks/            # Track detail pages\n├── components/            # React components\n│   ├── LessonViewer.tsx   # Lesson display component\n│   └── QuizSystem.tsx     # Quiz and exam system\n├── lib/                   # Utility libraries\n└── content/               # Lesson content files\n│   ├── ndt-lessons.ts     # NDT training content\n│   ├── alst-lessons.ts    # ALST training content\n│   └── lst-lessons.ts     # LST training content\nprisma/\n├── schema.prisma         # Database schema\n└── seed.ts              # Database seeder\n```\n\n## Database Schema\n\nThe platform uses the following main entities:\n\n- **Users**: Authentication and role management\n- **Tracks**: Learning paths and courses\n- **Lessons**: Individual learning modules\n- **Questions**: Quiz and assessment items\n- **Progress**: User progress tracking\n- **Exam Results**: Assessment results and scores\n\n## API Endpoints\n\n- `GET /api/tracks` - Fetch all learning tracks\n- `GET /api/tracks/[id]` - Fetch specific track with lessons\n- `POST /api/auth/signup` - User registration\n- `GET /api/progress` - Fetch user progress\n- `POST /api/progress` - Update user progress\n\n## Training Tracks\n\nThe platform includes comprehensive training tracks for:\n\n### 1. Inspection & NDT\n**AI Tutor for Non-Destructive Testing and Inspection**\n- Visual inspection fundamentals\n- Corrosion assessment techniques\n- CP surveying procedures\n- Thickness gauging methods\n- Magnetic particle inspection\n- Photo/video documentation\n- Marine growth identification\n\n### 2. Diver Medic Technician\n**AI Tutor for Diver Medic Technician**\n- Scene assessment and safety\n- ABCDE emergency protocols\n- Airway management techniques\n- Breathing support procedures\n- Circulation assessment\n- Disability evaluation\n- Exposure management\n\n### 3. Commercial Dive Supervisor\n**AI Tutor for Commercial Dive Supervisor**\n- Dive planning fundamentals\n- Risk assessment methodologies\n- Hazard identification\n- Communication protocols\n- Emergency response procedures\n- Quality assurance systems\n\n### 4. Air Diver\n**AI Tutor for Air Diving**\n- Diving physics review\n- Gas management concepts\n- Ascent best practices\n- Problem-solving drills\n- Tool handling safety\n- Basic communications\n\n### 5. Saturation Diver\n**AI Tutor for Saturation Diving**\n- Saturation diving overview\n- System components and operation\n- Human factors in confined environments\n- High-level risk themes\n- Life support systems\n\n### 6. Assistant Life Support Technician (ALST)\n**AI Tutor for Assistant Life Support Technician**\n- Life support system operation\n- Gas management principles\n- Environmental control systems\n- Emergency procedures\n- Equipment maintenance\n- Safety protocols\n\n### 7. Life Support Technician (LST)\n**AI Tutor for Life Support Technician**\n- Advanced life support systems\n- System design principles\n- Troubleshooting methodologies\n- Emergency management\n- Team leadership\n- Quality assurance\n\n## AI Tutor Features\n\nEach track features specialized AI tutors that provide:\n\n### Personalized Learning\n- **Adaptive Content**: Content adjusts based on user progress\n- **Learning Paths**: Structured progression through topics\n- **Practice Scenarios**: Real-world simulation exercises\n- **Interactive Guidance**: Step-by-step problem-solving assistance\n\n### Assessment and Testing\n- **Multiple Choice Questions**: Standard assessment format\n- **True/False Questions**: Quick knowledge checks\n- **Short Answer Questions**: Detailed response assessment\n- **Timed Exams**: Professional examination environment\n- **Detailed Feedback**: Explanations for all answers\n- **Progress Tracking**: Real-time performance monitoring\n\n### Practice Scenarios\nEach lesson includes realistic scenarios such as:\n- **Pipeline Inspection**: Corrosion assessment procedures\n- **Emergency Response**: Medical emergency protocols\n- **System Failures**: Troubleshooting procedures\n- **Equipment Malfunctions**: Maintenance and repair\n\n## Quiz and Exam System\n\n### Features\n- **Timed Assessments**: 30-minute exam windows\n- **Multiple Question Types**: MC, True/False, Short Answer\n- **Real-time Progress**: Live progress tracking\n- **Detailed Results**: Comprehensive feedback and explanations\n- **Score Tracking**: Performance history and analytics\n- **Certificate Generation**: Professional certification tracking\n\n### Question Types\n1. **Multiple Choice**: Standard 4-option questions\n2. **True/False**: Quick knowledge verification\n3. **Short Answer**: Detailed response assessment\n\n### Assessment Process\n1. **Pre-Assessment**: Review lesson content\n2. **Quiz Launch**: Start timed assessment\n3. **Question Navigation**: Move between questions\n4. **Auto-Submit**: Automatic submission when time expires\n5. **Results Review**: Detailed feedback and explanations\n6. **Progress Update**: Automatic progress tracking\n\n## Content Standards\n\n### Brand-Neutral Approach\n- **Industry Standards**: Based on recognized diving standards\n- **Professional Language**: Clear, technical terminology\n- **Safety Focus**: Emphasis on safety procedures\n- **Best Practices**: Current industry best practices\n\n### Quality Assurance\n- **Expert Review**: Content reviewed by industry professionals\n- **Regular Updates**: Continuous content improvement\n- **Accuracy Verification**: Technical accuracy validation\n- **Compliance Check**: Regulatory compliance verification\n\n## User Experience\n\n### Learning Interface\n- **Clean Design**: Modern, professional interface\n- **Responsive Layout**: Works on all device sizes\n- **Progress Indicators**: Clear progress visualization\n- **Navigation**: Intuitive lesson navigation\n\n### Assessment Interface\n- **Professional Exams**: Timed, secure assessment environment\n- **Question Review**: Ability to review and change answers\n- **Time Management**: Clear time remaining indicators\n- **Results Display**: Comprehensive results with explanations\n\n## Deployment\n\n### Vercel Deployment\n\n1. Connect your repository to Vercel\n2. Set up environment variables in Vercel dashboard\n3. Deploy automatically on push to main branch\n\n### Manual Deployment\n\n1. Build the application: `npm run build`\n2. Start the production server: `npm run start`\n\n## Contributing\n\n1. Fork the repository\n2. Create a feature branch\n3. Make your changes\n4. Submit a pull request\n\n## License\n\nThis project is licensed under the MIT License.\n\n## Support\n\nFor technical support or questions about the platform, please contact the development team.\n\n---\n\n**Note**: This platform is for training use only. For operational work, follow your employer's procedures, current project specifications, and medical direction.\n#\u0000 \u0000D\u0000i\u0000v\u0000e\u0000r\u0000-\u0000W\u0000e\u0000l\u0000l\u0000\r\u0000\n\u0000","size_bytes":8936},"attached_assets/Diver-Well-main/content/alst-lessons.ts":{"content":"export const alstLessons = [\r\n  {\r\n    title: 'AI Tutor: ALST Fundamentals',\r\n    content: `# AI Tutor: Assistant Life Support Technician Fundamentals\r\n\r\n## Welcome to Your ALST AI Tutor\r\n\r\nI'm your specialized AI tutor for Assistant Life Support Technician training. I'll guide you through the essential skills needed to support life support systems in diving operations.\r\n\r\n## Learning Objectives\r\n- Master life support system components\r\n- Understand gas management principles\r\n- Learn environmental control systems\r\n- Develop emergency response skills\r\n- Practice equipment maintenance procedures\r\n\r\n## Life Support System Components\r\n\r\n### Gas Management Systems\r\n**Primary Gas Supply**: High-pressure gas storage and distribution\r\n**Gas Analysis**: Continuous monitoring of gas composition\r\n**Flow Control**: Regulated gas delivery to chambers\r\n**Backup Supply**: Independent backup gas systems\r\n\r\n**AI Tutor Tip**: Gas management is the heart of life support. Always maintain redundant systems.\r\n\r\n### Environmental Control Systems\r\n**Temperature Control**: Heating and cooling systems\r\n**Humidity Control**: Moisture management\r\n**Air Circulation**: Ventilation and filtration\r\n**CO₂ Removal**: Chemical or mechanical scrubbers\r\n\r\n### Monitoring Systems\r\n**Gas Analyzers**: Oxygen, helium, CO₂ monitoring\r\n**Environmental Sensors**: Temperature, humidity, pressure\r\n**Alarm Systems**: Automatic warning systems\r\n**Data Logging**: Continuous record keeping\r\n\r\n## Gas Management Principles\r\n\r\n### Oxygen Control\r\n**Safe Range**: 0.4-0.6 ATA oxygen partial pressure\r\n**Monitoring**: Continuous oxygen analysis\r\n**Control**: Automatic and manual adjustment\r\n**Safety**: Backup oxygen supply\r\n\r\n### Helium Management\r\n**Primary Diluent**: Helium for deep diving\r\n**Analysis**: Helium concentration monitoring\r\n**Supply**: High-pressure helium storage\r\n**Conservation**: Efficient gas usage\r\n\r\n### CO₂ Removal\r\n**Scrubber Systems**: Chemical CO₂ removal\r\n**Monitoring**: CO₂ level analysis\r\n**Maintenance**: Regular scrubber replacement\r\n**Backup**: Multiple scrubber systems\r\n\r\n## Practice Scenarios\r\n\r\n### Scenario 1: Oxygen Level Drop\r\nThe oxygen level in the chamber drops to 0.3 ATA. What's your response?\r\n\r\n**AI Tutor Response**:\r\n1. **Immediate**: Increase oxygen flow to chamber\r\n2. **Monitor**: Watch oxygen level recovery\r\n3. **Investigate**: Check for system leaks or failures\r\n4. **Backup**: Activate backup oxygen supply if needed\r\n5. **Document**: Record incident and actions taken\r\n\r\n### Scenario 2: CO₂ Scrubber Failure\r\nA CO₂ scrubber shows signs of exhaustion. What's your action?\r\n\r\n**AI Tutor Response**:\r\n1. **Switch**: Activate backup scrubber system\r\n2. **Monitor**: Watch CO₂ levels closely\r\n3. **Replace**: Prepare new scrubber for installation\r\n4. **Communicate**: Inform supervisor of situation\r\n5. **Document**: Record scrubber performance data\r\n\r\n## Assessment Questions\r\n\r\n### Question 1\r\nWhat is the safe oxygen partial pressure range in saturation diving?\r\n- A) 0.2-0.4 ATA\r\n- B) 0.4-0.6 ATA\r\n- C) 0.6-0.8 ATA\r\n- D) 0.8-1.0 ATA\r\n\r\n**Correct Answer**: B) 0.4-0.6 ATA\r\n\r\n### Question 2\r\nWhat is the primary purpose of CO₂ scrubbers?\r\n- A) Remove oxygen\r\n- B) Remove carbon dioxide\r\n- C) Remove helium\r\n- D) Remove nitrogen\r\n\r\n**Correct Answer**: B) Remove carbon dioxide\r\n\r\n### Question 3\r\nWhat should you do if gas analysis equipment fails?\r\n- A) Ignore the failure\r\n- B) Use backup analyzers\r\n- C) Stop all operations\r\n- D) Increase gas flow\r\n\r\n**Correct Answer**: B) Use backup analyzers\r\n\r\n## Equipment Maintenance\r\n\r\n### Daily Checks\r\n- **Gas Levels**: Monitor all gas supplies\r\n- **Equipment Function**: Test all systems\r\n- **Alarm Systems**: Verify alarm functionality\r\n- **Documentation**: Record all readings\r\n\r\n### Weekly Maintenance\r\n- **System Calibration**: Calibrate monitoring equipment\r\n- **Filter Replacement**: Replace air filters\r\n- **Equipment Inspection**: Thorough system inspection\r\n- **Backup Testing**: Test backup systems\r\n\r\n### Monthly Procedures\r\n- **Scrubber Replacement**: Replace CO₂ scrubbers\r\n- **System Overhaul**: Comprehensive maintenance\r\n- **Training Review**: Update procedures and training\r\n- **Documentation Review**: Update maintenance records\r\n\r\n## Emergency Procedures\r\n\r\n### System Failures\r\n- **Power Failure**: Activate backup power\r\n- **Gas Contamination**: Switch to backup supply\r\n- **Equipment Malfunction**: Use backup equipment\r\n- **Communication Loss**: Establish emergency communication\r\n\r\n### Medical Emergencies\r\n- **Medical Lock**: Prepare for medical personnel\r\n- **Emergency Decompression**: Plan emergency procedures\r\n- **Evacuation**: Coordinate evacuation procedures\r\n- **Documentation**: Record all emergency actions\r\n\r\n## Safety Protocols\r\n\r\n### Personal Safety\r\n- **PPE**: Wear appropriate protective equipment\r\n- **Training**: Maintain current certifications\r\n- **Communication**: Clear communication protocols\r\n- **Documentation**: Complete record keeping\r\n\r\n### System Safety\r\n- **Redundancy**: Maintain backup systems\r\n- **Monitoring**: Continuous system monitoring\r\n- **Maintenance**: Regular preventive maintenance\r\n- **Testing**: Regular system testing\r\n\r\n## Next Steps\r\nIn the next lesson, we'll explore advanced gas management techniques and troubleshooting procedures.\r\n\r\nRemember: As an ALST, you are responsible for the lives of divers. Attention to detail and quick response are essential.`\r\n  },\r\n  {\r\n    title: 'AI Tutor: Gas Management Systems',\r\n    content: `# AI Tutor: Gas Management Systems\r\n\r\n## Welcome Back to Your ALST AI Tutor\r\n\r\nIn this lesson, I'll guide you through advanced gas management systems and troubleshooting procedures.\r\n\r\n## Learning Objectives\r\n- Master gas system components and operation\r\n- Understand gas analysis and monitoring\r\n- Learn troubleshooting procedures\r\n- Develop emergency response skills\r\n- Practice system maintenance\r\n\r\n## Gas System Components\r\n\r\n### Primary Gas Supply\r\n**Storage**: High-pressure cylinders and bulk storage\r\n**Distribution**: Piping and valve systems\r\n**Control**: Pressure regulators and flow meters\r\n**Safety**: Relief valves and pressure switches\r\n\r\n### Gas Analysis Equipment\r\n**Oxygen Analyzers**: Measure oxygen partial pressure\r\n**Helium Analyzers**: Monitor helium concentration\r\n**CO₂ Monitors**: Measure carbon dioxide levels\r\n**Moisture Indicators**: Monitor humidity levels\r\n\r\n### Backup Systems\r\n**Emergency Supply**: Independent backup gas storage\r\n**Quick Connect**: Rapid connection to emergency supply\r\n**Pressure Monitoring**: Monitor backup gas pressure\r\n**Documentation**: Complete backup system records\r\n\r\n## Gas Analysis and Monitoring\r\n\r\n### Continuous Monitoring\r\n- **Real-time Analysis**: Continuous gas composition monitoring\r\n- **Alarm Systems**: Automatic warning systems\r\n- **Data Logging**: Continuous data recording\r\n- **Trend Analysis**: Identify system trends\r\n\r\n### Calibration Procedures\r\n- **Regular Calibration**: Calibrate analyzers regularly\r\n- **Standard Gases**: Use certified calibration gases\r\n- **Documentation**: Record calibration data\r\n- **Verification**: Verify calibration accuracy\r\n\r\n## Troubleshooting Procedures\r\n\r\n### Systematic Approach\r\n1. **Identify Problem**: Define the issue clearly\r\n2. **Gather Information**: Collect relevant data\r\n3. **Analyze Options**: Consider possible solutions\r\n4. **Implement Solution**: Execute chosen solution\r\n5. **Verify Results**: Confirm problem resolution\r\n6. **Document Actions**: Record all actions taken\r\n\r\n### Common Issues\r\n**Gas Contamination**: Identify and eliminate contamination sources\r\n**Equipment Failure**: Diagnose and repair or replace equipment\r\n**System Malfunction**: Identify root cause and correct\r\n**Communication Problems**: Restore communication systems\r\n\r\n## Practice Scenarios\r\n\r\n### Scenario 1: Oxygen Analyzer Failure\r\nThe primary oxygen analyzer fails during saturation operation.\r\n\r\n**AI Tutor Response**:\r\n1. **Switch**: Activate backup oxygen analyzer\r\n2. **Monitor**: Continue monitoring with backup\r\n3. **Investigate**: Determine cause of failure\r\n4. **Repair**: Repair or replace failed analyzer\r\n5. **Test**: Verify repair and recalibrate\r\n\r\n### Scenario 2: Gas Contamination\r\nHelium supply shows contamination with air.\r\n\r\n**AI Tutor Response**:\r\n1. **Isolate**: Isolate contaminated supply\r\n2. **Switch**: Activate backup gas supply\r\n3. **Analyze**: Test gas quality\r\n4. **Investigate**: Find contamination source\r\n5. **Correct**: Eliminate contamination source\r\n\r\n## Assessment Questions\r\n\r\n### Question 1\r\nWhat is the first step in troubleshooting a gas system failure?\r\n- A) Call for help\r\n- B) Identify the problem\r\n- C) Switch to backup\r\n- D) Document the failure\r\n\r\n**Correct Answer**: B) Identify the problem\r\n\r\n### Question 2\r\nHow often should gas analyzers be calibrated?\r\n- A) Daily\r\n- B) Weekly\r\n- C) Monthly\r\n- D) Annually\r\n\r\n**Correct Answer**: C) Monthly\r\n\r\n### Question 3\r\nWhat should you do if the primary oxygen analyzer fails?\r\n- A) Stop all operations\r\n- B) Activate backup analyzer\r\n- C) Ignore the failure\r\n- D) Call for help\r\n\r\n**Correct Answer**: B) Activate backup analyzer\r\n\r\n## Emergency Response\r\n\r\n### Immediate Actions\r\n- **Assess Situation**: Evaluate the emergency\r\n- **Activate Backups**: Switch to backup systems\r\n- **Communicate**: Inform relevant personnel\r\n- **Document**: Record all actions taken\r\n\r\n### Emergency Procedures\r\n- **Gas Contamination**: Switch to clean gas supply\r\n- **Equipment Failure**: Activate backup equipment\r\n- **System Failure**: Implement emergency procedures\r\n- **Evacuation**: Coordinate evacuation if necessary\r\n\r\n## Quality Assurance\r\n\r\n### System Monitoring\r\n- **Continuous Monitoring**: 24/7 system monitoring\r\n- **Data Analysis**: Regular data analysis and review\r\n- **Trend Analysis**: Identify system trends\r\n- **Predictive Maintenance**: Prevent system failures\r\n\r\n### Documentation\r\n- **Maintenance Records**: Complete maintenance documentation\r\n- **Incident Reports**: Detailed incident documentation\r\n- **Training Records**: Training and certification records\r\n- **Quality Audits**: Regular quality assurance audits\r\n\r\n## Next Steps\r\nIn the next lesson, we'll explore environmental control systems and their maintenance.\r\n\r\nRemember: Gas management is critical to diver safety. Always maintain redundant systems and be prepared for emergencies.`\r\n  }\r\n];\r\n","size_bytes":10361},"attached_assets/Diver-Well-main/content/lst-lessons.ts":{"content":"export const lstLessons = [\r\n  {\r\n    title: 'AI Tutor: LST Advanced Systems',\r\n    content: `# AI Tutor: Life Support Technician Advanced Systems\r\n\r\n## Welcome to Your LST AI Tutor\r\n\r\nI'm your specialized AI tutor for Life Support Technician training. I'll guide you through advanced life support systems, troubleshooting, and team leadership.\r\n\r\n## Learning Objectives\r\n- Master advanced life support systems\r\n- Understand system design principles\r\n- Learn troubleshooting methodologies\r\n- Develop emergency management skills\r\n- Practice team leadership techniques\r\n\r\n## Advanced Life Support Systems\r\n\r\n### System Design Principles\r\n**Redundancy**: Multiple backup systems for critical functions\r\n**Modularity**: Systems that can be isolated and repaired\r\n**Monitoring**: Comprehensive monitoring of all parameters\r\n**Safety**: Fail-safe design with automatic protection\r\n\r\n**AI Tutor Tip**: Good system design prevents failures before they occur.\r\n\r\n### Gas Management Systems\r\n**Primary Supply**: High-pressure gas storage and distribution\r\n**Backup Systems**: Independent backup gas supplies\r\n**Analysis Equipment**: Multiple gas analyzers for redundancy\r\n**Control Systems**: Automatic and manual control capabilities\r\n\r\n### Environmental Control\r\n**Temperature Management**: Heating and cooling systems\r\n**Humidity Control**: Moisture management systems\r\n**Air Quality**: Filtration and purification systems\r\n**Pressure Control**: Chamber pressure management\r\n\r\n## Troubleshooting Methodologies\r\n\r\n### Systematic Approach\r\n1. **Identify Problem**: Define the issue clearly\r\n2. **Gather Information**: Collect relevant data\r\n3. **Analyze Options**: Consider possible solutions\r\n4. **Implement Solution**: Execute chosen solution\r\n5. **Verify Results**: Confirm problem resolution\r\n6. **Document Actions**: Record all actions taken\r\n\r\n### Common Issues\r\n**Gas Contamination**: Identify and eliminate contamination sources\r\n**Equipment Failure**: Diagnose and repair or replace equipment\r\n**System Malfunction**: Identify root cause and correct\r\n**Communication Problems**: Restore communication systems\r\n\r\n## Practice Scenarios\r\n\r\n### Scenario 1: Multiple System Failure\r\nPower failure occurs during saturation operation. What's your response?\r\n\r\n**AI Tutor Response**:\r\n1. **Immediate**: Activate backup power systems\r\n2. **Assessment**: Evaluate all system status\r\n3. **Communication**: Establish emergency communication\r\n4. **Monitoring**: Continue vital signs monitoring\r\n5. **Documentation**: Record all actions and system status\r\n\r\n### Scenario 2: Gas Contamination\r\nHelium supply shows contamination. What's your action plan?\r\n\r\n**AI Tutor Response**:\r\n1. **Isolate**: Isolate contaminated supply\r\n2. **Switch**: Activate backup gas supply\r\n3. **Analyze**: Test gas quality\r\n4. **Investigate**: Find contamination source\r\n5. **Correct**: Eliminate contamination source\r\n\r\n## Assessment Questions\r\n\r\n### Question 1\r\nWhat is the first step in troubleshooting?\r\n- A) Implement solution\r\n- B) Identify problem\r\n- C) Gather information\r\n- D) Analyze options\r\n\r\n**Correct Answer**: B) Identify problem\r\n\r\n### Question 2\r\nWhat is the primary principle of system design?\r\n- A) Cost effectiveness\r\n- B) Redundancy\r\n- C) Simplicity\r\n- D) Speed\r\n\r\n**Correct Answer**: B) Redundancy\r\n\r\n### Question 3\r\nWhat should you do first in a power failure?\r\n- A) Call for help\r\n- B) Activate backup power\r\n- C) Evacuate chamber\r\n- D) Document failure\r\n\r\n**Correct Answer**: B) Activate backup power\r\n\r\n## Emergency Management\r\n\r\n### Emergency Response\r\n- **Immediate Actions**: Quick response to emergencies\r\n- **Communication**: Clear communication protocols\r\n- **Coordination**: Team coordination and leadership\r\n- **Documentation**: Complete emergency documentation\r\n\r\n### Crisis Management\r\n- **Decision Making**: Quick, informed decisions\r\n- **Team Leadership**: Lead team through crisis\r\n- **Resource Management**: Efficient use of resources\r\n- **Recovery**: System recovery and restoration\r\n\r\n## Team Leadership\r\n\r\n### Leadership Skills\r\n- **Communication**: Clear, effective communication\r\n- **Decision Making**: Quick, informed decisions\r\n- **Problem Solving**: Systematic problem resolution\r\n- **Team Management**: Effective team coordination\r\n\r\n### Training and Development\r\n- **Team Training**: Regular team training sessions\r\n- **Skill Development**: Continuous skill improvement\r\n- **Knowledge Sharing**: Share knowledge with team\r\n- **Mentoring**: Mentor junior technicians\r\n\r\n## Quality Assurance\r\n\r\n### System Monitoring\r\n- **Continuous Monitoring**: 24/7 system monitoring\r\n- **Data Analysis**: Regular data analysis and review\r\n- **Trend Analysis**: Identify system trends\r\n- **Predictive Maintenance**: Prevent system failures\r\n\r\n### Documentation\r\n- **Maintenance Records**: Complete maintenance documentation\r\n- **Incident Reports**: Detailed incident documentation\r\n- **Training Records**: Training and certification records\r\n- **Quality Audits**: Regular quality assurance audits\r\n\r\n## Advanced Techniques\r\n\r\n### System Optimization\r\n- **Performance Tuning**: Optimize system performance\r\n- **Efficiency Improvement**: Improve system efficiency\r\n- **Cost Reduction**: Reduce operational costs\r\n- **Reliability Enhancement**: Improve system reliability\r\n\r\n### Innovation\r\n- **New Technologies**: Evaluate new technologies\r\n- **Process Improvement**: Improve operational processes\r\n- **Best Practices**: Implement industry best practices\r\n- **Continuous Improvement**: Ongoing system improvement\r\n\r\n## Next Steps\r\nIn the next lesson, we'll explore advanced troubleshooting techniques and emergency management procedures.\r\n\r\nRemember: As an LST, you are responsible for the safety and well-being of divers. Your decisions can save lives.`\r\n  },\r\n  {\r\n    title: 'AI Tutor: System Design and Integration',\r\n    content: `# AI Tutor: System Design and Integration\r\n\r\n## Welcome Back to Your LST AI Tutor\r\n\r\nIn this lesson, I'll guide you through advanced system design principles and integration techniques for life support systems.\r\n\r\n## Learning Objectives\r\n- Master system design principles\r\n- Understand integration methodologies\r\n- Learn optimization techniques\r\n- Develop innovation strategies\r\n- Practice quality assurance procedures\r\n\r\n## System Design Principles\r\n\r\n### Redundancy Design\r\n**Primary Systems**: Main operational systems\r\n**Backup Systems**: Independent backup systems\r\n**Fail-Safe Design**: Automatic protection systems\r\n**Graceful Degradation**: Gradual system degradation\r\n\r\n### Modularity\r\n**System Isolation**: Independent system modules\r\n**Component Interchangeability**: Replaceable components\r\n**Maintenance Access**: Easy access for maintenance\r\n**Testing Capability**: Individual system testing\r\n\r\n### Monitoring and Control\r\n**Real-time Monitoring**: Continuous system monitoring\r\n**Automated Control**: Automatic system control\r\n**Manual Override**: Manual control capabilities\r\n**Data Logging**: Complete system data recording\r\n\r\n## Integration Methodologies\r\n\r\n### System Integration\r\n**Hardware Integration**: Physical system connections\r\n**Software Integration**: Control system integration\r\n**Communication Integration**: System communication protocols\r\n**Data Integration**: Data flow and management\r\n\r\n### Interface Design\r\n**User Interfaces**: Operator interface design\r\n**System Interfaces**: System-to-system interfaces\r\n**Emergency Interfaces**: Emergency control interfaces\r\n**Maintenance Interfaces**: Maintenance access interfaces\r\n\r\n## Practice Scenarios\r\n\r\n### Scenario 1: New System Integration\r\nIntegrating a new gas analysis system into existing life support.\r\n\r\n**AI Tutor Approach**:\r\n1. **Assessment**: Evaluate existing system capabilities\r\n2. **Design**: Design integration interface\r\n3. **Testing**: Test integration thoroughly\r\n4. **Implementation**: Implement integration\r\n5. **Verification**: Verify system operation\r\n\r\n### Scenario 2: System Upgrade\r\nUpgrading environmental control systems.\r\n\r\n**AI Tutor Approach**:\r\n1. **Planning**: Plan upgrade sequence\r\n2. **Backup**: Ensure backup systems available\r\n3. **Implementation**: Implement upgrades\r\n4. **Testing**: Test all systems\r\n5. **Documentation**: Update documentation\r\n\r\n## Assessment Questions\r\n\r\n### Question 1\r\nWhat is the primary benefit of modular system design?\r\n- A) Lower cost\r\n- B) Easier maintenance\r\n- C) Faster operation\r\n- D) Smaller size\r\n\r\n**Correct Answer**: B) Easier maintenance\r\n\r\n### Question 2\r\nWhat is graceful degradation?\r\n- A) System failure\r\n- B) Gradual system degradation\r\n- C) System shutdown\r\n- D) Emergency operation\r\n\r\n**Correct Answer**: B) Gradual system degradation\r\n\r\n### Question 3\r\nWhat is the first step in system integration?\r\n- A) Implementation\r\n- B) Assessment\r\n- C) Testing\r\n- D) Documentation\r\n\r\n**Correct Answer**: B) Assessment\r\n\r\n## Optimization Techniques\r\n\r\n### Performance Optimization\r\n- **System Tuning**: Optimize system parameters\r\n- **Efficiency Analysis**: Analyze system efficiency\r\n- **Bottleneck Identification**: Identify system bottlenecks\r\n- **Improvement Implementation**: Implement improvements\r\n\r\n### Cost Optimization\r\n- **Resource Analysis**: Analyze resource usage\r\n- **Waste Reduction**: Reduce system waste\r\n- **Efficiency Improvement**: Improve system efficiency\r\n- **Cost Monitoring**: Monitor operational costs\r\n\r\n## Innovation Strategies\r\n\r\n### Technology Evaluation\r\n- **New Technologies**: Evaluate new technologies\r\n- **Performance Comparison**: Compare performance\r\n- **Cost Analysis**: Analyze cost implications\r\n- **Implementation Planning**: Plan implementation\r\n\r\n### Process Improvement\r\n- **Current Process Analysis**: Analyze current processes\r\n- **Improvement Identification**: Identify improvements\r\n- **Implementation Planning**: Plan improvements\r\n- **Effectiveness Monitoring**: Monitor effectiveness\r\n\r\n## Quality Assurance\r\n\r\n### System Validation\r\n- **Performance Testing**: Test system performance\r\n- **Reliability Testing**: Test system reliability\r\n- **Safety Testing**: Test system safety\r\n- **Documentation Review**: Review documentation\r\n\r\n### Continuous Improvement\r\n- **Performance Monitoring**: Monitor system performance\r\n- **Issue Identification**: Identify system issues\r\n- **Improvement Implementation**: Implement improvements\r\n- **Effectiveness Evaluation**: Evaluate effectiveness\r\n\r\n## Next Steps\r\nIn the next lesson, we'll explore advanced troubleshooting and emergency management procedures.\r\n\r\nRemember: System design and integration require careful planning and thorough testing. Always prioritize safety and reliability.`\r\n  }\r\n];\r\n","size_bytes":10581},"attached_assets/Diver-Well-main/content/ndt-lessons.ts":{"content":"export const ndtLessons = [\r\n  {\r\n    title: 'AI Tutor: Visual Inspection Fundamentals',\r\n    content: `# AI Tutor: Visual Inspection Fundamentals\r\n\r\n## Welcome to Your NDT AI Tutor\r\n\r\nI'm your specialized AI tutor for Non-Destructive Testing and Inspection. I'll guide you through the fundamentals of visual inspection with real-world applications and industry best practices.\r\n\r\n## Learning Objectives\r\n- Master visual inspection principles and techniques\r\n- Understand equipment requirements and selection\r\n- Learn systematic inspection procedures\r\n- Develop documentation and reporting skills\r\n- Identify common surface defects and anomalies\r\n\r\n## Core Concepts\r\n\r\n### What is Visual Inspection?\r\nVisual inspection is the primary and most fundamental NDT method used in underwater inspection. It provides immediate assessment of surface conditions and is often the first step in any inspection program.\r\n\r\n**Key Principle**: \"If you can see it, you can document it.\"\r\n\r\n### Equipment Requirements\r\n- **High-intensity underwater lights**: Minimum 10,000 lumens for deep water\r\n- **Video recording equipment**: 4K resolution with macro capabilities\r\n- **Measuring tools and scales**: Calibrated rulers and depth gauges\r\n- **Clean surfaces for reference**: Standard cleaning materials\r\n\r\n## Inspection Procedures\r\n\r\n### 1. Pre-inspection Planning\r\n- Review previous inspection reports\r\n- Identify areas of concern\r\n- Plan inspection sequence\r\n- Check equipment functionality\r\n\r\n### 2. Surface Preparation\r\n- Remove marine growth where necessary\r\n- Clean surfaces for better visibility\r\n- Mark inspection areas\r\n- Establish reference points\r\n\r\n### 3. Systematic Inspection\r\n- Follow predetermined grid patterns\r\n- Document all findings with photos/video\r\n- Measure defect dimensions\r\n- Record environmental conditions\r\n\r\n## Common Defects to Identify\r\n\r\n### Corrosion Types\r\n- **General Corrosion**: Uniform metal loss across surface\r\n- **Pitting Corrosion**: Localized deep penetration\r\n- **Galvanic Corrosion**: Accelerated corrosion of less noble metal\r\n- **Crevice Corrosion**: Localized attack in confined spaces\r\n\r\n### Structural Defects\r\n- **Cracking**: Stress corrosion, fatigue cracks\r\n- **Deformation**: Buckling, denting, warping\r\n- **Coating Damage**: Blistering, peeling, delamination\r\n- **Weld Defects**: Undercut, porosity, lack of fusion\r\n\r\n## Practice Scenarios\r\n\r\n### Scenario 1: Pipeline Inspection\r\nYou're inspecting a 24-inch diameter pipeline at 30m depth. The pipeline shows signs of corrosion. How do you proceed?\r\n\r\n**AI Tutor Guidance**:\r\n1. Establish inspection grid pattern\r\n2. Document corrosion extent and type\r\n3. Measure corrosion depth\r\n4. Photograph with scale references\r\n5. Record environmental conditions\r\n\r\n### Scenario 2: Hull Inspection\r\nDuring a vessel hull inspection, you discover a crack. What's your immediate action?\r\n\r\n**AI Tutor Guidance**:\r\n1. Document crack location and orientation\r\n2. Measure crack dimensions\r\n3. Assess crack severity\r\n4. Mark location for follow-up\r\n5. Report immediately to supervisor\r\n\r\n## Assessment Questions\r\n\r\n### Question 1\r\nWhat is the primary advantage of visual inspection over other NDT methods?\r\n- A) Cost effectiveness\r\n- B) Immediate results\r\n- C) No equipment required\r\n- D) Can be performed by anyone\r\n\r\n**Correct Answer**: B) Immediate results\r\n\r\n### Question 2\r\nWhich of the following is NOT a type of corrosion?\r\n- A) Pitting corrosion\r\n- B) Galvanic corrosion\r\n- C) Structural corrosion\r\n- D) Crevice corrosion\r\n\r\n**Correct Answer**: C) Structural corrosion\r\n\r\n### Question 3\r\nWhat is the minimum recommended light intensity for deep water inspection?\r\n- A) 5,000 lumens\r\n- B) 10,000 lumens\r\n- C) 15,000 lumens\r\n- D) 20,000 lumens\r\n\r\n**Correct Answer**: B) 10,000 lumens\r\n\r\n## Next Steps\r\nIn the next lesson, we'll explore corrosion assessment techniques in detail. You'll learn about different corrosion types, measurement methods, and reporting requirements.\r\n\r\nRemember: Visual inspection is the foundation of all NDT work. Master this, and you'll have a solid base for advanced techniques.`\r\n  },\r\n  {\r\n    title: 'AI Tutor: Corrosion Assessment',\r\n    content: `# AI Tutor: Corrosion Assessment\r\n\r\n## Welcome Back to Your NDT AI Tutor\r\n\r\nIn this lesson, I'll guide you through comprehensive corrosion assessment techniques. Corrosion is the most common defect you'll encounter in marine environments.\r\n\r\n## Learning Objectives\r\n- Identify different types of marine corrosion\r\n- Master corrosion measurement techniques\r\n- Learn corrosion rate calculations\r\n- Understand prevention and mitigation strategies\r\n- Develop comprehensive reporting skills\r\n\r\n## Types of Marine Corrosion\r\n\r\n### 1. General Corrosion\r\n**Description**: Uniform metal loss across surface\r\n**Causes**: Electrochemical reactions with seawater\r\n**Assessment**: Measure thickness loss, document patterns\r\n**Prevention**: Protective coatings, cathodic protection\r\n\r\n**AI Tutor Tip**: General corrosion is often the easiest to measure but can be the most dangerous if left unchecked.\r\n\r\n### 2. Pitting Corrosion\r\n**Description**: Localized deep penetration\r\n**Causes**: Chloride ions, stagnant conditions\r\n**Assessment**: Count pits, measure depth, document distribution\r\n**Prevention**: Proper material selection, regular cleaning\r\n\r\n**AI Tutor Tip**: Pitting corrosion can cause rapid failure even with minimal metal loss.\r\n\r\n### 3. Galvanic Corrosion\r\n**Description**: Accelerated corrosion of less noble metal\r\n**Causes**: Contact between dissimilar metals\r\n**Assessment**: Identify metal combinations, measure corrosion rates\r\n**Prevention**: Electrical isolation, sacrificial anodes\r\n\r\n**AI Tutor Tip**: Always check for dissimilar metal contact in your inspection area.\r\n\r\n### 4. Crevice Corrosion\r\n**Description**: Localized attack in confined spaces\r\n**Causes**: Oxygen concentration differences\r\n**Assessment**: Inspect joints, fasteners, overlapping areas\r\n**Prevention**: Proper design, regular cleaning\r\n\r\n## Assessment Techniques\r\n\r\n### Visual Assessment\r\n- Document corrosion patterns\r\n- Measure affected areas\r\n- Photograph with scale references\r\n- Note environmental conditions\r\n\r\n### Thickness Measurements\r\n- Use ultrasonic thickness gauges\r\n- Take multiple readings per area\r\n- Compare with original specifications\r\n- Calculate corrosion rates\r\n\r\n### Corrosion Rate Calculation\r\n\\`\\`\\`\r\nCorrosion Rate = (Original Thickness - Current Thickness) / Time\r\n\\`\\`\\`\r\n\r\n**Example**: If a 10mm plate has corroded to 8mm over 2 years:\r\nCorrosion Rate = (10mm - 8mm) / 2 years = 1mm/year\r\n\r\n## Practice Scenarios\r\n\r\n### Scenario 1: Offshore Platform Leg\r\nYou're inspecting a platform leg and find extensive pitting corrosion. The original thickness was 25mm, current measurements show 20mm average with pits up to 8mm deep.\r\n\r\n**AI Tutor Analysis**:\r\n1. **Corrosion Type**: Pitting corrosion\r\n2. **Severity**: High (pits exceed 30% of wall thickness)\r\n3. **Action Required**: Immediate remedial action\r\n4. **Recommendation**: Ultrasonic mapping, structural assessment\r\n\r\n### Scenario 2: Pipeline Corrosion\r\nA 12-inch pipeline shows uniform corrosion. Original thickness: 15mm, current: 12mm over 3 years.\r\n\r\n**AI Tutor Analysis**:\r\n1. **Corrosion Type**: General corrosion\r\n2. **Rate**: 1mm/year\r\n3. **Remaining Life**: 9 years at current rate\r\n4. **Action**: Monitor and plan replacement\r\n\r\n## Assessment Questions\r\n\r\n### Question 1\r\nWhat is the primary cause of pitting corrosion in marine environments?\r\n- A) High temperature\r\n- B) Chloride ions\r\n- C) Low oxygen\r\n- D) High pressure\r\n\r\n**Correct Answer**: B) Chloride ions\r\n\r\n### Question 2\r\nCalculate the corrosion rate: Original thickness 20mm, current 16mm, time 4 years\r\n- A) 0.5 mm/year\r\n- B) 1.0 mm/year\r\n- C) 1.5 mm/year\r\n- D) 2.0 mm/year\r\n\r\n**Correct Answer**: B) 1.0 mm/year\r\n\r\n### Question 3\r\nWhich corrosion type is most likely to cause sudden failure?\r\n- A) General corrosion\r\n- B) Pitting corrosion\r\n- C) Galvanic corrosion\r\n- D) Crevice corrosion\r\n\r\n**Correct Answer**: B) Pitting corrosion\r\n\r\n## Prevention Strategies\r\n\r\n### Material Selection\r\n- Choose corrosion-resistant alloys\r\n- Consider environmental conditions\r\n- Evaluate cost vs. performance\r\n\r\n### Protective Measures\r\n- Cathodic protection systems\r\n- Protective coatings\r\n- Regular maintenance schedules\r\n- Environmental monitoring\r\n\r\n## Next Steps\r\nIn the next lesson, we'll explore CP (Cathodic Protection) surveying techniques. You'll learn how to measure and evaluate protection systems.\r\n\r\nRemember: Corrosion assessment is both an art and a science. Experience will improve your accuracy and efficiency.`\r\n  }\r\n];\r\n","size_bytes":8622},"attached_assets/Diver-Well-main/next.config.ts":{"content":"import type { NextConfig } from \"next\";\n\nconst nextConfig: NextConfig = {\n  // Minimal configuration for build\n  serverExternalPackages: ['@prisma/client'],\n  // Disable all checks during build\n  eslint: {\n    ignoreDuringBuilds: true,\n  },\n  typescript: {\n    ignoreBuildErrors: true,\n  },\n  // Skip image optimization\n  images: {\n    unoptimized: true,\n  },\n  // Disable telemetry\n  telemetry: false,\n};\n\nexport default nextConfig;\n","size_bytes":434},"attached_assets/Diver-Well-main/prisma.ts":{"content":"import { PrismaClient } from '@prisma/client'\r\n\r\nconst globalForPrisma = globalThis as unknown as {\r\n  prisma: PrismaClient | undefined\r\n}\r\n\r\nexport const prisma = globalForPrisma.prisma ?? new PrismaClient()\r\n\r\nif (process.env.NODE_ENV !== 'production') globalForPrisma.prisma = prisma\r\n\r\n// Handle build-time gracefully\r\nexport const getPrismaClient = () => {\r\n  if (process.env.NODE_ENV === 'production' && !process.env.DATABASE_URL) {\r\n    throw new Error('DATABASE_URL is required in production')\r\n  }\r\n  return prisma\r\n}\r\n","size_bytes":528},"attached_assets/Diver-Well-main/prisma/additional-lessons.ts":{"content":"// Additional lesson content for Commercial Dive Supervisor, Air Diver, and Saturation Diver tracks\r\n\r\nexport const additionalLessons = {\r\n  commercialDiveSupervisor: [\r\n    {\r\n      title: 'Dive Planning Fundamentals',\r\n      content: `# Dive Planning Fundamentals\r\n\r\n## Pre-Dive Planning Process\r\n\r\n### 1. Risk Assessment\r\n- **Hazard Identification**: Physical, chemical, biological, ergonomic\r\n- **Risk Evaluation**: Likelihood vs. consequence\r\n- **Control Measures**: Hierarchy of controls\r\n- **Residual Risk**: Acceptable risk levels\r\n\r\n### 2. Environmental Assessment\r\n- **Weather Conditions**: Wind, waves, visibility\r\n- **Water Conditions**: Current, temperature, visibility\r\n- **Tidal Information**: High/low tide times\r\n- **Marine Life**: Dangerous species, protected areas\r\n\r\n### 3. Equipment Planning\r\n- **Primary Equipment**: Breathing apparatus, tools, safety gear\r\n- **Backup Equipment**: Redundant systems\r\n- **Emergency Equipment**: First aid, communication, rescue\r\n- **Maintenance Status**: Equipment condition and certification\r\n\r\n### 4. Personnel Planning\r\n- **Team Composition**: Diver, tender, supervisor\r\n- **Qualifications**: Certifications, experience, medical fitness\r\n- **Roles and Responsibilities**: Clear task assignment\r\n- **Communication Plan**: Hand signals, radio procedures\r\n\r\n## Dive Plan Documentation\r\n\r\n### Essential Elements\r\n1. **Project Information**: Client, location, objectives\r\n2. **Personnel**: Names, qualifications, roles\r\n3. **Equipment**: List with condition status\r\n4. **Procedures**: Step-by-step methodology\r\n5. **Emergency Procedures**: Contingency plans\r\n6. **Contact Information**: Emergency contacts\r\n\r\n### Safety Considerations\r\n- **Maximum Depth**: Planned and contingency depths\r\n- **Bottom Time**: Calculated and actual times\r\n- **Decompression**: Required stops and procedures\r\n- **Gas Management**: Supply calculations and reserves\r\n\r\n## Communication Protocols\r\n\r\n### Surface Communication\r\n- **Radio Procedures**: Clear, concise communication\r\n- **Hand Signals**: Standardized signals\r\n- **Written Communication**: Logs, reports, permits\r\n- **Emergency Communication**: Distress signals, procedures\r\n\r\n### Underwater Communication\r\n- **Hand Signals**: Standard diving signals\r\n- **Line Signals**: Rope pull signals\r\n- **Written Communication**: Slates, markers\r\n- **Electronic Communication**: Underwater radios, sonar\r\n\r\n## Quality Assurance\r\n\r\n### Documentation Standards\r\n- **Dive Logs**: Detailed record of each dive\r\n- **Equipment Logs**: Maintenance and inspection records\r\n- **Incident Reports**: Near misses and incidents\r\n- **Performance Reviews**: Regular assessment of procedures\r\n\r\n### Continuous Improvement\r\n- **Lessons Learned**: Post-dive debriefings\r\n- **Procedure Updates**: Regular review and revision\r\n- **Training Programs**: Ongoing skill development\r\n- **Industry Standards**: Compliance with regulations`\r\n    },\r\n    {\r\n      title: 'Hazard Identification',\r\n      content: `# Hazard Identification in Commercial Diving\r\n\r\n## Categories of Hazards\r\n\r\n### 1. Physical Hazards\r\n- **Moving Equipment**: Cranes, winches, propellers\r\n- **Sharp Objects**: Metal edges, tools, marine growth\r\n- **Confined Spaces**: Tanks, pipes, underwater structures\r\n- **Falling Objects**: Tools, equipment, debris\r\n\r\n### 2. Chemical Hazards\r\n- **Toxic Substances**: Industrial chemicals, fuel, oil\r\n- **Corrosive Materials**: Acids, alkalis, saltwater\r\n- **Asphyxiants**: Low oxygen environments\r\n- **Carcinogens**: Long-term exposure risks\r\n\r\n### 3. Biological Hazards\r\n- **Marine Life**: Jellyfish, sharks, venomous fish\r\n- **Bacteria**: Waterborne pathogens\r\n- **Parasites**: Marine organisms\r\n- **Allergens**: Marine proteins, latex\r\n\r\n### 4. Ergonomic Hazards\r\n- **Heavy Lifting**: Equipment, tools, materials\r\n- **Repetitive Motion**: Tool use, swimming\r\n- **Awkward Positions**: Confined space work\r\n- **Vibration**: Power tools, equipment\r\n\r\n## Risk Assessment Matrix\r\n\r\n### Likelihood Categories\r\n- **Very Likely**: Could happen frequently\r\n- **Likely**: Could happen occasionally\r\n- **Possible**: Could happen but not likely\r\n- **Unlikely**: Could happen but rare\r\n- **Very Unlikely**: Could happen but very rare\r\n\r\n### Consequence Categories\r\n- **Catastrophic**: Multiple fatalities\r\n- **Major**: Single fatality or multiple injuries\r\n- **Moderate**: Serious injury or illness\r\n- **Minor**: Minor injury or illness\r\n- **Insignificant**: No injury or illness\r\n\r\n### Risk Rating\r\n- **Extreme**: Immediate action required\r\n- **High**: Action required within 24 hours\r\n- **Medium**: Action required within 1 week\r\n- **Low**: Action required within 1 month\r\n- **Very Low**: Monitor and review\r\n\r\n## Control Measures\r\n\r\n### Hierarchy of Controls\r\n1. **Elimination**: Remove the hazard completely\r\n2. **Substitution**: Replace with less hazardous alternative\r\n3. **Engineering**: Isolate people from the hazard\r\n4. **Administrative**: Change work procedures\r\n5. **PPE**: Personal protective equipment\r\n\r\n### Specific Controls\r\n- **Barriers**: Physical separation from hazards\r\n- **Signage**: Clear warning signs and labels\r\n- **Training**: Proper instruction and supervision\r\n- **Maintenance**: Regular equipment inspection\r\n- **Emergency Procedures**: Clear response protocols\r\n\r\n## Monitoring and Review\r\n\r\n### Regular Assessment\r\n- **Daily Briefings**: Pre-dive hazard review\r\n- **Weekly Reviews**: Procedure effectiveness\r\n- **Monthly Audits**: System compliance\r\n- **Annual Reviews**: Policy and procedure updates\r\n\r\n### Incident Investigation\r\n- **Immediate Response**: Secure scene, treat injuries\r\n- **Investigation**: Root cause analysis\r\n- **Corrective Actions**: Implement improvements\r\n- **Follow-up**: Monitor effectiveness\r\n\r\n## Documentation Requirements\r\n\r\n### Hazard Register\r\n- **Hazard Description**: Clear identification\r\n- **Risk Assessment**: Likelihood and consequence\r\n- **Control Measures**: Implemented safeguards\r\n- **Review Date**: Regular assessment schedule\r\n\r\n### Safety Data Sheets\r\n- **Chemical Information**: Properties and hazards\r\n- **Safe Handling**: Procedures and precautions\r\n- **Emergency Response**: Spill and exposure procedures\r\n- **Contact Information**: Emergency contacts`\r\n    }\r\n  ],\r\n  airDiver: [\r\n    {\r\n      title: 'Diving Physics Review',\r\n      content: `# Diving Physics Fundamentals\r\n\r\n## Gas Laws and Their Applications\r\n\r\n### Boyle's Law\r\n- **Principle**: Volume inversely proportional to pressure\r\n- **Formula**: P₁V₁ = P₂V₂\r\n- **Application**: Gas volume changes with depth\r\n- **Example**: 1L at surface = 0.5L at 10m\r\n\r\n### Charles's Law\r\n- **Principle**: Volume directly proportional to temperature\r\n- **Formula**: V₁/T₁ = V₂/T₂\r\n- **Application**: Gas expansion with temperature\r\n- **Consideration**: Temperature effects on gas volume\r\n\r\n### Dalton's Law\r\n- **Principle**: Total pressure equals sum of partial pressures\r\n- **Formula**: P_total = P₁ + P₂ + P₃...\r\n- **Application**: Gas mixtures and partial pressures\r\n- **Example**: Air at 1 bar = 0.21 bar O₂ + 0.79 bar N₂\r\n\r\n### Henry's Law\r\n- **Principle**: Gas solubility proportional to pressure\r\n- **Application**: Gas absorption in tissues\r\n- **Decompression**: Gas release during ascent\r\n- **Bubbles**: Formation and elimination\r\n\r\n## Pressure and Depth\r\n\r\n### Pressure Units\r\n- **Atmospheres (ATA)**: 1 ATA = 1.013 bar\r\n- **Bar**: 1 bar = 14.5 psi\r\n- **PSI**: Pounds per square inch\r\n- **mm Hg**: Millimeters of mercury\r\n\r\n### Depth Calculations\r\n- **Freshwater**: 1 ATA per 10.3m\r\n- **Seawater**: 1 ATA per 10m\r\n- **Absolute Pressure**: Gauge + atmospheric pressure\r\n- **Gauge Pressure**: Pressure above atmospheric\r\n\r\n### Pressure Effects\r\n- **Gas Density**: Increases with depth\r\n- **Breathing Resistance**: Higher at depth\r\n- **Gas Consumption**: Increases with depth\r\n- **Equipment Performance**: Affected by pressure\r\n\r\n## Gas Management\r\n\r\n### Gas Consumption\r\n- **Surface Consumption Rate (SCR)**: L/min at surface\r\n- **Depth Factor**: Consumption increases with depth\r\n- **Work Rate**: Higher consumption during work\r\n- **Experience**: Consumption varies with diver\r\n\r\n### Gas Planning\r\n- **Rule of Thirds**: 1/3 out, 1/3 back, 1/3 reserve\r\n- **Minimum Gas**: Emergency ascent requirements\r\n- **Turn Pressure**: Point to begin return\r\n- **Reserve Gas**: Safety margin\r\n\r\n### Gas Mixing\r\n- **Air**: 21% O₂, 79% N₂\r\n- **Nitrox**: Enriched air mixtures\r\n- **Heliox**: Helium-oxygen mixtures\r\n- **Trimix**: Helium-nitrogen-oxygen mixtures\r\n\r\n## Decompression Theory\r\n\r\n### Tissue Saturation\r\n- **Half-times**: Time for 50% saturation\r\n- **Fast Tissues**: 5-10 minute half-times\r\n- **Slow Tissues**: 120-240 minute half-times\r\n- **Saturation**: Maximum gas absorption\r\n\r\n### Decompression Models\r\n- **Haldane Model**: Original decompression theory\r\n- **Bühlmann Model**: Swiss decompression algorithm\r\n- **VPM Model**: Variable Permeability Model\r\n- **RGBM Model**: Reduced Gradient Bubble Model\r\n\r\n### Decompression Stops\r\n- **Safety Stops**: 3-5 minutes at 3-5m\r\n- **Decompression Stops**: Required for longer dives\r\n- **Deep Stops**: Additional safety margin\r\n- **Surface Intervals**: Time between dives\r\n\r\n## Environmental Considerations\r\n\r\n### Temperature Effects\r\n- **Thermal Conductivity**: Water vs. air\r\n- **Heat Loss**: Conduction, convection, radiation\r\n- **Hypothermia**: Prevention and recognition\r\n- **Thermal Protection**: Wetsuits, drysuits\r\n\r\n### Visibility Effects\r\n- **Light Absorption**: Red light lost first\r\n- **Color Perception**: Changes with depth\r\n- **Artificial Lighting**: Underwater lights\r\n- **Navigation**: Reduced visibility challenges\r\n\r\n### Current Effects\r\n- **Current Types**: Tidal, wind, river\r\n- **Current Strength**: Planning considerations\r\n- **Current Direction**: Navigation planning\r\n- **Safety Procedures**: Current management`\r\n    },\r\n    {\r\n      title: 'Gas Management',\r\n      content: `# Gas Management for Air Diving\r\n\r\n## Gas Supply Planning\r\n\r\n### Consumption Calculations\r\n- **Surface Consumption Rate (SCR)**: Measure at surface\r\n- **Depth Factor**: Multiply by (depth/10 + 1)\r\n- **Work Factor**: 1.5-2.0 for heavy work\r\n- **Safety Factor**: 1.2-1.5 for emergencies\r\n\r\n### Gas Requirements\r\n- **Bottom Time**: Planned work time\r\n- **Ascent Time**: Including safety stops\r\n- **Emergency Reserve**: Additional safety margin\r\n- **Total Requirement**: Sum of all components\r\n\r\n### Cylinder Selection\r\n- **Volume**: Sufficient gas for planned dive\r\n- **Pressure**: Working pressure considerations\r\n- **Material**: Steel vs. aluminum\r\n- **Buoyancy**: Weight and buoyancy characteristics\r\n\r\n## Gas Monitoring\r\n\r\n### Pressure Monitoring\r\n- **Regular Checks**: Every 5-10 minutes\r\n- **Critical Points**: Turn pressure, reserve pressure\r\n- **Communication**: Signal pressure to tender\r\n- **Documentation**: Record in dive log\r\n\r\n### Consumption Tracking\r\n- **Baseline Rate**: Normal consumption pattern\r\n- **Work Rate**: Increased consumption during work\r\n- **Emergency Rate**: Maximum consumption during stress\r\n- **Trend Analysis**: Monitor consumption patterns\r\n\r\n### Equipment Considerations\r\n- **Regulator Performance**: Breathing resistance\r\n- **Cylinder Pressure**: Accurate gauge readings\r\n- **Hose Integrity**: Check for leaks\r\n- **Backup Systems**: Emergency gas supply\r\n\r\n## Emergency Gas Management\r\n\r\n### Out-of-Gas Scenarios\r\n- **Primary Failure**: Regulator malfunction\r\n- **Cylinder Empty**: Insufficient gas planning\r\n- **Hose Failure**: Supply line damage\r\n- **Entanglement**: Unable to reach valve\r\n\r\n### Emergency Procedures\r\n- **Signal Distress**: Clear emergency signals\r\n- **Switch to Backup**: Alternative gas source\r\n- **Buddy Breathing**: Share gas with partner\r\n- **Emergency Ascent**: Controlled ascent to surface\r\n\r\n### Emergency Equipment\r\n- **Backup Regulator**: Independent second stage\r\n- **Pony Bottle**: Small emergency cylinder\r\n- **Surface Marker**: Emergency signaling device\r\n- **Cutting Tool**: Emergency escape tool\r\n\r\n## Gas Quality\r\n\r\n### Air Quality Standards\r\n- **Oxygen**: 19.5-23.5%\r\n- **Carbon Monoxide**: <10 ppm\r\n- **Carbon Dioxide**: <1000 ppm\r\n- **Oil and Water**: <5 mg/m³\r\n\r\n### Contamination Sources\r\n- **Compressor Oil**: Lubrication system\r\n- **Carbon Monoxide**: Engine exhaust\r\n- **Water**: Condensation in cylinders\r\n- **Particulates**: Filter breakthrough\r\n\r\n### Quality Assurance\r\n- **Regular Testing**: Air quality analysis\r\n- **Filter Maintenance**: Compressor filtration\r\n- **Cylinder Inspection**: Internal condition\r\n- **Documentation**: Quality records\r\n\r\n## Gas Mixing and Analysis\r\n\r\n### Air Analysis\r\n- **Oxygen Analyzer**: Measure oxygen percentage\r\n- **Carbon Monoxide Detector**: Monitor CO levels\r\n- **Moisture Indicator**: Check for water\r\n- **Documentation**: Record analysis results\r\n\r\n### Gas Blending\r\n- **Partial Pressure**: Calculate gas mixtures\r\n- **Continuous Flow**: Mix gases during filling\r\n- **Quality Control**: Verify final mixture\r\n- **Labeling**: Clear identification of contents\r\n\r\n### Storage and Handling\r\n- **Cylinder Storage**: Proper storage conditions\r\n- **Transportation**: Safe handling procedures\r\n- **Filling Procedures**: Safe gas transfer\r\n- **Documentation**: Complete gas records`\r\n    }\r\n  ],\r\n  saturationDiver: [\r\n    {\r\n      title: 'Saturation Diving Overview',\r\n      content: `# Saturation Diving Systems Overview\r\n\r\n## Saturation Diving Principles\r\n\r\n### What is Saturation Diving?\r\n- **Definition**: Living and working at pressure for extended periods\r\n- **Purpose**: Eliminate decompression between dives\r\n- **Duration**: Days to weeks at pressure\r\n- **Depth Range**: 30-300+ meters\r\n\r\n### Physiological Basis\r\n- **Gas Saturation**: Tissues reach equilibrium with breathing gas\r\n- **Decompression**: Single decompression at end of mission\r\n- **Efficiency**: Maximum bottom time for minimum decompression\r\n- **Safety**: Reduced decompression risk\r\n\r\n### Gas Mixtures\r\n- **Heliox**: Primary breathing gas (helium-oxygen)\r\n- **Trimix**: Helium-nitrogen-oxygen for very deep dives\r\n- **Oxygen Control**: Maintain safe oxygen partial pressure\r\n- **Gas Analysis**: Continuous monitoring of gas composition\r\n\r\n## Saturation System Components\r\n\r\n### 1. Living Chamber (Saturation Complex)\r\n- **Living Quarters**: Sleeping, eating, recreation\r\n- **Environmental Control**: Temperature, humidity, gas composition\r\n- **Communication**: Surface and inter-chamber communication\r\n- **Monitoring**: Vital signs, gas levels, environmental conditions\r\n\r\n### 2. Transfer Under Pressure (TUP)\r\n- **Purpose**: Transport divers between chambers and work site\r\n- **Design**: Pressure vessel with life support systems\r\n- **Operation**: Maintains pressure during transfer\r\n- **Safety**: Emergency systems and backup equipment\r\n\r\n### 3. Diving Bell\r\n- **Function**: Transport divers to work site\r\n- **Life Support**: Breathing gas, temperature control\r\n- **Communication**: Surface and diver communication\r\n- **Safety**: Emergency systems and backup equipment\r\n\r\n### 4. Life Support Systems\r\n- **Gas Supply**: Primary and backup breathing gas\r\n- **Gas Analysis**: Continuous monitoring of gas composition\r\n- **Environmental Control**: Temperature, humidity, CO₂ removal\r\n- **Emergency Systems**: Backup power, gas, and communication\r\n\r\n## Operational Procedures\r\n\r\n### Pre-Saturation\r\n- **Medical Assessment**: Comprehensive health evaluation\r\n- **Equipment Preparation**: System testing and maintenance\r\n- **Team Briefing**: Roles, procedures, emergency plans\r\n- **Gas Preparation**: Breathing gas analysis and preparation\r\n\r\n### Compression\r\n- **Rate**: Controlled compression to working depth\r\n- **Monitoring**: Vital signs, gas levels, team status\r\n- **Communication**: Regular status reports\r\n- **Documentation**: Complete record of compression\r\n\r\n### Saturation Period\r\n- **Daily Routine**: Work, rest, meals, recreation\r\n- **Health Monitoring**: Regular medical checks\r\n- **Gas Management**: Continuous gas analysis and control\r\n- **Communication**: Regular contact with surface\r\n\r\n### Decompression\r\n- **Planning**: Calculate decompression schedule\r\n- **Execution**: Controlled decompression to surface\r\n- **Monitoring**: Vital signs, gas levels, symptoms\r\n- **Medical Support**: Available throughout decompression\r\n\r\n## Safety Considerations\r\n\r\n### Emergency Procedures\r\n- **Chamber Fire**: Fire suppression and evacuation\r\n- **Gas Contamination**: Emergency gas supply\r\n- **Medical Emergency**: Medical lock procedures\r\n- **System Failure**: Backup systems and evacuation\r\n\r\n### Health Monitoring\r\n- **Vital Signs**: Regular monitoring of heart rate, blood pressure\r\n- **Neurological Assessment**: Mental status and coordination\r\n- **Gas Analysis**: Continuous monitoring of breathing gas\r\n- **Medical Support**: Available medical personnel and equipment\r\n\r\n### Environmental Control\r\n- **Temperature**: Maintain comfortable living conditions\r\n- **Humidity**: Control moisture levels\r\n- **CO₂ Removal**: Maintain safe CO₂ levels\r\n- **Oxygen Control**: Maintain safe oxygen partial pressure\r\n\r\n## Quality Assurance\r\n\r\n### System Maintenance\r\n- **Regular Inspection**: Daily, weekly, monthly checks\r\n- **Preventive Maintenance**: Scheduled maintenance procedures\r\n- **Equipment Testing**: Regular testing of all systems\r\n- **Documentation**: Complete maintenance records\r\n\r\n### Personnel Training\r\n- **System Operation**: Equipment operation and maintenance\r\n- **Emergency Procedures**: Response to emergencies\r\n- **Medical Training**: Basic medical procedures\r\n- **Communication**: Clear communication procedures\r\n\r\n### Documentation\r\n- **Operational Logs**: Complete record of operations\r\n- **Maintenance Records**: Equipment maintenance history\r\n- **Medical Records**: Health monitoring data\r\n- **Incident Reports**: Documentation of incidents and near-misses`\r\n    },\r\n    {\r\n      title: 'Life Support Systems',\r\n      content: `# Life Support Systems in Saturation Diving\r\n\r\n## Gas Management Systems\r\n\r\n### Primary Gas Supply\r\n- **Heliox Storage**: High-pressure gas storage\r\n- **Gas Analysis**: Continuous monitoring of gas composition\r\n- **Flow Control**: Regulated gas delivery to chambers\r\n- **Backup Supply**: Independent backup gas systems\r\n\r\n### Gas Composition Control\r\n- **Oxygen Control**: Maintain 0.4-0.6 ATA oxygen partial pressure\r\n- **Helium Supply**: Primary diluent gas\r\n- **CO₂ Removal**: Chemical or mechanical CO₂ scrubbers\r\n- **Gas Monitoring**: Continuous analysis and recording\r\n\r\n### Gas Analysis Equipment\r\n- **Oxygen Analyzers**: Measure oxygen partial pressure\r\n- **Helium Analyzers**: Monitor helium concentration\r\n- **CO₂ Monitors**: Measure carbon dioxide levels\r\n- **Moisture Indicators**: Monitor humidity levels\r\n\r\n## Environmental Control Systems\r\n\r\n### Temperature Control\r\n- **Heating Systems**: Electric or hot water heating\r\n- **Cooling Systems**: Air conditioning or chilled water\r\n- **Temperature Monitoring**: Continuous temperature recording\r\n- **Distribution**: Even temperature distribution throughout chambers\r\n\r\n### Humidity Control\r\n- **Dehumidification**: Remove excess moisture\r\n- **Humidification**: Add moisture when needed\r\n- **Monitoring**: Continuous humidity measurement\r\n- **Control**: Automatic humidity control systems\r\n\r\n### Air Circulation\r\n- **Fans**: Circulate air within chambers\r\n- **Filters**: Remove particulates and contaminants\r\n- **Flow Monitoring**: Measure air flow rates\r\n- **Distribution**: Even air distribution\r\n\r\n## Emergency Systems\r\n\r\n### Backup Power\r\n- **Emergency Generators**: Independent power supply\r\n- **Battery Backup**: Uninterruptible power supply\r\n- **Fuel Supply**: Adequate fuel for extended operation\r\n- **Testing**: Regular testing of backup systems\r\n\r\n### Emergency Gas Supply\r\n- **Backup Cylinders**: Independent gas storage\r\n- **Quick Connect**: Rapid connection to emergency supply\r\n- **Pressure Monitoring**: Monitor backup gas pressure\r\n- **Documentation**: Complete backup system records\r\n\r\n### Communication Systems\r\n- **Primary Communication**: Normal communication systems\r\n- **Emergency Communication**: Independent emergency systems\r\n- **Backup Power**: Emergency power for communication\r\n- **Testing**: Regular testing of all communication systems\r\n\r\n## Monitoring and Control\r\n\r\n### Automated Systems\r\n- **Computer Control**: Automated system operation\r\n- **Alarms**: Automatic alarm systems\r\n- **Data Logging**: Continuous data recording\r\n- **Remote Monitoring**: Surface monitoring capabilities\r\n\r\n### Manual Override\r\n- **Manual Controls**: Override automated systems\r\n- **Emergency Procedures**: Manual emergency procedures\r\n- **Training**: Operator training on manual systems\r\n- **Documentation**: Complete manual operation procedures\r\n\r\n### Quality Assurance\r\n- **Calibration**: Regular calibration of monitoring equipment\r\n- **Maintenance**: Scheduled maintenance procedures\r\n- **Testing**: Regular testing of all systems\r\n- **Documentation**: Complete quality assurance records\r\n\r\n## Safety Features\r\n\r\n### Fire Suppression\r\n- **Detection Systems**: Early fire detection\r\n- **Suppression Systems**: Automatic fire suppression\r\n- **Manual Systems**: Manual fire suppression equipment\r\n- **Training**: Fire response training\r\n\r\n### Medical Support\r\n- **Medical Lock**: Transfer medical personnel and equipment\r\n- **Medical Equipment**: Basic medical equipment\r\n- **Communication**: Medical communication systems\r\n- **Documentation**: Medical procedures and records\r\n\r\n### Evacuation Systems\r\n- **Emergency Escape**: Emergency escape procedures\r\n- **Rescue Equipment**: Surface rescue equipment\r\n- **Communication**: Emergency communication systems\r\n- **Training**: Emergency response training`\r\n    }\r\n  ]\r\n};\r\n","size_bytes":21625},"attached_assets/Diver-Well-main/prisma/seed.ts":{"content":"import { PrismaClient } from '@prisma/client';\r\n\r\nconst prisma = new PrismaClient();\r\n\r\nasync function main() {\r\n  console.log('🌱 Seeding database with AI tutor content...');\r\n\r\n  // Create tracks\r\n  const tracks = await Promise.all([\r\n    prisma.track.create({\r\n      data: {\r\n        title: 'Inspection & NDT',\r\n        description: 'AI Tutor for Non-Destructive Testing and Inspection',\r\n        color: 'blue',\r\n        order: 1,\r\n        lessons: {\r\n          create: [\r\n            {\r\n              title: 'AI Tutor: Visual Inspection Fundamentals',\r\n              content: '# AI Tutor: Visual Inspection Fundamentals\\n\\nWelcome to your NDT AI Tutor. This lesson covers visual inspection principles, equipment requirements, and systematic inspection procedures.',\r\n              order: 1,\r\n            }\r\n          ]\r\n        }\r\n      }\r\n    }),\r\n    prisma.track.create({\r\n      data: {\r\n        title: 'Diver Medic Technician',\r\n        description: 'AI Tutor for Diver Medic Technician',\r\n        color: 'red',\r\n        order: 2,\r\n        lessons: {\r\n          create: [\r\n            {\r\n              title: 'AI Tutor: Scene Assessment and Safety',\r\n              content: '# AI Tutor: Scene Assessment and Safety\\n\\nWelcome to your DMT AI Tutor. This lesson covers DR ABCDE assessment protocol and emergency response procedures.',\r\n              order: 1,\r\n            }\r\n          ]\r\n        }\r\n      }\r\n    }),\r\n    prisma.track.create({\r\n      data: {\r\n        title: 'Commercial Dive Supervisor',\r\n        description: 'AI Tutor for Commercial Dive Supervisor',\r\n        color: 'green',\r\n        order: 3,\r\n        lessons: {\r\n          create: [\r\n            {\r\n              title: 'AI Tutor: Dive Planning Fundamentals',\r\n              content: '# AI Tutor: Dive Planning Fundamentals\\n\\nWelcome to your Dive Supervisor AI Tutor. This lesson covers comprehensive dive planning and risk management.',\r\n              order: 1,\r\n            }\r\n          ]\r\n        }\r\n      }\r\n    }),\r\n    prisma.track.create({\r\n      data: {\r\n        title: 'Air Diver',\r\n        description: 'AI Tutor for Air Diving',\r\n        color: 'yellow',\r\n        order: 4,\r\n        lessons: {\r\n          create: [\r\n            {\r\n              title: 'AI Tutor: Diving Physics Review',\r\n              content: '# AI Tutor: Diving Physics Review\\n\\nWelcome to your Air Diving AI Tutor. This lesson covers gas laws, pressure relationships, and gas management.',\r\n              order: 1,\r\n            }\r\n          ]\r\n        }\r\n      }\r\n    }),\r\n    prisma.track.create({\r\n      data: {\r\n        title: 'Saturation Diver',\r\n        description: 'AI Tutor for Saturation Diving',\r\n        color: 'purple',\r\n        order: 5,\r\n        lessons: {\r\n          create: [\r\n            {\r\n              title: 'AI Tutor: Saturation Diving Overview',\r\n              content: '# AI Tutor: Saturation Diving Overview\\n\\nWelcome to your Saturation Diving AI Tutor. This lesson covers saturation principles and system components.',\r\n              order: 1,\r\n            }\r\n          ]\r\n        }\r\n      }\r\n    }),\r\n    prisma.track.create({\r\n      data: {\r\n        title: 'Assistant Life Support Technician (ALST)',\r\n        description: 'AI Tutor for Assistant Life Support Technician',\r\n        color: 'indigo',\r\n        order: 6,\r\n        lessons: {\r\n          create: [\r\n            {\r\n              title: 'AI Tutor: ALST Fundamentals',\r\n              content: '# AI Tutor: ALST Fundamentals\\n\\nWelcome to your ALST AI Tutor. This lesson covers life support system components and gas management.',\r\n              order: 1,\r\n            }\r\n          ]\r\n        }\r\n      }\r\n    }),\r\n    prisma.track.create({\r\n      data: {\r\n        title: 'Life Support Technician (LST)',\r\n        description: 'AI Tutor for Life Support Technician',\r\n        color: 'teal',\r\n        order: 7,\r\n        lessons: {\r\n          create: [\r\n            {\r\n              title: 'AI Tutor: LST Advanced Systems',\r\n              content: '# AI Tutor: LST Advanced Systems\\n\\nWelcome to your LST AI Tutor. This lesson covers advanced life support systems and troubleshooting.',\r\n              order: 1,\r\n            }\r\n          ]\r\n        }\r\n      }\r\n    })\r\n  ]);\r\n\r\n  console.log(`✅ Created ${tracks.length} tracks with AI tutor content`);\r\n\r\n  // Create admin user\r\n  const adminUser = await prisma.user.upsert({\r\n    where: { email: 'admin@diverwell.com' },\r\n    update: {},\r\n    create: {\r\n      email: 'admin@diverwell.com',\r\n      name: 'Admin User',\r\n      password: '$2a$12$LQv3c1yqBWVHxkd0LHAkCOYz6TtxMQJqhN8/LewdBPj4tbQJhKz8O',\r\n      role: 'ADMIN',\r\n    },\r\n  });\r\n\r\n  console.log('✅ Created admin user (email: admin@diverwell.com, password: admin123)');\r\n  console.log('🎉 Database seeding completed!');\r\n}\r\n\r\nmain()\r\n  .catch((e) => {\r\n    console.error('❌ Error seeding database:', e);\r\n    process.exit(1);\r\n  })\r\n  .finally(async () => {\r\n    await prisma.$disconnect();\r\n  });\r\n","size_bytes":4960},"attached_assets/Diver-Well-main/route.ts":{"content":"import { NextResponse } from 'next/server';\r\n\r\nexport async function POST() {\r\n  return NextResponse.json(\r\n    { message: 'Signup endpoint - database not configured yet' },\r\n    { status: 200 }\r\n  );\r\n}\r\n","size_bytes":205},"attached_assets/Diver-Well-main/src/app/api/auth/signup/route.ts":{"content":"import { NextResponse } from 'next/server';\r\nimport { prisma } from '@/lib/prisma';\r\nimport bcrypt from 'bcryptjs';\r\n\r\nexport async function POST(request: Request) {\r\n  try {\r\n    const { name, email, password } = await request.json();\r\n\r\n    // Validate input\r\n    if (!name || !email || !password) {\r\n      return NextResponse.json(\r\n        { error: 'Missing required fields' },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    if (password.length < 6) {\r\n      return NextResponse.json(\r\n        { error: 'Password must be at least 6 characters long' },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    // Check if user already exists\r\n    const existingUser = await prisma.user.findUnique({\r\n      where: { email }\r\n    });\r\n\r\n    if (existingUser) {\r\n      return NextResponse.json(\r\n        { error: 'User with this email already exists' },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    // Hash password\r\n    const hashedPassword = await bcrypt.hash(password, 12);\r\n\r\n    // Create user\r\n    const user = await prisma.user.create({\r\n      data: {\r\n        name,\r\n        email,\r\n        password: hashedPassword,\r\n        role: 'USER'\r\n      }\r\n    });\r\n\r\n    // Remove password from response\r\n    const { password: _, ...userWithoutPassword } = user;\r\n\r\n    return NextResponse.json(\r\n      { message: 'User created successfully', user: userWithoutPassword },\r\n      { status: 201 }\r\n    );\r\n  } catch (error) {\r\n    console.error('Signup error:', error);\r\n    return NextResponse.json(\r\n      { error: 'Internal server error' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n","size_bytes":1581},"scripts/import-repository-content.ts":{"content":"// Import content from both GitHub repositories\nimport { db } from \"../server/db\";\n\n// ALST Lessons Content\nconst alstLessonsContent = [\n  {\n    title: 'AI Tutor: ALST Fundamentals',\n    content: `# AI Tutor: Assistant Life Support Technician Fundamentals\n\n## Welcome to Your ALST AI Tutor\n\nI'm your specialized AI tutor for Assistant Life Support Technician training. I'll guide you through the essential skills needed to support life support systems in diving operations.\n\n## Learning Objectives\n- Master life support system components\n- Understand gas management principles\n- Learn environmental control systems\n- Develop emergency response skills\n- Practice equipment maintenance procedures\n\n## Life Support System Components\n\n### Gas Management Systems\n**Primary Gas Supply**: High-pressure gas storage and distribution\n**Gas Analysis**: Continuous monitoring of gas composition\n**Flow Control**: Regulated gas delivery to chambers\n**Backup Supply**: Independent backup gas systems\n\n**AI Tutor Tip**: Gas management is the heart of life support. Always maintain redundant systems.\n\n### Environmental Control Systems\n**Temperature Control**: Heating and cooling systems\n**Humidity Control**: Moisture management\n**Air Circulation**: Ventilation and filtration\n**CO₂ Removal**: Chemical or mechanical scrubbers\n\n### Monitoring Systems\n**Gas Analyzers**: Oxygen, helium, CO₂ monitoring\n**Environmental Sensors**: Temperature, humidity, pressure\n**Alarm Systems**: Automatic warning systems\n**Data Logging**: Continuous record keeping\n\n## Gas Management Principles\n\n### Oxygen Control\n**Safe Range**: 0.4-0.6 ATA oxygen partial pressure\n**Monitoring**: Continuous oxygen analysis\n**Control**: Automatic and manual adjustment\n**Safety**: Backup oxygen supply\n\n### Helium Management\n**Primary Diluent**: Helium for deep diving\n**Analysis**: Helium concentration monitoring\n**Supply**: High-pressure helium storage\n**Conservation**: Efficient gas usage\n\n### CO₂ Removal\n**Scrubber Systems**: Chemical CO₂ removal\n**Monitoring**: CO₂ level analysis\n**Maintenance**: Regular scrubber replacement\n**Backup**: Multiple scrubber systems\n\n## Practice Scenarios\n\n### Scenario 1: Oxygen Level Drop\nThe oxygen level in the chamber drops to 0.3 ATA. What's your response?\n\n**AI Tutor Response**:\n1. **Immediate**: Increase oxygen flow to chamber\n2. **Monitor**: Watch oxygen level recovery\n3. **Investigate**: Check for system leaks or failures\n4. **Backup**: Activate backup oxygen supply if needed\n5. **Document**: Record incident and actions taken\n\n### Scenario 2: CO₂ Scrubber Failure\nA CO₂ scrubber shows signs of exhaustion. What's your action?\n\n**AI Tutor Response**:\n1. **Switch**: Activate backup scrubber system\n2. **Monitor**: Check CO₂ levels closely\n3. **Replace**: Install fresh scrubber material\n4. **Test**: Verify proper operation\n5. **Log**: Document maintenance action\n\n## Equipment Maintenance Procedures\n\n### Daily Checks\n- Gas analyzer calibration\n- Scrubber material condition\n- System pressure verification\n- Emergency equipment status\n\n### Weekly Maintenance\n- Detailed system inspection\n- Filter replacement\n- Backup system testing\n- Calibration verification\n\n### Monthly Procedures\n- Complete system overhaul\n- Documentation review\n- Training requirement updates\n- Equipment inventory\n\n## Emergency Response Skills\n\n### Emergency Scenarios\n**Power Failure**: Switch to backup power systems\n**Gas Contamination**: Identify source and eliminate\n**Equipment Failure**: Implement backup procedures\n**Communication Loss**: Restore essential communications\n\n**AI Tutor Challenge**: Practice emergency scenarios regularly to maintain proficiency.\n\n---\n\n*Continue learning with our advanced LST and NDT modules to complete your professional diving certification.*`\n  },\n  {\n    title: 'ALST Gas Analysis Procedures',\n    content: `# Gas Analysis Procedures for ALST\n\n## Introduction\nGas analysis is critical for maintaining safe breathing environments in diving operations. This lesson covers the essential procedures and equipment used by Assistant Life Support Technicians.\n\n## Gas Analysis Equipment\n\n### Oxygen Analyzers\n- **Galvanic Cell Analyzers**: Real-time oxygen monitoring\n- **Paramagnetic Analyzers**: High-precision oxygen measurement\n- **Calibration**: Daily calibration with known gas standards\n- **Maintenance**: Regular sensor replacement and cleaning\n\n### Helium Analyzers\n- **Thermal Conductivity**: Helium concentration measurement\n- **Mass Spectrometry**: Precise gas composition analysis\n- **Response Time**: Understanding analyzer lag times\n- **Accuracy**: ±0.1% for critical applications\n\n### CO₂ Analyzers\n- **Infrared Sensors**: Real-time CO₂ monitoring\n- **Chemical Indicators**: Backup CO₂ detection\n- **Alarm Limits**: Set at 0.5% CO₂ maximum\n- **Response**: Immediate scrubber activation\n\n## Analysis Procedures\n\n### Pre-Analysis Setup\n1. **Calibration Check**: Verify all analyzers with known standards\n2. **Sample Line Purge**: Clear sample lines of residual gases\n3. **Flow Rate Setting**: Establish proper sample flow rates\n4. **Data Logging**: Initialize recording systems\n\n### Continuous Monitoring\n- **Oxygen**: Maintain 0.4-0.6 ATA partial pressure\n- **Helium**: Monitor diluent gas concentration\n- **CO₂**: Keep below 0.5% at all times\n- **Trace Gases**: Watch for contamination indicators\n\n### Emergency Analysis\n**Rapid Response**: Quick analysis during emergencies\n**Backup Methods**: Manual testing when analyzers fail\n**Communication**: Report findings to dive supervisor\n**Documentation**: Record all emergency measurements\n\n## Quality Control\n\n### Standards and Calibration\n- **Primary Standards**: NIST-traceable gas standards\n- **Secondary Standards**: Working gas mixtures\n- **Frequency**: Calibrate before each operation\n- **Documentation**: Maintain calibration records\n\n### Accuracy Verification\n- **Cross-checking**: Compare multiple analyzer readings\n- **Known Mixtures**: Test with certified gas blends\n- **Linearity Checks**: Verify response across ranges\n- **Drift Monitoring**: Track analyzer stability\n\n## Troubleshooting Common Issues\n\n### Oxygen Analyzer Problems\n**Slow Response**: Check sample flow rates and sensor condition\n**Drift**: Recalibrate or replace sensor\n**Erratic Readings**: Check for electrical interference\n**No Response**: Verify power supply and connections\n\n### Helium Analyzer Issues\n**Background Interference**: Check for air leaks in sample system\n**Calibration Drift**: Recalibrate with helium standard\n**Temperature Effects**: Account for temperature compensation\n**Flow Problems**: Verify sample flow rates\n\n**Practical Exercise**: Practice troubleshooting scenarios with instructor guidance.`\n  }\n];\n\n// LST Advanced Lessons\nconst lstLessonsContent = [\n  {\n    title: 'AI Tutor: LST Advanced Systems',\n    content: `# AI Tutor: Life Support Technician Advanced Systems\n\n## Welcome to Your LST AI Tutor\n\nI'm your specialized AI tutor for Life Support Technician training. I'll guide you through advanced life support systems, troubleshooting, and team leadership.\n\n## Learning Objectives\n- Master advanced life support systems\n- Understand system design principles\n- Learn troubleshooting methodologies\n- Develop emergency management skills\n- Practice team leadership techniques\n\n## Advanced Life Support Systems\n\n### System Design Principles\n**Redundancy**: Multiple backup systems for critical functions\n**Modularity**: Systems that can be isolated and repaired\n**Monitoring**: Comprehensive monitoring of all parameters\n**Safety**: Fail-safe design with automatic protection\n\n**AI Tutor Tip**: Good system design prevents failures before they occur.\n\n### Gas Management Systems\n**Primary Supply**: High-pressure gas storage and distribution\n**Backup Systems**: Independent backup gas supplies\n**Analysis Equipment**: Multiple gas analyzers for redundancy\n**Control Systems**: Automatic and manual control capabilities\n\n### Environmental Control\n**Temperature Management**: Heating and cooling systems\n**Humidity Control**: Moisture management systems\n**Air Quality**: Filtration and purification systems\n**Pressure Control**: Chamber pressure management\n\n## Troubleshooting Methodologies\n\n### Systematic Approach\n1. **Identify Problem**: Define the issue clearly\n2. **Gather Information**: Collect relevant data\n3. **Analyze Options**: Consider possible solutions\n4. **Implement Solution**: Execute chosen solution\n5. **Verify Results**: Confirm problem resolution\n6. **Document Actions**: Record all actions taken\n\n### Common Issues\n**Gas Contamination**: Identify and eliminate contamination sources\n**Equipment Failure**: Diagnose and repair or replace equipment\n**System Malfunction**: Identify root cause and correct\n**Communication Problems**: Restore communication systems\n\n## Emergency Management Skills\n\n### Crisis Leadership\n**Calm Decision Making**: Maintain composure under pressure\n**Clear Communication**: Provide clear, concise instructions\n**Resource Management**: Optimize available resources\n**Team Coordination**: Direct team members effectively\n\n### Emergency Protocols\n**Immediate Response**: React quickly to life-threatening situations\n**Escalation Procedures**: Know when to call for additional help\n**Evacuation Plans**: Implement emergency evacuation when necessary\n**Recovery Operations**: Manage post-emergency recovery\n\n**AI Tutor Challenge**: Leadership skills develop through practice and real-world experience.\n\n## Advanced Troubleshooting\n\n### System Diagnostics\n**Data Analysis**: Interpret system performance data\n**Pattern Recognition**: Identify recurring problems\n**Predictive Maintenance**: Anticipate equipment failures\n**Root Cause Analysis**: Find underlying causes of problems\n\n### Complex Problems\n**Multiple System Failures**: Handle cascading failures\n**Intermittent Issues**: Diagnose sporadic problems\n**Environmental Factors**: Account for external conditions\n**Human Factors**: Consider operator error possibilities\n\n---\n\n*Master these advanced skills to become a qualified Life Support Technician leader.*`\n  }\n];\n\n// NDT Lessons Content  \nconst ndtLessonsContent = [\n  {\n    title: 'AI Tutor: Visual Inspection Fundamentals',\n    content: `# AI Tutor: Visual Inspection Fundamentals\n\n## Welcome to Your NDT AI Tutor\n\nI'm your specialized AI tutor for Non-Destructive Testing and Inspection. I'll guide you through the fundamentals of visual inspection with real-world applications and industry best practices.\n\n## Learning Objectives\n- Master visual inspection principles and techniques\n- Understand equipment requirements and selection\n- Learn systematic inspection procedures\n- Develop documentation and reporting skills\n- Identify common surface defects and anomalies\n\n## Core Concepts\n\n### What is Visual Inspection?\nVisual inspection is the primary and most fundamental NDT method used in underwater inspection. It provides immediate assessment of surface conditions and is often the first step in any inspection program.\n\n**Key Principle**: \"If you can see it, you can document it.\"\n\n### Equipment Requirements\n- **High-intensity underwater lights**: Minimum 10,000 lumens for deep water\n- **Video recording equipment**: 4K resolution with macro capabilities\n- **Measuring tools and scales**: Calibrated rulers and depth gauges\n- **Clean surfaces for reference**: Standard cleaning materials\n\n## Inspection Procedures\n\n### 1. Pre-inspection Planning\n- Review previous inspection reports\n- Identify areas of concern\n- Plan inspection sequence\n- Check equipment functionality\n\n### 2. Surface Preparation\n- Remove marine growth where necessary\n- Clean surfaces for better visibility\n- Mark inspection areas\n- Establish reference points\n\n### 3. Systematic Inspection\n- Follow predetermined grid patterns\n- Document all findings with photos/video\n- Measure defect dimensions\n- Record environmental conditions\n\n## Common Defects to Identify\n\n### Corrosion Types\n- **General Corrosion**: Uniform metal loss across surface\n- **Pitting Corrosion**: Localized deep penetration\n- **Galvanic Corrosion**: Accelerated corrosion of less noble metal\n- **Crevice Corrosion**: Corrosion in confined spaces\n\n### Structural Defects\n- **Cracks**: Linear defects requiring immediate attention\n- **Weld Defects**: Poor penetration, undercut, or porosity\n- **Mechanical Damage**: Impact damage or wear patterns\n- **Fatigue**: Stress-related cracking patterns\n\n## Documentation Standards\n\n### Photography Requirements\n**Lighting**: Even, shadow-free illumination\n**Scale References**: Include measurement scales in all photos\n**Multiple Angles**: Document defects from various viewpoints\n**High Resolution**: Minimum 4K for detailed documentation\n\n### Report Writing\n**Clear Descriptions**: Use standard terminology\n**Accurate Measurements**: Record precise dimensions\n**Severity Assessment**: Classify defect severity levels\n**Recommendations**: Provide clear action recommendations\n\n**AI Tutor Tip**: Good documentation today prevents confusion tomorrow.\n\n## Quality Assurance\n\n### Inspection Standards\n**Industry Codes**: Follow applicable inspection standards\n**Client Requirements**: Meet specific client specifications\n**Regulatory Compliance**: Ensure regulatory compliance\n**Best Practices**: Apply industry best practices\n\n### Verification Methods\n**Peer Review**: Have experienced inspectors review findings\n**Calibration**: Regular equipment calibration\n**Training**: Continuous skill development\n**Documentation**: Maintain inspection records\n\n---\n\n*Progress to advanced NDT methods including ultrasonic and magnetic particle testing.*`\n  }\n];\n\n// Function to import content to database\nexport async function importRepositoryContent() {\n  try {\n    console.log('Starting content import from repositories...');\n\n    // Get existing track IDs (tracks already created from previous run)\n    const alstTrackResult = await db.execute(`\n      SELECT id FROM tracks WHERE slug = 'alst-training'\n    `);\n    const alstTrackId = alstTrackResult.rows[0]?.id;\n\n    const lstTrackResult = await db.execute(`\n      SELECT id FROM tracks WHERE slug = 'lst-training'\n    `);\n    const lstTrackId = lstTrackResult.rows[0]?.id;\n\n    const ndtTrackResult = await db.execute(`\n      SELECT id FROM tracks WHERE slug = 'ndt-training'\n    `);\n    const ndtTrackId = ndtTrackResult.rows[0]?.id;\n\n    console.log(`Found track IDs: ALST=${alstTrackId}, LST=${lstTrackId}, NDT=${ndtTrackId}`);\n\n    // Insert ALST Lessons\n    for (let i = 0; i < alstLessonsContent.length; i++) {\n      const lessonTitle = alstLessonsContent[i].title.replace(/'/g, \"''\");\n      const lessonContent = alstLessonsContent[i].content.replace(/'/g, \"''\");\n      await db.execute(`\n        INSERT INTO lessons (track_id, title, \"order\", content, estimated_minutes, is_required) \n        VALUES ('${alstTrackId}', '${lessonTitle}', ${i + 1}, '${lessonContent}', 60, true)\n      `);\n    }\n\n    // Insert LST Lessons\n    for (let i = 0; i < lstLessonsContent.length; i++) {\n      const lessonTitle = lstLessonsContent[i].title.replace(/'/g, \"''\");\n      const lessonContent = lstLessonsContent[i].content.replace(/'/g, \"''\");\n      await db.execute(`\n        INSERT INTO lessons (track_id, title, \"order\", content, estimated_minutes, is_required) \n        VALUES ('${lstTrackId}', '${lessonTitle}', ${i + 1}, '${lessonContent}', 90, true)\n      `);\n    }\n\n    // Insert NDT Lessons\n    for (let i = 0; i < ndtLessonsContent.length; i++) {\n      const lessonTitle = ndtLessonsContent[i].title.replace(/'/g, \"''\");\n      const lessonContent = ndtLessonsContent[i].content.replace(/'/g, \"''\");\n      await db.execute(`\n        INSERT INTO lessons (track_id, title, \"order\", content, estimated_minutes, is_required) \n        VALUES ('${ndtTrackId}', '${lessonTitle}', ${i + 1}, '${lessonContent}', 75, true)\n      `);\n    }\n\n    console.log('Successfully imported content from both repositories!');\n    console.log(`Created tracks: ALST, LST, NDT`);\n    console.log(`Total lessons imported: ${alstLessonsContent.length + lstLessonsContent.length + ndtLessonsContent.length}`);\n\n    return {\n      success: true,\n      tracksCreated: 3,\n      lessonsImported: alstLessonsContent.length + lstLessonsContent.length + ndtLessonsContent.length\n    };\n\n  } catch (error: any) {\n    console.error('Error importing repository content:', error);\n    return {\n      success: false,\n      error: error?.message || 'Unknown error occurred'\n    };\n  }\n}","size_bytes":16456},"server/routes/import-content.ts":{"content":"import type { Express } from \"express\";\nimport { importRepositoryContent } from \"../../scripts/import-repository-content\";\n\nexport function registerImportRoutes(app: Express) {\n  // Import content from GitHub repositories\n  app.post('/api/admin/import-repository-content', async (req, res) => {\n    try {\n      console.log('Starting repository content import...');\n      \n      const result = await importRepositoryContent();\n      \n      if (result.success) {\n        res.json({\n          success: true,\n          message: 'Successfully imported content from GitHub repositories',\n          data: {\n            tracksCreated: result.tracksCreated,\n            lessonsImported: result.lessonsImported\n          }\n        });\n      } else {\n        res.status(500).json({\n          success: false,\n          message: 'Failed to import repository content',\n          error: result.error\n        });\n      }\n    } catch (error: any) {\n      console.error('Import route error:', error);\n      res.status(500).json({\n        success: false,\n        message: 'Internal server error during import',\n        error: error?.message || 'Unknown error occurred'\n      });\n    }\n  });\n}","size_bytes":1173},"client/src/components/user-status-badge.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { Crown, Star, Award, Clock } from \"lucide-react\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\n\ninterface UserStatusBadgeProps {\n  role: 'USER' | 'ADMIN' | 'SUPER_ADMIN' | 'LIFETIME' | 'AFFILIATE';\n  subscriptionType: 'TRIAL' | 'MONTHLY' | 'ANNUAL' | 'LIFETIME';\n  subscriptionDate?: string;\n  trialExpiresAt?: string;\n  userName?: string;\n}\n\nexport default function UserStatusBadge({ \n  role, \n  subscriptionType, \n  subscriptionDate, \n  trialExpiresAt,\n  userName \n}: UserStatusBadgeProps) {\n  const [timeLeft, setTimeLeft] = useState<{\n    hours: number;\n    minutes: number;\n    seconds: number;\n    total: number;\n  }>({ hours: 0, minutes: 0, seconds: 0, total: 0 });\n\n  useEffect(() => {\n    if ((subscriptionType === 'TRIAL' && trialExpiresAt) || \n        (subscriptionType === 'MONTHLY' || subscriptionType === 'ANNUAL') && subscriptionDate) {\n      \n      const calculateTimeLeft = () => {\n        let targetDate: Date;\n        \n        if (subscriptionType === 'TRIAL' && trialExpiresAt) {\n          targetDate = new Date(trialExpiresAt);\n        } else if (subscriptionType === 'MONTHLY' && subscriptionDate) {\n          // Monthly subscription renews every 30 days\n          const subDate = new Date(subscriptionDate);\n          targetDate = new Date(subDate.getTime() + (30 * 24 * 60 * 60 * 1000));\n        } else if (subscriptionType === 'ANNUAL' && subscriptionDate) {\n          // Annual subscription renews every 365 days\n          const subDate = new Date(subscriptionDate);\n          targetDate = new Date(subDate.getTime() + (365 * 24 * 60 * 60 * 1000));\n        } else {\n          return;\n        }\n\n        const now = new Date().getTime();\n        const target = targetDate.getTime();\n        const difference = target - now;\n\n        if (difference > 0) {\n          const days = Math.floor(difference / (1000 * 60 * 60 * 24));\n          const hours = Math.floor((difference % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n          const minutes = Math.floor((difference % (1000 * 60 * 60)) / (1000 * 60));\n          const seconds = Math.floor((difference % (1000 * 60)) / 1000);\n          \n          setTimeLeft({ hours: days * 24 + hours, minutes, seconds, total: difference });\n        } else {\n          setTimeLeft({ hours: 0, minutes: 0, seconds: 0, total: 0 });\n        }\n      };\n\n      calculateTimeLeft();\n      const timer = setInterval(calculateTimeLeft, 1000);\n      return () => clearInterval(timer);\n    }\n  }, [subscriptionType, subscriptionDate, trialExpiresAt]);\n\n  // Admin Crown Badge\n  if (role === 'ADMIN' || role === 'SUPER_ADMIN') {\n    return (\n      <Card className=\"border-yellow-200 bg-gradient-to-r from-yellow-50 to-amber-50\">\n        <CardContent className=\"p-4\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-3\">\n              <div className=\"w-10 h-10 rounded-full bg-gradient-to-br from-yellow-400 to-amber-500 flex items-center justify-center\">\n                <Crown className=\"w-6 h-6 text-white\" />\n              </div>\n              <div>\n                <div className=\"flex items-center space-x-2\">\n                  <span className=\"font-semibold text-amber-800\">\n                    {role === 'SUPER_ADMIN' ? 'Super Admin' : 'Admin'}\n                  </span>\n                  <Badge variant=\"secondary\" className=\"bg-amber-100 text-amber-800 border-amber-200\">\n                    Full Access\n                  </Badge>\n                </div>\n                {userName && (\n                  <p className=\"text-sm text-amber-600\">Welcome, {userName}</p>\n                )}\n              </div>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  // Lifetime Access Gold Star Badge\n  if (subscriptionType === 'LIFETIME') {\n    return (\n      <Card className=\"border-yellow-200 bg-gradient-to-r from-yellow-50 to-yellow-100\">\n        <CardContent className=\"p-4\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-3\">\n              <div className=\"w-10 h-10 rounded-full bg-gradient-to-br from-yellow-400 to-yellow-600 flex items-center justify-center\">\n                <Star className=\"w-6 h-6 text-white\" />\n              </div>\n              <div>\n                <div className=\"flex items-center space-x-2\">\n                  <span className=\"font-semibold text-yellow-800\">Lifetime Member</span>\n                  <Badge variant=\"secondary\" className=\"bg-yellow-100 text-yellow-800 border-yellow-200\">\n                    ⭐ Unlimited Access\n                  </Badge>\n                </div>\n                {userName && (\n                  <p className=\"text-sm text-yellow-600\">Welcome back, {userName}</p>\n                )}\n              </div>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  // Annual Subscription Gold Medal Badge with Countdown\n  if (subscriptionType === 'ANNUAL') {\n    const isExpired = timeLeft.total <= 0;\n    const isNearExpiry = timeLeft.total <= 7 * 24 * 60 * 60 * 1000; // 7 days\n\n    return (\n      <Card className={`${isNearExpiry ? 'border-orange-200 bg-gradient-to-r from-orange-50 to-orange-100' : 'border-yellow-200 bg-gradient-to-r from-yellow-50 to-yellow-100'}`}>\n        <CardContent className=\"p-4\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-3\">\n              <div className={`w-10 h-10 rounded-full flex items-center justify-center ${\n                isNearExpiry ? 'bg-gradient-to-br from-orange-400 to-orange-600' : 'bg-gradient-to-br from-yellow-400 to-yellow-600'\n              }`}>\n                <Award className=\"w-6 h-6 text-white\" />\n              </div>\n              <div>\n                <div className=\"flex items-center space-x-2\">\n                  <span className={`font-semibold ${isNearExpiry ? 'text-orange-800' : 'text-yellow-800'}`}>\n                    Annual Member\n                  </span>\n                  <Badge variant=\"secondary\" className={`${\n                    isNearExpiry ? 'bg-orange-100 text-orange-800 border-orange-200' : 'bg-yellow-100 text-yellow-800 border-yellow-200'\n                  }`}>\n                    🥇 Gold Access\n                  </Badge>\n                </div>\n                {!isExpired && (\n                  <p className={`text-sm ${isNearExpiry ? 'text-orange-600' : 'text-yellow-600'}`}>\n                    Renews in {Math.floor(timeLeft.hours / 24)} days, {timeLeft.hours % 24}h {timeLeft.minutes}m\n                  </p>\n                )}\n                {isExpired && (\n                  <p className=\"text-sm text-red-600\">Subscription expired - please renew</p>\n                )}\n              </div>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  // Monthly Subscription Silver Medal Badge with Countdown\n  if (subscriptionType === 'MONTHLY') {\n    const isExpired = timeLeft.total <= 0;\n    const isNearExpiry = timeLeft.total <= 3 * 24 * 60 * 60 * 1000; // 3 days\n\n    return (\n      <Card className={`${isNearExpiry ? 'border-orange-200 bg-gradient-to-r from-orange-50 to-orange-100' : 'border-slate-200 bg-gradient-to-r from-slate-50 to-slate-100'}`}>\n        <CardContent className=\"p-4\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-3\">\n              <div className={`w-10 h-10 rounded-full flex items-center justify-center ${\n                isNearExpiry ? 'bg-gradient-to-br from-orange-400 to-orange-600' : 'bg-gradient-to-br from-slate-400 to-slate-600'\n              }`}>\n                <Award className=\"w-6 h-6 text-white\" />\n              </div>\n              <div>\n                <div className=\"flex items-center space-x-2\">\n                  <span className={`font-semibold ${isNearExpiry ? 'text-orange-800' : 'text-slate-800'}`}>\n                    Monthly Member\n                  </span>\n                  <Badge variant=\"secondary\" className={`${\n                    isNearExpiry ? 'bg-orange-100 text-orange-800 border-orange-200' : 'bg-slate-100 text-slate-800 border-slate-200'\n                  }`}>\n                    🥈 Silver Access\n                  </Badge>\n                </div>\n                {!isExpired && (\n                  <p className={`text-sm ${isNearExpiry ? 'text-orange-600' : 'text-slate-600'}`}>\n                    Renews in {Math.floor(timeLeft.hours / 24)} days, {timeLeft.hours % 24}h {timeLeft.minutes}m\n                  </p>\n                )}\n                {isExpired && (\n                  <p className=\"text-sm text-red-600\">Subscription expired - please renew</p>\n                )}\n              </div>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  // Trial User Badge with 24hr Countdown\n  if (subscriptionType === 'TRIAL') {\n    const isExpired = timeLeft.total <= 0;\n    const isLowTime = timeLeft.total <= 3600000; // 1 hour remaining\n\n    return (\n      <Card className={`${isLowTime ? 'border-red-200 bg-gradient-to-r from-red-50 to-red-100' : 'border-blue-200 bg-gradient-to-r from-blue-50 to-blue-100'}`}>\n        <CardContent className=\"p-4\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-3\">\n              <div className={`w-10 h-10 rounded-full flex items-center justify-center ${\n                isLowTime ? 'bg-gradient-to-br from-red-400 to-red-600' : 'bg-gradient-to-br from-blue-400 to-blue-600'\n              }`}>\n                <Clock className=\"w-5 h-5 text-white\" />\n              </div>\n              <div>\n                <div className=\"flex items-center space-x-2\">\n                  <span className={`font-semibold ${isLowTime ? 'text-red-800' : 'text-blue-800'}`}>\n                    Free Trial\n                  </span>\n                  <Badge variant=\"secondary\" className={`${\n                    isLowTime ? 'bg-red-100 text-red-800 border-red-200' : 'bg-blue-100 text-blue-800 border-blue-200'\n                  }`}>\n                    24-Hour Access\n                  </Badge>\n                </div>\n                {!isExpired && (\n                  <p className={`text-sm ${isLowTime ? 'text-red-600' : 'text-blue-600'}`}>\n                    {timeLeft.hours}h {timeLeft.minutes}m {timeLeft.seconds}s remaining\n                  </p>\n                )}\n                {isExpired && (\n                  <p className=\"text-sm text-red-600\">Trial expired - upgrade to continue</p>\n                )}\n              </div>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  // Default fallback\n  return (\n    <Card className=\"border-slate-200 bg-slate-50\">\n      <CardContent className=\"p-4\">\n        <div className=\"flex items-center space-x-3\">\n          <div className=\"w-10 h-10 rounded-full bg-slate-300 flex items-center justify-center\">\n            <Clock className=\"w-5 h-5 text-slate-600\" />\n          </div>\n          <div>\n            <span className=\"font-semibold text-slate-800\">User</span>\n            {userName && (\n              <p className=\"text-sm text-slate-600\">Welcome, {userName}</p>\n            )}\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}","size_bytes":11444},"client/src/pages/demo-users.tsx":{"content":"import { useState } from \"react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport UserStatusBadge from \"@/components/user-status-badge\";\nimport Navigation from \"@/components/navigation\";\n\nconst demoUsers = [\n  {\n    id: 'admin',\n    name: 'Admin User',\n    email: 'lalabalavu.jon@gmail.com',\n    role: 'ADMIN',\n    subscriptionType: 'LIFETIME',\n    subscriptionDate: new Date('2024-01-01').toISOString(),\n    trialExpiresAt: null\n  },\n  {\n    id: 'lifetime-1',\n    name: 'Lifetime Member 1',\n    email: 'eroni2519@gmail.com',\n    role: 'LIFETIME',\n    subscriptionType: 'LIFETIME',\n    subscriptionDate: new Date('2024-01-01').toISOString(),\n    trialExpiresAt: null\n  },\n  {\n    id: 'lifetime-2',\n    name: 'Lifetime Member 2',\n    email: 'jone.cirikidaveta@gmail.com',\n    role: 'LIFETIME',\n    subscriptionType: 'LIFETIME',\n    subscriptionDate: new Date('2024-01-01').toISOString(),\n    trialExpiresAt: null\n  },\n  {\n    id: 'annual',\n    name: 'Annual Subscriber',\n    email: 'annual@example.com',\n    role: 'USER',\n    subscriptionType: 'ANNUAL',\n    subscriptionDate: new Date('2024-08-01').toISOString(), // Started Aug 1, 2024\n    trialExpiresAt: null\n  },\n  {\n    id: 'monthly',\n    name: 'Monthly Subscriber',\n    email: 'monthly@example.com',\n    role: 'USER',\n    subscriptionType: 'MONTHLY',\n    subscriptionDate: new Date('2025-08-01').toISOString(), // Started Aug 1, 2025\n    trialExpiresAt: null\n  },\n  {\n    id: 'trial',\n    name: 'Trial User',\n    email: 'trial@example.com',\n    role: 'USER',\n    subscriptionType: 'TRIAL',\n    subscriptionDate: null,\n    trialExpiresAt: new Date(Date.now() + 12 * 60 * 60 * 1000).toISOString() // 12 hours remaining\n  },\n  {\n    id: 'trial-low',\n    name: 'Trial User (Low Time)',\n    email: 'triallow@example.com',\n    role: 'USER',\n    subscriptionType: 'TRIAL',\n    subscriptionDate: null,\n    trialExpiresAt: new Date(Date.now() + 30 * 60 * 1000).toISOString() // 30 minutes remaining\n  }\n];\n\nexport default function DemoUsers() {\n  const [selectedUser, setSelectedUser] = useState(demoUsers[0]);\n\n  const switchToDashboard = (user: any) => {\n    // Set email in localStorage for dashboard to pick up\n    localStorage.setItem('userEmail', user.email);\n    window.location.href = '/dashboard';\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <Navigation />\n      \n      <main className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        <div className=\"mb-8\">\n          <h1 className=\"text-3xl font-bold text-slate-900 mb-4\">User Badge System Demo</h1>\n          <p className=\"text-slate-600\">\n            Test different user roles and subscription types with their respective badges and countdown timers.\n          </p>\n        </div>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n          {/* User Selection */}\n          <div>\n            <Card>\n              <CardHeader>\n                <CardTitle>Select Demo User</CardTitle>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                {demoUsers.map((user) => (\n                  <div key={user.id} className=\"flex items-center justify-between p-3 border rounded-lg\">\n                    <div>\n                      <div className=\"font-medium text-slate-900\">{user.name}</div>\n                      <div className=\"text-sm text-slate-500\">{user.email}</div>\n                      <div className=\"text-xs text-slate-400\">\n                        {user.role} • {user.subscriptionType}\n                      </div>\n                    </div>\n                    <div className=\"space-x-2\">\n                      <Button \n                        size=\"sm\" \n                        variant={selectedUser.id === user.id ? \"default\" : \"outline\"}\n                        onClick={() => setSelectedUser(user)}\n                        data-testid={`button-select-${user.id}`}\n                      >\n                        Preview\n                      </Button>\n                      <Button \n                        size=\"sm\" \n                        onClick={() => switchToDashboard(user)}\n                        data-testid={`button-dashboard-${user.id}`}\n                      >\n                        Go to Dashboard\n                      </Button>\n                    </div>\n                  </div>\n                ))}\n              </CardContent>\n            </Card>\n          </div>\n\n          {/* Badge Preview */}\n          <div>\n            <Card>\n              <CardHeader>\n                <CardTitle>Badge Preview: {selectedUser.name}</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-4\">\n                  <UserStatusBadge\n                    role={selectedUser.role as any}\n                    subscriptionType={selectedUser.subscriptionType as any}\n                    subscriptionDate={selectedUser.subscriptionDate}\n                    trialExpiresAt={selectedUser.trialExpiresAt}\n                    userName={selectedUser.name}\n                  />\n\n                  <div className=\"bg-slate-50 p-4 rounded-lg\">\n                    <h4 className=\"font-medium text-slate-900 mb-2\">Badge Details:</h4>\n                    <ul className=\"text-sm text-slate-600 space-y-1\">\n                      <li><strong>Role:</strong> {selectedUser.role}</li>\n                      <li><strong>Subscription:</strong> {selectedUser.subscriptionType}</li>\n                      {selectedUser.subscriptionDate && (\n                        <li><strong>Started:</strong> {new Date(selectedUser.subscriptionDate).toLocaleDateString()}</li>\n                      )}\n                      {selectedUser.trialExpiresAt && (\n                        <li><strong>Trial Expires:</strong> {new Date(selectedUser.trialExpiresAt).toLocaleString()}</li>\n                      )}\n                    </ul>\n                  </div>\n\n                  <div className=\"bg-blue-50 p-4 rounded-lg\">\n                    <h4 className=\"font-medium text-blue-900 mb-2\">Expected Badge:</h4>\n                    <ul className=\"text-sm text-blue-700 space-y-1\">\n                      {selectedUser.role === 'ADMIN' && (\n                        <li>👑 Crown badge (no countdown)</li>\n                      )}\n                      {selectedUser.role === 'LIFETIME' && (\n                        <li>⭐ Gold star badge (no countdown)</li>\n                      )}\n                      {selectedUser.subscriptionType === 'ANNUAL' && (\n                        <li>🥇 Gold medal with yearly countdown</li>\n                      )}\n                      {selectedUser.subscriptionType === 'MONTHLY' && (\n                        <li>🥈 Silver medal with monthly countdown</li>\n                      )}\n                      {selectedUser.subscriptionType === 'TRIAL' && (\n                        <li>⏰ Clock icon with 24-hour countdown</li>\n                      )}\n                    </ul>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n}","size_bytes":7170},"client/src/components/user-profile-dropdown.tsx":{"content":"import { useState } from \"react\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { User, Settings, LogOut, Shield, Star, Award, Crown } from \"lucide-react\";\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuGroup,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport UserStatusBadge from \"@/components/user-status-badge\";\nimport { useToast } from \"@/hooks/use-toast\";\n\nexport default function UserProfileDropdown() {\n  const { toast } = useToast();\n  \n  // Get current user data\n  const { data: currentUser } = useQuery({\n    queryKey: [\"/api/users/current\"],\n    queryFn: async () => {\n      const email = localStorage.getItem('userEmail') || 'lalabalavu.jon@gmail.com';\n      const response = await fetch(`/api/users/current?email=${email}`);\n      if (!response.ok) throw new Error('Failed to fetch user');\n      return response.json();\n    }\n  });\n\n  // Don't show profile dropdown for trial users\n  if (currentUser?.subscriptionType === 'TRIAL') {\n    return null;\n  }\n\n  const handleSignOut = () => {\n    localStorage.removeItem('userEmail');\n    toast({\n      title: \"Signed Out\",\n      description: \"You have been successfully signed out.\",\n    });\n    // Redirect to landing page after a brief delay\n    setTimeout(() => {\n      window.location.href = '/';\n    }, 1000);\n  };\n\n  const getRoleIcon = (role: string) => {\n    switch (role) {\n      case 'ADMIN':\n      case 'SUPER_ADMIN':\n        return <Crown className=\"w-4 h-4 text-yellow-600\" />;\n      case 'LIFETIME':\n        return <Star className=\"w-4 h-4 text-yellow-500\" />;\n      default:\n        return <Shield className=\"w-4 h-4 text-blue-600\" />;\n    }\n  };\n\n  const getRoleBadge = (role: string, subscriptionType: string) => {\n    if (role === 'ADMIN' || role === 'SUPER_ADMIN') {\n      return <Badge variant=\"secondary\" className=\"bg-yellow-100 text-yellow-800\">👑 Admin</Badge>;\n    }\n    if (subscriptionType === 'LIFETIME') {\n      return <Badge variant=\"secondary\" className=\"bg-yellow-100 text-yellow-800\">⭐ Lifetime</Badge>;\n    }\n    if (subscriptionType === 'ANNUAL') {\n      return <Badge variant=\"secondary\" className=\"bg-yellow-100 text-yellow-800\">🥇 Annual</Badge>;\n    }\n    if (subscriptionType === 'MONTHLY') {\n      return <Badge variant=\"secondary\" className=\"bg-slate-100 text-slate-800\">🥈 Monthly</Badge>;\n    }\n    return <Badge variant=\"secondary\">Member</Badge>;\n  };\n\n  const getInitials = (name: string, email: string) => {\n    if (name && name !== 'Admin User' && name !== 'Lifetime Member' && name !== 'Trial User') {\n      return name.split(' ').map(n => n[0]).join('').toUpperCase();\n    }\n    // Fallback to email initials\n    const emailParts = email.split('@')[0];\n    return emailParts.slice(0, 2).toUpperCase();\n  };\n\n  return (\n    <DropdownMenu>\n      <DropdownMenuTrigger asChild>\n        <Button \n          variant=\"ghost\" \n          className=\"flex items-center space-x-2 hover:bg-gray-100\"\n          data-testid=\"button-user-profile\"\n        >\n          <div className=\"w-8 h-8 bg-primary-100 rounded-full flex items-center justify-center\">\n            <span className=\"text-primary-700 font-medium text-sm\">\n              {getInitials(currentUser?.name || '', currentUser?.email || '')}\n            </span>\n          </div>\n          <div className=\"hidden md:block text-left\">\n            <div className=\"text-sm font-medium text-slate-700\">\n              {currentUser?.name || 'User'}\n            </div>\n          </div>\n        </Button>\n      </DropdownMenuTrigger>\n      <DropdownMenuContent className=\"w-80\" align=\"end\" forceMount>\n        <DropdownMenuLabel className=\"font-normal\">\n          <div className=\"flex flex-col space-y-3\">\n            <div className=\"flex items-center space-x-3\">\n              <div className=\"w-12 h-12 bg-primary-100 rounded-full flex items-center justify-center\">\n                <span className=\"text-primary-700 font-medium text-lg\">\n                  {getInitials(currentUser?.name || '', currentUser?.email || '')}\n                </span>\n              </div>\n              <div className=\"flex-1\">\n                <p className=\"text-sm font-medium leading-none\">\n                  {currentUser?.name || 'User'}\n                </p>\n                <p className=\"text-xs leading-none text-muted-foreground mt-1\">\n                  {currentUser?.email}\n                </p>\n              </div>\n              {getRoleIcon(currentUser?.role)}\n            </div>\n            \n            {/* Role Badge */}\n            <div className=\"flex justify-center\">\n              {getRoleBadge(currentUser?.role, currentUser?.subscriptionType)}\n            </div>\n\n            {/* Mini Status Badge */}\n            <div className=\"scale-90 origin-left\">\n              <UserStatusBadge\n                role={currentUser?.role || 'USER'}\n                subscriptionType={currentUser?.subscriptionType || 'TRIAL'}\n                subscriptionDate={currentUser?.subscriptionDate}\n                trialExpiresAt={currentUser?.trialExpiresAt}\n                userName={currentUser?.name}\n              />\n            </div>\n          </div>\n        </DropdownMenuLabel>\n        \n        <DropdownMenuSeparator />\n        \n        <DropdownMenuGroup>\n          <DropdownMenuItem\n            onClick={() => window.location.href = '/profile-settings'}\n            data-testid=\"menu-profile\"\n          >\n            <User className=\"mr-2 h-4 w-4\" />\n            <span>Profile Settings</span>\n          </DropdownMenuItem>\n          <DropdownMenuItem\n            onClick={() => window.location.href = '/dashboard'}\n            data-testid=\"menu-dashboard\"\n          >\n            <Settings className=\"mr-2 h-4 w-4\" />\n            <span>Dashboard</span>\n          </DropdownMenuItem>\n          <DropdownMenuItem\n            onClick={() => window.location.href = '/affiliate'}\n            data-testid=\"menu-affiliate\"\n          >\n            <Star className=\"mr-2 h-4 w-4\" />\n            <span>Affiliate Dashboard</span>\n          </DropdownMenuItem>\n        </DropdownMenuGroup>\n        \n        <DropdownMenuSeparator />\n        \n        <DropdownMenuItem \n          onClick={handleSignOut}\n          data-testid=\"menu-signout\"\n        >\n          <LogOut className=\"mr-2 h-4 w-4\" />\n          <span>Sign out</span>\n        </DropdownMenuItem>\n      </DropdownMenuContent>\n    </DropdownMenu>\n  );\n}","size_bytes":6542},"client/src/pages/profile-settings.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport * as React from \"react\";\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Separator } from \"@/components/ui/separator\";\nimport { Switch } from \"@/components/ui/switch\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { \n  User, \n  Upload, \n  Camera, \n  Save, \n  Shield, \n  Bell, \n  Palette, \n  Globe, \n  CreditCard,\n  Key,\n  Trash2,\n  Download\n} from \"lucide-react\";\nimport UserStatusBadge from \"@/components/user-status-badge\";\nimport diverWellLogo from \"@assets/DIVER_WELL_TRAINING-500x500-rbg-preview_1756088331820.png\";\nimport { z } from \"zod\";\n\nconst profileSchema = z.object({\n  name: z.string().min(2, \"Name must be at least 2 characters\"),\n  email: z.string().email(\"Please enter a valid email address\"),\n  phone: z.string().optional(),\n  bio: z.string().max(500, \"Bio must be less than 500 characters\").optional(),\n  company: z.string().optional(),\n  jobTitle: z.string().optional(),\n  location: z.string().optional(),\n});\n\ntype ProfileFormData = z.infer<typeof profileSchema>;\n\nexport default function ProfileSettings() {\n  const { toast } = useToast();\n  const queryClient = useQueryClient();\n  const [selectedFile, setSelectedFile] = useState<File | null>(null);\n  const [previewUrl, setPreviewUrl] = useState<string | null>(null);\n\n  // Get current user data\n  const { data: currentUser, isLoading } = useQuery({\n    queryKey: [\"/api/users/current\"],\n    queryFn: async () => {\n      const email = localStorage.getItem('userEmail') || 'lalabalavu.jon@gmail.com';\n      const response = await fetch(`/api/users/current?email=${email}`);\n      if (!response.ok) throw new Error('Failed to fetch user');\n      return response.json();\n    }\n  });\n\n  const form = useForm<ProfileFormData>({\n    resolver: zodResolver(profileSchema),\n    defaultValues: {\n      name: currentUser?.name || '',\n      email: currentUser?.email || '',\n      phone: currentUser?.phone || '',\n      bio: currentUser?.bio || '',\n      company: currentUser?.company || '',\n      jobTitle: currentUser?.jobTitle || '',\n      location: currentUser?.location || '',\n    },\n  });\n\n  // Reset form when user data loads\n  React.useEffect(() => {\n    if (currentUser) {\n      form.reset({\n        name: currentUser.name || '',\n        email: currentUser.email || '',\n        phone: currentUser.phone || '',\n        bio: currentUser.bio || '',\n        company: currentUser.company || '',\n        jobTitle: currentUser.jobTitle || '',\n        location: currentUser.location || '',\n      });\n    }\n  }, [currentUser, form]);\n\n  // Profile update mutation\n  const updateProfileMutation = useMutation({\n    mutationFn: async (data: ProfileFormData) => {\n      const userEmail = localStorage.getItem('userEmail') || currentUser?.email;\n      const response = await fetch('/api/users/profile', {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'x-user-email': userEmail || '',\n        },\n        body: JSON.stringify({ ...data, currentEmail: userEmail }),\n      });\n      \n      if (!response.ok) {\n        throw new Error('Failed to update profile');\n      }\n      \n      return response.json();\n    },\n    onSuccess: () => {\n      toast({\n        title: \"Profile Updated\",\n        description: \"Your profile has been successfully updated.\",\n      });\n      queryClient.invalidateQueries({ queryKey: [\"/api/users/current\"] });\n    },\n    onError: (error: any) => {\n      toast({\n        title: \"Update Failed\",\n        description: error.message || \"Failed to update profile\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  // Profile picture upload mutation\n  const uploadPictureMutation = useMutation({\n    mutationFn: async (file: File) => {\n      // Get upload URL\n      const uploadResponse = await apiRequest('POST', '/api/objects/upload');\n      const { uploadURL } = await uploadResponse.json();\n      \n      // Upload file to object storage\n      await fetch(uploadURL, {\n        method: 'PUT',\n        body: file,\n        headers: {\n          'Content-Type': file.type,\n        },\n      });\n      \n      // Update user profile with new picture URL\n      const userEmail = localStorage.getItem('userEmail') || currentUser?.email;\n      const response = await fetch('/api/users/profile-picture', {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'x-user-email': userEmail || '',\n        },\n        body: JSON.stringify({ profilePictureURL: uploadURL }),\n      });\n      \n      if (!response.ok) {\n        throw new Error('Failed to update profile picture');\n      }\n      \n      return response.json();\n    },\n    onSuccess: () => {\n      toast({\n        title: \"Profile Picture Updated\",\n        description: \"Your profile picture has been successfully updated.\",\n      });\n      queryClient.invalidateQueries({ queryKey: [\"/api/users/current\"] });\n      setSelectedFile(null);\n      setPreviewUrl(null);\n    },\n    onError: (error: any) => {\n      toast({\n        title: \"Upload Failed\",\n        description: error.message || \"Failed to upload profile picture\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const handleFileSelect = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (file) {\n      if (file.size > 5 * 1024 * 1024) { // 5MB limit\n        toast({\n          title: \"File Too Large\",\n          description: \"Please select an image smaller than 5MB\",\n          variant: \"destructive\",\n        });\n        return;\n      }\n      \n      if (!file.type.startsWith('image/')) {\n        toast({\n          title: \"Invalid File Type\",\n          description: \"Please select an image file\",\n          variant: \"destructive\",\n        });\n        return;\n      }\n      \n      setSelectedFile(file);\n      const reader = new FileReader();\n      reader.onload = () => setPreviewUrl(reader.result as string);\n      reader.readAsDataURL(file);\n    }\n  };\n\n  const handleProfileSubmit = (data: ProfileFormData) => {\n    updateProfileMutation.mutate(data);\n  };\n\n  const handlePictureUpload = () => {\n    if (selectedFile) {\n      uploadPictureMutation.mutate(selectedFile);\n    }\n  };\n\n  const getInitials = (name: string, email: string) => {\n    if (name && name !== 'Admin User' && name !== 'Lifetime Member' && name !== 'Trial User') {\n      return name.split(' ').map(n => n[0]).join('').toUpperCase();\n    }\n    const emailParts = email.split('@')[0];\n    return emailParts.slice(0, 2).toUpperCase();\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-white to-slate-50 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin w-8 h-8 border-2 border-blue-600 border-t-transparent rounded-full mx-auto mb-4\"></div>\n          <p className=\"text-slate-600\">Loading profile settings...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-white to-slate-50\">\n      {/* Header */}\n      <nav className=\"bg-white/80 backdrop-blur-md border-b border-slate-200 sticky top-0 z-50\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex justify-between items-center h-16\">\n            <div className=\"flex items-center space-x-3\">\n              <img \n                src={diverWellLogo} \n                alt=\"Professional Diver - Diver Well Training\" \n                className=\"w-10 h-10 rounded-lg\"\n              />\n              <div>\n                <div className=\"text-lg font-bold text-slate-900\">Professional Diver</div>\n                <div className=\"text-xs text-slate-500\">Profile Settings</div>\n              </div>\n            </div>\n            <div className=\"flex items-center space-x-4\">\n              <Button variant=\"outline\" onClick={() => window.history.back()}>\n                Back to Dashboard\n              </Button>\n            </div>\n          </div>\n        </div>\n      </nav>\n\n      <main className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        <div className=\"mb-8\">\n          <h1 className=\"text-3xl font-bold text-slate-900 mb-2\">Account Settings</h1>\n          <p className=\"text-lg text-slate-600\">Manage your profile and account preferences</p>\n        </div>\n\n        <Tabs defaultValue=\"profile\" className=\"space-y-6\">\n          <TabsList className=\"grid w-full grid-cols-4\">\n            <TabsTrigger value=\"profile\">Profile</TabsTrigger>\n            <TabsTrigger value=\"account\">Account</TabsTrigger>\n            <TabsTrigger value=\"notifications\">Notifications</TabsTrigger>\n            <TabsTrigger value=\"preferences\">Preferences</TabsTrigger>\n          </TabsList>\n\n          <TabsContent value=\"profile\" className=\"space-y-6\">\n            <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n              {/* Profile Picture */}\n              <Card>\n                <CardHeader>\n                  <CardTitle className=\"flex items-center gap-2\">\n                    <Camera className=\"w-5 h-5\" />\n                    Profile Picture\n                  </CardTitle>\n                </CardHeader>\n                <CardContent className=\"space-y-4\">\n                  <div className=\"flex flex-col items-center space-y-4\">\n                    <div className=\"relative\">\n                      {previewUrl ? (\n                        <img \n                          src={previewUrl} \n                          alt=\"Preview\" \n                          className=\"w-24 h-24 rounded-full object-cover border-4 border-white shadow-lg\"\n                        />\n                      ) : currentUser?.profilePictureUrl ? (\n                        <img \n                          src={currentUser.profilePictureUrl} \n                          alt=\"Profile\" \n                          className=\"w-24 h-24 rounded-full object-cover border-4 border-white shadow-lg\"\n                        />\n                      ) : (\n                        <div className=\"w-24 h-24 bg-primary-100 rounded-full flex items-center justify-center border-4 border-white shadow-lg\">\n                          <span className=\"text-primary-700 font-medium text-2xl\">\n                            {getInitials(currentUser?.name || '', currentUser?.email || '')}\n                          </span>\n                        </div>\n                      )}\n                    </div>\n                    \n                    <div className=\"text-center\">\n                      <input\n                        type=\"file\"\n                        accept=\"image/*\"\n                        onChange={handleFileSelect}\n                        className=\"hidden\"\n                        id=\"profile-picture-upload\"\n                      />\n                      <label htmlFor=\"profile-picture-upload\">\n                        <Button variant=\"outline\" className=\"cursor-pointer\" asChild>\n                          <span>\n                            <Upload className=\"w-4 h-4 mr-2\" />\n                            Choose Photo\n                          </span>\n                        </Button>\n                      </label>\n                      {selectedFile && (\n                        <Button \n                          className=\"ml-2\"\n                          onClick={handlePictureUpload}\n                          disabled={uploadPictureMutation.isPending}\n                        >\n                          {uploadPictureMutation.isPending ? 'Uploading...' : 'Save Photo'}\n                        </Button>\n                      )}\n                    </div>\n                    \n                    <p className=\"text-xs text-slate-500 text-center\">\n                      Max file size: 5MB<br />\n                      Supported: JPG, PNG, GIF\n                    </p>\n                  </div>\n                </CardContent>\n              </Card>\n\n              {/* Account Status */}\n              <Card className=\"lg:col-span-2\">\n                <CardHeader>\n                  <CardTitle className=\"flex items-center gap-2\">\n                    <Shield className=\"w-5 h-5\" />\n                    Account Status\n                  </CardTitle>\n                </CardHeader>\n                <CardContent className=\"space-y-4\">\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <p className=\"font-medium\">{currentUser?.name}</p>\n                      <p className=\"text-sm text-slate-500\">{currentUser?.email}</p>\n                    </div>\n                    <UserStatusBadge\n                      role={currentUser?.role || 'USER'}\n                      subscriptionType={currentUser?.subscriptionType || 'TRIAL'}\n                      subscriptionDate={currentUser?.subscriptionDate}\n                      trialExpiresAt={currentUser?.trialExpiresAt}\n                      userName={currentUser?.name}\n                    />\n                  </div>\n                  \n                  <Separator />\n                  \n                  <div className=\"grid grid-cols-2 gap-4 text-sm\">\n                    <div>\n                      <p className=\"text-slate-500\">Member Since</p>\n                      <p className=\"font-medium\">\n                        {currentUser?.createdAt ? new Date(currentUser.createdAt).toLocaleDateString() : 'N/A'}\n                      </p>\n                    </div>\n                    <div>\n                      <p className=\"text-slate-500\">Account Type</p>\n                      <p className=\"font-medium\">{currentUser?.role}</p>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n\n            {/* Profile Information Form */}\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center gap-2\">\n                  <User className=\"w-5 h-5\" />\n                  Profile Information\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                <Form {...form}>\n                  <form onSubmit={form.handleSubmit(handleProfileSubmit)} className=\"space-y-6\">\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                      <FormField\n                        control={form.control}\n                        name=\"name\"\n                        render={({ field }) => (\n                          <FormItem>\n                            <FormLabel>Full Name</FormLabel>\n                            <FormControl>\n                              <Input placeholder=\"Enter your full name\" {...field} data-testid=\"input-name\" />\n                            </FormControl>\n                            <FormMessage />\n                          </FormItem>\n                        )}\n                      />\n                      \n                      <FormField\n                        control={form.control}\n                        name=\"email\"\n                        render={({ field }) => (\n                          <FormItem>\n                            <FormLabel>Email Address</FormLabel>\n                            <FormControl>\n                              <Input placeholder=\"Enter your email\" {...field} data-testid=\"input-email\" />\n                            </FormControl>\n                            <FormMessage />\n                          </FormItem>\n                        )}\n                      />\n                      \n                      <FormField\n                        control={form.control}\n                        name=\"phone\"\n                        render={({ field }) => (\n                          <FormItem>\n                            <FormLabel>Phone Number</FormLabel>\n                            <FormControl>\n                              <Input placeholder=\"Enter your phone number\" {...field} data-testid=\"input-phone\" />\n                            </FormControl>\n                            <FormMessage />\n                          </FormItem>\n                        )}\n                      />\n                      \n                      <FormField\n                        control={form.control}\n                        name=\"location\"\n                        render={({ field }) => (\n                          <FormItem>\n                            <FormLabel>Location</FormLabel>\n                            <FormControl>\n                              <Input placeholder=\"City, Country\" {...field} data-testid=\"input-location\" />\n                            </FormControl>\n                            <FormMessage />\n                          </FormItem>\n                        )}\n                      />\n                      \n                      <FormField\n                        control={form.control}\n                        name=\"company\"\n                        render={({ field }) => (\n                          <FormItem>\n                            <FormLabel>Company</FormLabel>\n                            <FormControl>\n                              <Input placeholder=\"Your company name\" {...field} data-testid=\"input-company\" />\n                            </FormControl>\n                            <FormMessage />\n                          </FormItem>\n                        )}\n                      />\n                      \n                      <FormField\n                        control={form.control}\n                        name=\"jobTitle\"\n                        render={({ field }) => (\n                          <FormItem>\n                            <FormLabel>Job Title</FormLabel>\n                            <FormControl>\n                              <Input placeholder=\"Your job title\" {...field} data-testid=\"input-job-title\" />\n                            </FormControl>\n                            <FormMessage />\n                          </FormItem>\n                        )}\n                      />\n                    </div>\n                    \n                    <FormField\n                      control={form.control}\n                      name=\"bio\"\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>Bio</FormLabel>\n                          <FormControl>\n                            <textarea \n                              className=\"w-full p-3 border border-slate-200 rounded-lg resize-none\"\n                              rows={4}\n                              placeholder=\"Tell us about yourself...\"\n                              {...field}\n                              data-testid=\"textarea-bio\"\n                            />\n                          </FormControl>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n                    \n                    <Button \n                      type=\"submit\"\n                      disabled={updateProfileMutation.isPending}\n                      className=\"w-full md:w-auto\"\n                      data-testid=\"button-save-profile\"\n                    >\n                      <Save className=\"w-4 h-4 mr-2\" />\n                      {updateProfileMutation.isPending ? 'Saving...' : 'Save Changes'}\n                    </Button>\n                  </form>\n                </Form>\n              </CardContent>\n            </Card>\n          </TabsContent>\n\n          <TabsContent value=\"account\" className=\"space-y-6\">\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center gap-2\">\n                  <Key className=\"w-5 h-5\" />\n                  Account Security\n                </CardTitle>\n              </CardHeader>\n              <CardContent className=\"space-y-6\">\n                <div className=\"flex items-center justify-between p-4 border border-slate-200 rounded-lg\">\n                  <div>\n                    <h4 className=\"font-medium\">Change Password</h4>\n                    <p className=\"text-sm text-slate-500\">Update your account password</p>\n                  </div>\n                  <Button variant=\"outline\" onClick={() => toast({ title: \"Coming Soon\", description: \"Password change functionality will be added soon.\" })}>\n                    Change Password\n                  </Button>\n                </div>\n                \n                <div className=\"flex items-center justify-between p-4 border border-slate-200 rounded-lg\">\n                  <div>\n                    <h4 className=\"font-medium\">Two-Factor Authentication</h4>\n                    <p className=\"text-sm text-slate-500\">Add an extra layer of security</p>\n                  </div>\n                  <Button variant=\"outline\" onClick={() => toast({ title: \"Coming Soon\", description: \"2FA will be added in a future update.\" })}>\n                    Enable 2FA\n                  </Button>\n                </div>\n              </CardContent>\n            </Card>\n            \n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center gap-2 text-red-600\">\n                  <Trash2 className=\"w-5 h-5\" />\n                  Danger Zone\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"flex items-center justify-between p-4 border border-red-200 rounded-lg bg-red-50\">\n                  <div>\n                    <h4 className=\"font-medium text-red-900\">Delete Account</h4>\n                    <p className=\"text-sm text-red-700\">Permanently delete your account and all data</p>\n                  </div>\n                  <Button variant=\"outline\" className=\"text-red-600 border-red-300 hover:bg-red-50\">\n                    Delete Account\n                  </Button>\n                </div>\n              </CardContent>\n            </Card>\n          </TabsContent>\n\n          <TabsContent value=\"notifications\" className=\"space-y-6\">\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center gap-2\">\n                  <Bell className=\"w-5 h-5\" />\n                  Notification Preferences\n                </CardTitle>\n              </CardHeader>\n              <CardContent className=\"space-y-6\">\n                <div className=\"space-y-4\">\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <h4 className=\"font-medium\">Email Notifications</h4>\n                      <p className=\"text-sm text-slate-500\">Receive updates via email</p>\n                    </div>\n                    <Switch defaultChecked />\n                  </div>\n                  \n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <h4 className=\"font-medium\">Course Progress</h4>\n                      <p className=\"text-sm text-slate-500\">Notifications about lesson completions</p>\n                    </div>\n                    <Switch defaultChecked />\n                  </div>\n                  \n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <h4 className=\"font-medium\">Marketing Updates</h4>\n                      <p className=\"text-sm text-slate-500\">New features and promotions</p>\n                    </div>\n                    <Switch />\n                  </div>\n                  \n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <h4 className=\"font-medium\">Affiliate Updates</h4>\n                      <p className=\"text-sm text-slate-500\">Commission and referral notifications</p>\n                    </div>\n                    <Switch defaultChecked />\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </TabsContent>\n\n          <TabsContent value=\"preferences\" className=\"space-y-6\">\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center gap-2\">\n                  <Palette className=\"w-5 h-5\" />\n                  Display Preferences\n                </CardTitle>\n              </CardHeader>\n              <CardContent className=\"space-y-6\">\n                <div className=\"space-y-4\">\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <h4 className=\"font-medium\">Theme</h4>\n                      <p className=\"text-sm text-slate-500\">Choose your preferred theme</p>\n                    </div>\n                    <Select defaultValue=\"light\">\n                      <SelectTrigger className=\"w-32\">\n                        <SelectValue />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"light\">Light</SelectItem>\n                        <SelectItem value=\"dark\">Dark</SelectItem>\n                        <SelectItem value=\"system\">System</SelectItem>\n                      </SelectContent>\n                    </Select>\n                  </div>\n                  \n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <h4 className=\"font-medium\">Language</h4>\n                      <p className=\"text-sm text-slate-500\">Select your preferred language</p>\n                    </div>\n                    <Select defaultValue=\"en\">\n                      <SelectTrigger className=\"w-32\">\n                        <SelectValue />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"en\">English</SelectItem>\n                        <SelectItem value=\"es\">Español</SelectItem>\n                        <SelectItem value=\"fr\">Français</SelectItem>\n                      </SelectContent>\n                    </Select>\n                  </div>\n                  \n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <h4 className=\"font-medium\">Timezone</h4>\n                      <p className=\"text-sm text-slate-500\">Your local timezone</p>\n                    </div>\n                    <Select defaultValue=\"utc\">\n                      <SelectTrigger className=\"w-48\">\n                        <SelectValue />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"utc\">UTC</SelectItem>\n                        <SelectItem value=\"est\">Eastern Time</SelectItem>\n                        <SelectItem value=\"pst\">Pacific Time</SelectItem>\n                        <SelectItem value=\"cet\">Central European Time</SelectItem>\n                      </SelectContent>\n                    </Select>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </TabsContent>\n        </Tabs>\n      </main>\n    </div>\n  );\n}","size_bytes":27676},"server/objectStorage.ts":{"content":"import { Storage, File } from \"@google-cloud/storage\";\nimport { Response } from \"express\";\nimport { randomUUID } from \"crypto\";\n\nconst REPLIT_SIDECAR_ENDPOINT = \"http://127.0.0.1:1106\";\n\nexport const objectStorageClient = new Storage({\n  credentials: {\n    audience: \"replit\",\n    subject_token_type: \"access_token\",\n    token_url: `${REPLIT_SIDECAR_ENDPOINT}/token`,\n    type: \"external_account\",\n    credential_source: {\n      url: `${REPLIT_SIDECAR_ENDPOINT}/credential`,\n      format: {\n        type: \"json\",\n        subject_token_field_name: \"access_token\",\n      },\n    },\n    universe_domain: \"googleapis.com\",\n  },\n  projectId: \"\",\n});\n\nexport class ObjectNotFoundError extends Error {\n  constructor() {\n    super(\"Object not found\");\n    this.name = \"ObjectNotFoundError\";\n    Object.setPrototypeOf(this, ObjectNotFoundError.prototype);\n  }\n}\n\nexport class ObjectStorageService {\n  constructor() {}\n\n  getPrivateObjectDir(): string {\n    const dir = process.env.PRIVATE_OBJECT_DIR || \"\";\n    if (!dir) {\n      throw new Error(\n        \"PRIVATE_OBJECT_DIR not set. Create a bucket in 'Object Storage' \" +\n          \"tool and set PRIVATE_OBJECT_DIR env var.\"\n      );\n    }\n    return dir;\n  }\n\n  async getObjectEntityUploadURL(): Promise<string> {\n    const privateObjectDir = this.getPrivateObjectDir();\n    if (!privateObjectDir) {\n      throw new Error(\n        \"PRIVATE_OBJECT_DIR not set. Create a bucket in 'Object Storage' \" +\n          \"tool and set PRIVATE_OBJECT_DIR env var.\"\n      );\n    }\n\n    const objectId = randomUUID();\n    const fullPath = `${privateObjectDir}/uploads/${objectId}`;\n\n    const { bucketName, objectName } = parseObjectPath(fullPath);\n\n    return signObjectURL({\n      bucketName,\n      objectName,\n      method: \"PUT\",\n      ttlSec: 900,\n    });\n  }\n\n  async getObjectEntityFile(objectPath: string): Promise<File> {\n    if (!objectPath.startsWith(\"/objects/\")) {\n      throw new ObjectNotFoundError();\n    }\n\n    const parts = objectPath.slice(1).split(\"/\");\n    if (parts.length < 2) {\n      throw new ObjectNotFoundError();\n    }\n\n    const entityId = parts.slice(1).join(\"/\");\n    let entityDir = this.getPrivateObjectDir();\n    if (!entityDir.endsWith(\"/\")) {\n      entityDir = `${entityDir}/`;\n    }\n    const objectEntityPath = `${entityDir}${entityId}`;\n    const { bucketName, objectName } = parseObjectPath(objectEntityPath);\n    const bucket = objectStorageClient.bucket(bucketName);\n    const objectFile = bucket.file(objectName);\n    const [exists] = await objectFile.exists();\n    if (!exists) {\n      throw new ObjectNotFoundError();\n    }\n    return objectFile;\n  }\n\n  normalizeObjectEntityPath(rawPath: string): string {\n    if (!rawPath.startsWith(\"https://storage.googleapis.com/\")) {\n      return rawPath;\n    }\n  \n    const url = new URL(rawPath);\n    const rawObjectPath = url.pathname;\n  \n    let objectEntityDir = this.getPrivateObjectDir();\n    if (!objectEntityDir.endsWith(\"/\")) {\n      objectEntityDir = `${objectEntityDir}/`;\n    }\n  \n    if (!rawObjectPath.startsWith(objectEntityDir)) {\n      return rawObjectPath;\n    }\n\n    const entityId = rawObjectPath.slice(objectEntityDir.length);\n    return `/objects/${entityId}`;\n  }\n\n  async downloadObject(file: File, res: Response, cacheTtlSec: number = 3600) {\n    try {\n      const [metadata] = await file.getMetadata();\n      \n      res.set({\n        \"Content-Type\": metadata.contentType || \"application/octet-stream\",\n        \"Content-Length\": metadata.size,\n        \"Cache-Control\": `public, max-age=${cacheTtlSec}`,\n      });\n\n      const stream = file.createReadStream();\n\n      stream.on(\"error\", (err) => {\n        console.error(\"Stream error:\", err);\n        if (!res.headersSent) {\n          res.status(500).json({ error: \"Error streaming file\" });\n        }\n      });\n\n      stream.pipe(res);\n    } catch (error) {\n      console.error(\"Error downloading file:\", error);\n      if (!res.headersSent) {\n        res.status(500).json({ error: \"Error downloading file\" });\n      }\n    }\n  }\n}\n\nfunction parseObjectPath(path: string): {\n  bucketName: string;\n  objectName: string;\n} {\n  if (!path.startsWith(\"/\")) {\n    path = `/${path}`;\n  }\n  const pathParts = path.split(\"/\");\n  if (pathParts.length < 3) {\n    throw new Error(\"Invalid path: must contain at least a bucket name\");\n  }\n\n  const bucketName = pathParts[1];\n  const objectName = pathParts.slice(2).join(\"/\");\n\n  return {\n    bucketName,\n    objectName,\n  };\n}\n\nasync function signObjectURL({\n  bucketName,\n  objectName,\n  method,\n  ttlSec,\n}: {\n  bucketName: string;\n  objectName: string;\n  method: \"GET\" | \"PUT\" | \"DELETE\" | \"HEAD\";\n  ttlSec: number;\n}): Promise<string> {\n  const request = {\n    bucket_name: bucketName,\n    object_name: objectName,\n    method,\n    expires_at: new Date(Date.now() + ttlSec * 1000).toISOString(),\n  };\n  const response = await fetch(\n    `${REPLIT_SIDECAR_ENDPOINT}/object-storage/signed-object-url`,\n    {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(request),\n    }\n  );\n  if (!response.ok) {\n    throw new Error(\n      `Failed to sign object URL, errorcode: ${response.status}, ` +\n        `make sure you're running on Replit`\n    );\n  }\n\n  const { signed_url: signedURL } = await response.json();\n  return signedURL;\n}","size_bytes":5321},"client/src/components/ObjectUploader.tsx":{"content":"import { useState } from \"react\";\nimport type { ReactNode } from \"react\";\nimport Uppy from \"@uppy/core\";\nimport { DashboardModal } from \"@uppy/react\";\nimport \"@uppy/core/dist/style.min.css\";\nimport \"@uppy/dashboard/dist/style.min.css\";\nimport AwsS3 from \"@uppy/aws-s3\";\nimport type { UploadResult } from \"@uppy/core\";\nimport { Button } from \"@/components/ui/button\";\n\ninterface ObjectUploaderProps {\n  maxNumberOfFiles?: number;\n  maxFileSize?: number;\n  onGetUploadParameters: () => Promise<{\n    method: \"PUT\";\n    url: string;\n  }>;\n  onComplete?: (\n    result: UploadResult<Record<string, unknown>, Record<string, unknown>>\n  ) => void;\n  buttonClassName?: string;\n  children: ReactNode;\n}\n\n/**\n * A file upload component that renders as a button and provides a modal interface for\n * file management.\n * \n * Features:\n * - Renders as a customizable button that opens a file upload modal\n * - Provides a modal interface for:\n *   - File selection\n *   - File preview\n *   - Upload progress tracking\n *   - Upload status display\n * \n * The component uses Uppy under the hood to handle all file upload functionality.\n * All file management features are automatically handled by the Uppy dashboard modal.\n * \n * @param props - Component props\n * @param props.maxNumberOfFiles - Maximum number of files allowed to be uploaded\n *   (default: 1)\n * @param props.maxFileSize - Maximum file size in bytes (default: 10MB)\n * @param props.onGetUploadParameters - Function to get upload parameters (method and URL).\n *   Typically used to fetch a presigned URL from the backend server for direct-to-S3\n *   uploads.\n * @param props.onComplete - Callback function called when upload is complete. Typically\n *   used to make post-upload API calls to update server state and set object ACL\n *   policies.\n * @param props.buttonClassName - Optional CSS class name for the button\n * @param props.children - Content to be rendered inside the button\n */\nexport function ObjectUploader({\n  maxNumberOfFiles = 1,\n  maxFileSize = 10485760, // 10MB default\n  onGetUploadParameters,\n  onComplete,\n  buttonClassName,\n  children,\n}: ObjectUploaderProps) {\n  const [showModal, setShowModal] = useState(false);\n  const [uppy] = useState(() =>\n    new Uppy({\n      restrictions: {\n        maxNumberOfFiles,\n        maxFileSize,\n      },\n      autoProceed: false,\n    })\n      .use(AwsS3, {\n        shouldUseMultipart: false,\n        getUploadParameters: onGetUploadParameters,\n      })\n      .on(\"complete\", (result) => {\n        onComplete?.(result);\n      })\n  );\n\n  return (\n    <div>\n      <Button onClick={() => setShowModal(true)} className={buttonClassName}>\n        {children}\n      </Button>\n\n      <DashboardModal\n        uppy={uppy}\n        open={showModal}\n        onRequestClose={() => setShowModal(false)}\n        proudlyDisplayPoweredByUppy={false}\n      />\n    </div>\n  );\n}","size_bytes":2866},"client/src/components/dual-ai-assistant.tsx":{"content":"import { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle, DialogTrigger } from \"@/components/ui/dialog\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Bot, Headphones, MessageCircle, ExternalLink, User, Settings, HelpCircle, Wrench } from \"lucide-react\";\n\nexport default function DualAIAssistant() {\n  const [isOpen, setIsOpen] = useState(false);\n\n  return (\n    <Dialog open={isOpen} onOpenChange={setIsOpen}>\n      <DialogTrigger asChild>\n        <button \n          className=\"text-slate-600 hover:text-slate-900 p-2 rounded-lg hover:bg-gray-100 transition-colors flex items-center gap-2\"\n          data-testid=\"button-ai-assistants\"\n          title=\"AI Assistants\"\n        >\n          <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z\"/>\n          </svg>\n          <span className=\"hidden md:inline text-sm font-medium\">AI Assistants</span>\n        </button>\n      </DialogTrigger>\n      \n      <DialogContent className=\"sm:max-w-[600px]\" data-testid=\"dialog-ai-assistants\">\n        <DialogHeader>\n          <DialogTitle className=\"flex items-center space-x-2\">\n            <Bot className=\"w-6 h-6 text-blue-600\" />\n            <span>Professional Diver AI Assistants</span>\n          </DialogTitle>\n          <DialogDescription>\n            Choose your specialized AI assistant for personalized support and guidance\n          </DialogDescription>\n        </DialogHeader>\n        \n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 py-4\">\n          {/* Laura - Admin & Support Assistant */}\n          <Card className=\"cursor-pointer border-purple-200 hover:border-purple-300 transition-colors group\">\n            <CardHeader className=\"pb-3\">\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center space-x-3\">\n                  <div className=\"w-10 h-10 bg-purple-100 rounded-full flex items-center justify-center\">\n                    <Headphones className=\"w-5 h-5 text-purple-600\" />\n                  </div>\n                  <div>\n                    <CardTitle className=\"text-lg\">Laura</CardTitle>\n                    <CardDescription className=\"text-sm\">Admin & Support</CardDescription>\n                  </div>\n                </div>\n                <Badge variant=\"secondary\" className=\"bg-purple-100 text-purple-700\">\n                  Platform\n                </Badge>\n              </div>\n            </CardHeader>\n            <CardContent className=\"pt-0\">\n              <p className=\"text-sm text-slate-600 mb-4\">\n                Your dedicated platform assistant for account management, technical support, billing inquiries, and general platform guidance.\n              </p>\n              \n              <div className=\"space-y-2 mb-4\">\n                <div className=\"flex items-center space-x-2 text-xs text-slate-500\">\n                  <User className=\"w-3 h-3\" />\n                  <span>Account Management</span>\n                </div>\n                <div className=\"flex items-center space-x-2 text-xs text-slate-500\">\n                  <Settings className=\"w-3 h-3\" />\n                  <span>Technical Support</span>\n                </div>\n                <div className=\"flex items-center space-x-2 text-xs text-slate-500\">\n                  <HelpCircle className=\"w-3 h-3\" />\n                  <span>Platform Guidance</span>\n                </div>\n              </div>\n              \n              <Button \n                className=\"w-full bg-purple-600 hover:bg-purple-700\"\n                onClick={() => {\n                  setIsOpen(false);\n                  // Open embedded chat or redirect to internal Laura chat\n                  window.open('/chat/laura', '_blank');\n                }}\n                data-testid=\"button-chat-laura\"\n              >\n                <MessageCircle className=\"w-4 h-4 mr-2\" />\n                Chat with Laura\n              </Button>\n            </CardContent>\n          </Card>\n\n          {/* Diver Well AI Consultant - Diving Operations */}\n          <Card className=\"cursor-pointer border-blue-200 hover:border-blue-300 transition-colors group\">\n            <CardHeader className=\"pb-3\">\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center space-x-3\">\n                  <div className=\"w-10 h-10 bg-blue-100 rounded-full flex items-center justify-center\">\n                    <Wrench className=\"w-5 h-5 text-blue-600\" />\n                  </div>\n                  <div>\n                    <CardTitle className=\"text-lg\">Diver Well AI</CardTitle>\n                    <CardDescription className=\"text-sm\">Diving Operations</CardDescription>\n                  </div>\n                </div>\n                <Badge variant=\"secondary\" className=\"bg-blue-100 text-blue-700\">\n                  Exclusive\n                </Badge>\n              </div>\n            </CardHeader>\n            <CardContent className=\"pt-0\">\n              <p className=\"text-sm text-slate-600 mb-4\">\n                Your expert commercial diving consultant for dive plans, safety protocols, supervision guidance, and operational support.\n              </p>\n              \n              <div className=\"space-y-2 mb-4\">\n                <div className=\"flex items-center space-x-2 text-xs text-slate-500\">\n                  <svg className=\"w-3 h-3\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                    <path d=\"M3 4a1 1 0 011-1h12a1 1 0 011 1v2a1 1 0 01-1 1H4a1 1 0 01-1-1V4zM3 10a1 1 0 011-1h6a1 1 0 011 1v6a1 1 0 01-1 1H4a1 1 0 01-1-1v-6zM14 9a1 1 0 00-1 1v6a1 1 0 001 1h2a1 1 0 001-1v-6a1 1 0 00-1-1h-2z\"/>\n                  </svg>\n                  <span>Dive Planning</span>\n                </div>\n                <div className=\"flex items-center space-x-2 text-xs text-slate-500\">\n                  <svg className=\"w-3 h-3\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                    <path fillRule=\"evenodd\" d=\"M2.166 4.999A11.954 11.954 0 0010 1.944 11.954 11.954 0 0017.834 5c.11.65.166 1.32.166 2.001 0 5.225-3.34 9.67-8 11.317C5.34 16.67 2 12.225 2 7c0-.682.057-1.35.166-2.001zm11.541 3.708a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\"/>\n                  </svg>\n                  <span>Safety Protocols</span>\n                </div>\n                <div className=\"flex items-center space-x-2 text-xs text-slate-500\">\n                  <svg className=\"w-3 h-3\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                    <path d=\"M13 6a3 3 0 11-6 0 3 3 0 016 0zM18 8a2 2 0 11-4 0 2 2 0 014 0zM14 15a4 4 0 00-8 0v3h8v-3z\"/>\n                  </svg>\n                  <span>Supervision Training</span>\n                </div>\n              </div>\n              \n              <Button \n                className=\"w-full bg-blue-600 hover:bg-blue-700\"\n                onClick={() => {\n                  setIsOpen(false);\n                  // Platform-exclusive access to ChatGPT consultant\n                  window.open('https://chatgpt.com/g/g-6897d42d3ba48191b48883a4839c09bf-diver-well-commercial-diver-ai-consultant', '_blank');\n                }}\n                data-testid=\"button-chat-diver-well\"\n              >\n                <ExternalLink className=\"w-4 h-4 mr-2\" />\n                Open Diver Well AI\n              </Button>\n            </CardContent>\n          </Card>\n        </div>\n        \n        <div className=\"border-t pt-4\">\n          <div className=\"bg-blue-50 p-3 rounded-lg\">\n            <div className=\"flex items-start space-x-2\">\n              <div className=\"w-5 h-5 bg-blue-100 rounded-full flex items-center justify-center mt-0.5\">\n                <svg className=\"w-3 h-3 text-blue-600\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                  <path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\"/>\n                </svg>\n              </div>\n              <div>\n                <p className=\"text-sm text-blue-800 font-medium\">Platform-Exclusive Access</p>\n                <p className=\"text-xs text-blue-700\">\n                  The Diver Well AI Consultant is exclusively available to Professional Diver platform members, providing specialized diving expertise you won't find anywhere else.\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </DialogContent>\n    </Dialog>\n  );\n}","size_bytes":8940},"client/src/components/laura-assistant.tsx":{"content":"import { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle, DialogTrigger } from \"@/components/ui/dialog\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { MessageCircle, ExternalLink } from \"lucide-react\";\n\nexport default function LauraAssistant() {\n  const [isOpen, setIsOpen] = useState(false);\n\n  return (\n    <>\n      {/* Fixed position diving helmet chat bubble */}\n      <div className=\"fixed bottom-6 right-6 z-50\">\n        <Button\n          onClick={() => setIsOpen(true)}\n          className=\"w-16 h-16 rounded-full bg-gradient-to-br from-blue-600 to-blue-700 hover:from-blue-700 hover:to-blue-800 shadow-xl hover:shadow-2xl transition-all duration-300 relative overflow-hidden group\"\n          data-testid=\"button-laura-chat-bubble\"\n          title=\"Chat with Laura - Your Platform Oracle\"\n        >\n          {/* KM37 Diving Helmet SVG */}\n          <svg \n            className=\"w-9 h-9 text-white transition-transform group-hover:scale-110\" \n            fill=\"currentColor\" \n            viewBox=\"0 0 100 100\"\n          >\n            {/* Helmet main body */}\n            <ellipse cx=\"50\" cy=\"45\" rx=\"35\" ry=\"28\" stroke=\"currentColor\" strokeWidth=\"2\" fill=\"currentColor\" opacity=\"0.9\"/>\n            \n            {/* Front glass port */}\n            <circle cx=\"50\" cy=\"40\" r=\"18\" fill=\"rgba(255,255,255,0.3)\" stroke=\"currentColor\" strokeWidth=\"1.5\"/>\n            <circle cx=\"50\" cy=\"40\" r=\"14\" fill=\"rgba(255,255,255,0.1)\" stroke=\"currentColor\" strokeWidth=\"1\"/>\n            \n            {/* Side ports */}\n            <circle cx=\"25\" cy=\"42\" r=\"6\" fill=\"rgba(255,255,255,0.2)\" stroke=\"currentColor\" strokeWidth=\"1\"/>\n            <circle cx=\"75\" cy=\"42\" r=\"6\" fill=\"rgba(255,255,255,0.2)\" stroke=\"currentColor\" strokeWidth=\"1\"/>\n            \n            {/* Air supply connections */}\n            <rect x=\"47\" y=\"65\" width=\"6\" height=\"8\" rx=\"2\" fill=\"currentColor\"/>\n            <rect x=\"42\" y=\"70\" width=\"4\" height=\"6\" rx=\"1\" fill=\"currentColor\"/>\n            <rect x=\"54\" y=\"70\" width=\"4\" height=\"6\" rx=\"1\" fill=\"currentColor\"/>\n            \n            {/* Helmet rim/collar */}\n            <ellipse cx=\"50\" cy=\"68\" rx=\"38\" ry=\"8\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\"/>\n            \n            {/* Communication equipment */}\n            <rect x=\"20\" y=\"38\" width=\"8\" height=\"4\" rx=\"2\" fill=\"currentColor\"/>\n            <rect x=\"72\" y=\"38\" width=\"8\" height=\"4\" rx=\"2\" fill=\"currentColor\"/>\n          </svg>\n          \n          {/* Pulse animation */}\n          <div className=\"absolute inset-0 rounded-full bg-blue-400 animate-ping opacity-20\"></div>\n        </Button>\n        \n        {/* Laura availability indicator */}\n        <div className=\"absolute -top-1 -right-1 w-5 h-5 bg-green-500 rounded-full border-2 border-white flex items-center justify-center\">\n          <div className=\"w-2 h-2 bg-white rounded-full animate-pulse\"></div>\n        </div>\n      </div>\n\n      <Dialog open={isOpen} onOpenChange={setIsOpen}>\n        <DialogContent className=\"sm:max-w-[500px]\" data-testid=\"dialog-laura-assistant\">\n          <DialogHeader>\n            <DialogTitle className=\"flex items-center space-x-3\">\n              <div className=\"w-12 h-12 bg-gradient-to-br from-blue-600 to-blue-700 rounded-full flex items-center justify-center\">\n                {/* KM37 Diving Helmet Icon */}\n                <svg \n                  className=\"w-7 h-7 text-white\" \n                  fill=\"currentColor\" \n                  viewBox=\"0 0 100 100\"\n                >\n                  <ellipse cx=\"50\" cy=\"45\" rx=\"35\" ry=\"28\" fill=\"currentColor\" opacity=\"0.9\"/>\n                  <circle cx=\"50\" cy=\"40\" r=\"18\" fill=\"rgba(255,255,255,0.3)\"/>\n                  <circle cx=\"50\" cy=\"40\" r=\"14\" fill=\"rgba(255,255,255,0.1)\"/>\n                  <circle cx=\"25\" cy=\"42\" r=\"6\" fill=\"rgba(255,255,255,0.2)\"/>\n                  <circle cx=\"75\" cy=\"42\" r=\"6\" fill=\"rgba(255,255,255,0.2)\"/>\n                  <rect x=\"47\" y=\"65\" width=\"6\" height=\"8\" rx=\"2\" fill=\"currentColor\"/>\n                  <ellipse cx=\"50\" cy=\"68\" rx=\"38\" ry=\"8\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\"/>\n                </svg>\n              </div>\n              <div>\n                <span className=\"text-xl\">Laura</span>\n                <div className=\"flex items-center space-x-2 mt-1\">\n                  <Badge variant=\"secondary\" className=\"bg-blue-100 text-blue-700 text-xs\">\n                    Platform Oracle\n                  </Badge>\n                  <div className=\"flex items-center space-x-1\">\n                    <div className=\"w-2 h-2 bg-green-500 rounded-full animate-pulse\"></div>\n                    <span className=\"text-xs text-green-600 font-medium\">Online</span>\n                  </div>\n                </div>\n              </div>\n            </DialogTitle>\n            <DialogDescription className=\"text-slate-600\">\n              Your dedicated Platform Oracle for guidance, support, and Professional Diver expertise\n            </DialogDescription>\n          </DialogHeader>\n          \n          <div className=\"py-4\">\n            <div className=\"bg-gradient-to-br from-blue-50 to-slate-50 p-4 rounded-lg border border-blue-100\">\n              <h4 className=\"font-semibold text-slate-900 mb-3 flex items-center\">\n                <svg className=\"w-5 h-5 text-blue-600 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z\"/>\n                </svg>\n                Laura's Expertise\n              </h4>\n              \n              <div className=\"grid grid-cols-1 gap-3 text-sm\">\n                <div className=\"flex items-start space-x-2\">\n                  <div className=\"w-1.5 h-1.5 bg-blue-500 rounded-full mt-2\"></div>\n                  <div>\n                    <span className=\"font-medium text-slate-800\">Platform Guidance:</span>\n                    <span className=\"text-slate-600 ml-1\">Account management, technical support, feature navigation</span>\n                  </div>\n                </div>\n                \n                <div className=\"flex items-start space-x-2\">\n                  <div className=\"w-1.5 h-1.5 bg-purple-500 rounded-full mt-2\"></div>\n                  <div>\n                    <span className=\"font-medium text-slate-800\">Professional Diver Expertise:</span>\n                    <span className=\"text-slate-600 ml-1\">Platform optimization, career advancement, partnership opportunities</span>\n                  </div>\n                </div>\n                \n                <div className=\"flex items-start space-x-2\">\n                  <div className=\"w-1.5 h-1.5 bg-green-500 rounded-full mt-2\"></div>\n                  <div>\n                    <span className=\"font-medium text-slate-800\">Affiliate Program:</span>\n                    <span className=\"text-slate-600 ml-1\">50% commission opportunities, partnership benefits</span>\n                  </div>\n                </div>\n                \n                <div className=\"flex items-start space-x-2\">\n                  <div className=\"w-1.5 h-1.5 bg-orange-500 rounded-full mt-2\"></div>\n                  <div>\n                    <span className=\"font-medium text-slate-800\">Industry Connections:</span>\n                    <span className=\"text-slate-600 ml-1\">Diving companies, academies, and Lead Recon AI system</span>\n                  </div>\n                </div>\n              </div>\n              \n              <div className=\"mt-4 p-3 bg-amber-50 border border-amber-200 rounded-lg\">\n                <p className=\"text-xs text-amber-800 flex items-start\">\n                  <svg className=\"w-4 h-4 text-amber-600 mr-1 mt-0.5 flex-shrink-0\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n                  </svg>\n                  <span><strong>For diving operations questions:</strong> I'll connect you with our exclusive \"Diver Well\" AI consultant available within the platform.</span>\n                </p>\n              </div>\n            </div>\n            \n            <div className=\"mt-6 space-y-3\">\n              <Button \n                className=\"w-full bg-gradient-to-r from-blue-600 to-blue-700 hover:from-blue-700 hover:to-blue-800 text-white shadow-lg hover:shadow-xl transition-all\"\n                onClick={() => {\n                  setIsOpen(false);\n                  window.open('/chat/laura', '_blank');\n                }}\n                data-testid=\"button-chat-laura-oracle\"\n              >\n                <MessageCircle className=\"w-4 h-4 mr-2\" />\n                Chat with Laura - Platform Oracle\n              </Button>\n              \n              <div className=\"text-center\">\n                <p className=\"text-xs text-slate-500 mb-2\">Need diving operational guidance?</p>\n                <Button \n                  variant=\"outline\"\n                  size=\"sm\"\n                  className=\"border-blue-200 text-blue-600 hover:bg-blue-50\"\n                  onClick={() => {\n                    setIsOpen(false);\n                    window.open('https://chatgpt.com/g/g-6897d42d3ba48191b48883a4839c09bf-diver-well-commercial-diver-ai-consultant', '_blank');\n                  }}\n                  data-testid=\"button-diver-well-consultant\"\n                >\n                  <ExternalLink className=\"w-3 h-3 mr-1\" />\n                  Access Diver Well AI Consultant\n                </Button>\n              </div>\n            </div>\n          </div>\n        </DialogContent>\n      </Dialog>\n    </>\n  );\n}","size_bytes":9935},"client/src/pages/chat-laura.tsx":{"content":"import { useState, useRef, useEffect } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Avatar, AvatarFallback } from \"@/components/ui/avatar\";\nimport { Send, ArrowLeft, Headphones, Settings, User, HelpCircle } from \"lucide-react\";\nimport { Link } from \"wouter\";\nimport diverWellLogo from \"@assets/DIVER_WELL_TRAINING-500x500-rbg-preview_1756088331820.png\";\n\ninterface Message {\n  id: string;\n  text: string;\n  sender: 'user' | 'laura';\n  timestamp: Date;\n}\n\nexport default function ChatLaura() {\n  const [messages, setMessages] = useState<Message[]>([\n    {\n      id: '1',\n      text: \"Hello! I'm Laura, your Platform Oracle for Professional Diver. I'm here to guide you through our comprehensive training platform, help with account and technical support, share opportunities through our 50% commission affiliate program, and connect you with diving companies worldwide. For diving operations questions, I'll direct you to our exclusive 'Diver Well' AI consultant. For industry intelligence, I can connect you with Lead Recon's AI system at leadrecon.net. How can I help you excel in your diving career today?\",\n      sender: 'laura',\n      timestamp: new Date()\n    }\n  ]);\n  const [inputText, setInputText] = useState('');\n  const [isTyping, setIsTyping] = useState(false);\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const handleSendMessage = async () => {\n    if (!inputText.trim()) return;\n\n    const userMessage: Message = {\n      id: Date.now().toString(),\n      text: inputText,\n      sender: 'user',\n      timestamp: new Date()\n    };\n\n    setMessages(prev => [...prev, userMessage]);\n    setInputText('');\n    setIsTyping(true);\n\n    // Simulate Laura's response\n    setTimeout(() => {\n      const lauraResponse: Message = {\n        id: (Date.now() + 1).toString(),\n        text: getLauraResponse(inputText),\n        sender: 'laura',\n        timestamp: new Date()\n      };\n      setMessages(prev => [...prev, lauraResponse]);\n      setIsTyping(false);\n    }, 1500);\n  };\n\n  const getLauraResponse = (userInput: string): string => {\n    const input = userInput.toLowerCase();\n    \n    // Diving operations questions - redirect to Diver Well AI\n    if (input.includes('dive plan') || input.includes('safety protocol') || input.includes('decompression') || \n        input.includes('dive operation') || input.includes('underwater') || input.includes('dive supervisor') ||\n        input.includes('ndt') || input.includes('commercial diving') && (input.includes('technique') || input.includes('procedure'))) {\n      return \"For diving operations, safety protocols, and technical diving questions, I'll connect you with our exclusive 'Diver Well' AI consultant - your expert commercial diving specialist available within the platform. They're perfectly equipped to handle dive planning, safety procedures, supervision guidance, and all operational diving queries. Would you like me to direct you there now?\";\n    }\n    \n    // Affiliate program and partnerships\n    if (input.includes('affiliate') || input.includes('partner') || input.includes('commission') || input.includes('referral')) {\n      return \"Excellent! Our affiliate program offers 50% commission on all referrals - it's one of the most generous in the industry! As a Professional Diver member, you can earn substantial income by sharing this amazing platform. You'll get your unique referral link, commission tracking, and monthly payouts. The program is perfect for diving instructors, companies, and professionals. Would you like me to help you get started with the affiliate program?\";\n    }\n    \n    // Lead generation and industry connections\n    if (input.includes('job') || input.includes('company') || input.includes('academy') || input.includes('diving school') || \n        input.includes('career') || input.includes('employment') || input.includes('hiring')) {\n      return \"I can connect you with diving companies and academies worldwide! For comprehensive lead generation and industry reconnaissance, I highly recommend Lead Recon's AI-powered system at https://leadrecon.net/ - they specialize in finding diving opportunities, companies, and connections globally. They're the industry leaders in diving sector intelligence. Would you also like me to share some specific diving companies I know of in your region?\";\n    }\n    \n    // Platform sales and marketing\n    if (input.includes('features') || input.includes('benefit') || input.includes('why choose') || input.includes('advantage')) {\n      return \"Professional Diver is the most comprehensive commercial diving training platform available! You get AI-powered learning paths, voice-to-text exams, 500+ professional questions, all diving levels from basic to advanced supervision, real-time progress tracking, and our exclusive Diver Well AI consultant. Plus, our partnership program lets you earn while you learn! The platform pays for itself quickly through career advancement and affiliate earnings. What specific aspect would you like to explore further?\";\n    }\n    \n    // Login and account issues\n    if (input.includes('password') || input.includes('login') || input.includes('access')) {\n      return \"I can help you with account access issues! For password resets, use the 'Forgot Password' link on the sign-in page. If you're still having trouble, I can guide you through the process step by step. Your account gives you access to all premium features, and don't forget - you can also earn through our affiliate program while using the platform!\";\n    }\n    \n    // Billing and subscription\n    if (input.includes('billing') || input.includes('payment') || input.includes('subscription') || input.includes('price')) {\n      return \"Our Professional Diver platform offers exceptional value with flexible pricing options. Your membership includes everything - all tracks, AI features, operational tools, and affiliate earning potential. Many members actually profit from the platform through our generous 50% commission affiliate program! Would you like me to explain the different subscription options or help with a specific billing question?\";\n    }\n    \n    // Profile and technical support\n    if (input.includes('profile') || input.includes('picture') || input.includes('upload') || input.includes('technical') || input.includes('error')) {\n      return \"I'm here to help with technical issues and profile management! For profile updates, visit Profile Settings. For technical problems, please describe what happened - which page, what action, and any error messages. I'll get you sorted quickly so you can get back to advancing your diving career and potentially earning through our affiliate program!\";\n    }\n    \n    // General platform guidance\n    if (input.includes('track') || input.includes('lesson') || input.includes('course') || input.includes('learning')) {\n      return \"Perfect! Our learning tracks are designed by industry experts and powered by AI for personalized progression. You have access to all professional diving levels - from basic commercial to advanced supervision and NDT. The AI Learning Path analyzes your progress and creates custom recommendations. Plus, as you advance your career with our training, consider our affiliate program to share this amazing platform with others!\";\n    }\n    \n    // Admin consultation booking\n    if (input.includes('admin') || input.includes('consultation') || input.includes('book') || input.includes('schedule') || \n        input.includes('speak to') || input.includes('meeting') || input.includes('call')) {\n      return \"I can absolutely help you schedule a consultation with our admin team! For direct admin support, complex account issues, or business consultations, I can arrange a personal meeting. Please provide your preferred date/time and the nature of your inquiry, and I'll coordinate with our admin team to schedule your consultation. You can also reach out directly to support@diverwell.app for immediate admin assistance.\";\n    }\n\n    // Default response with sales elements and admin consultation offer\n    return \"Hello! I'm Laura, your Platform Oracle for Professional Diver. I'm here to guide you through every aspect of our comprehensive training platform, help with any technical or account issues, and share opportunities like our lucrative 50% commission affiliate program. For diving operations questions, I'll connect you with our exclusive Diver Well AI consultant. For industry connections worldwide, I can direct you to Lead Recon's AI system at leadrecon.net. If you need to speak with an admin directly, I can also schedule consultations! What can I help you achieve today?\";\n  };\n\n  const handleKeyPress = (e: React.KeyboardEvent) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-purple-50 via-white to-slate-50\">\n      {/* Header */}\n      <nav className=\"bg-white/80 backdrop-blur-md border-b border-slate-200 sticky top-0 z-50\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex justify-between items-center h-16\">\n            <div className=\"flex items-center space-x-3\">\n              <img \n                src={diverWellLogo} \n                alt=\"Professional Diver - Diver Well Training\" \n                className=\"w-10 h-10 rounded-lg\"\n              />\n              <div>\n                <div className=\"text-lg font-bold text-slate-900\">Professional Diver</div>\n                <div className=\"text-xs text-slate-500\">Laura - Platform Oracle</div>\n              </div>\n            </div>\n            <div className=\"flex items-center space-x-4\">\n              <Link href=\"/dashboard\">\n                <Button variant=\"outline\" className=\"flex items-center space-x-2\">\n                  <ArrowLeft className=\"w-4 h-4\" />\n                  <span>Back to Dashboard</span>\n                </Button>\n              </Link>\n            </div>\n          </div>\n        </div>\n      </nav>\n\n      <main className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        <div className=\"grid grid-cols-1 lg:grid-cols-4 gap-6\">\n          {/* Laura Info Sidebar */}\n          <div className=\"lg:col-span-1\">\n            <Card className=\"border-purple-200 bg-gradient-to-b from-purple-50 to-white\">\n              <CardHeader className=\"text-center\">\n                <div className=\"w-16 h-16 bg-purple-100 rounded-full flex items-center justify-center mx-auto mb-3\">\n                  <Headphones className=\"w-8 h-8 text-purple-600\" />\n                </div>\n                <CardTitle className=\"text-xl\">Laura</CardTitle>\n                <Badge variant=\"secondary\" className=\"bg-blue-100 text-blue-700\">\n                  Platform Oracle\n                </Badge>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-4\">\n                  <div>\n                    <h4 className=\"font-semibold text-sm text-slate-900 mb-2\">Your Platform Oracle for:</h4>\n                    <div className=\"space-y-2 text-sm\">\n                      <div className=\"flex items-center space-x-2 text-slate-600\">\n                        <User className=\"w-3 h-3\" />\n                        <span>Platform Guidance & Support</span>\n                      </div>\n                      <div className=\"flex items-center space-x-2 text-slate-600\">\n                        <svg className=\"w-3 h-3\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                          <path d=\"M4 4a2 2 0 00-2 2v1h16V6a2 2 0 00-2-2H4zM18 9H2v5a2 2 0 002 2h12a2 2 0 002-2V9zM4 13a1 1 0 011-1h1a1 1 0 110 2H5a1 1 0 01-1-1zm5-1a1 1 0 100 2h1a1 1 0 100-2H9z\"/>\n                        </svg>\n                        <span>50% Commission Affiliate Program</span>\n                      </div>\n                      <div className=\"flex items-center space-x-2 text-slate-600\">\n                        <svg className=\"w-3 h-3\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                          <path fillRule=\"evenodd\" d=\"M12.395 2.553a1 1 0 00-1.45-.385c-.345.23-.614.558-.822.88-.214.33-.403.713-.57 1.116-.334.804-.614 1.768-.84 2.734a31.365 31.365 0 00-.613 3.58 2.64 2.64 0 01-.945-1.067c-.328-.68-.398-1.534-.398-2.654A1 1 0 005.05 6.05 6.981 6.981 0 003 11a7 7 0 1011.95-4.95c-.592-.591-.98-.985-1.348-1.467-.363-.476-.724-1.063-1.207-2.03zM12.12 15.12A3 3 0 017 13s.879.5 2.5.5c0-1 .5-4 1.25-4.5.5 1 .786 1.293 1.371 1.879A2.99 2.99 0 0113 13a2.99 2.99 0 01-.879 2.121z\" clipRule=\"evenodd\"/>\n                        </svg>\n                        <span>Industry Connections Worldwide</span>\n                      </div>\n                    </div>\n                  </div>\n                  \n                  <div className=\"bg-blue-50 p-3 rounded-lg\">\n                    <p className=\"text-xs text-blue-800\">\n                      🚀 <strong>Oracle Tip:</strong> Ask me about our 50% affiliate program, platform optimization, industry connections, or technical support. For diving operations, I'll connect you with Diver Well AI!\n                    </p>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n\n          {/* Chat Interface */}\n          <div className=\"lg:col-span-3\">\n            <Card className=\"h-[600px] flex flex-col\">\n              <CardHeader className=\"border-b\">\n                <CardTitle className=\"flex items-center space-x-2\">\n                  <div className=\"w-8 h-8 bg-purple-100 rounded-full flex items-center justify-center\">\n                    <Headphones className=\"w-4 h-4 text-purple-600\" />\n                  </div>\n                  <span>Chat with Laura</span>\n                  <div className=\"w-2 h-2 bg-green-500 rounded-full animate-pulse\"></div>\n                </CardTitle>\n              </CardHeader>\n              \n              <CardContent className=\"flex-1 flex flex-col p-0\">\n                {/* Messages */}\n                <div className=\"flex-1 overflow-y-auto p-4 space-y-4\">\n                  {messages.map((message) => (\n                    <div\n                      key={message.id}\n                      className={`flex ${message.sender === 'user' ? 'justify-end' : 'justify-start'}`}\n                    >\n                      <div className={`flex space-x-2 max-w-[80%] ${message.sender === 'user' ? 'flex-row-reverse space-x-reverse' : ''}`}>\n                        <Avatar className=\"w-8 h-8\">\n                          <AvatarFallback className={message.sender === 'user' ? 'bg-blue-100 text-blue-600' : 'bg-purple-100 text-purple-600'}>\n                            {message.sender === 'user' ? 'U' : 'L'}\n                          </AvatarFallback>\n                        </Avatar>\n                        <div className={`rounded-lg p-3 ${\n                          message.sender === 'user' \n                            ? 'bg-blue-600 text-white' \n                            : 'bg-slate-100 text-slate-900'\n                        }`}>\n                          <p className=\"text-sm\">{message.text}</p>\n                          <p className=\"text-xs mt-1 opacity-70\">\n                            {message.timestamp.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                  \n                  {isTyping && (\n                    <div className=\"flex justify-start\">\n                      <div className=\"flex space-x-2 max-w-[80%]\">\n                        <Avatar className=\"w-8 h-8\">\n                          <AvatarFallback className=\"bg-purple-100 text-purple-600\">L</AvatarFallback>\n                        </Avatar>\n                        <div className=\"bg-slate-100 rounded-lg p-3\">\n                          <div className=\"flex space-x-1\">\n                            <div className=\"w-2 h-2 bg-slate-400 rounded-full animate-bounce\"></div>\n                            <div className=\"w-2 h-2 bg-slate-400 rounded-full animate-bounce\" style={{ animationDelay: '0.1s' }}></div>\n                            <div className=\"w-2 h-2 bg-slate-400 rounded-full animate-bounce\" style={{ animationDelay: '0.2s' }}></div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                  <div ref={messagesEndRef} />\n                </div>\n                \n                {/* Input */}\n                <div className=\"border-t p-4\">\n                  <div className=\"flex space-x-2\">\n                    <Input\n                      value={inputText}\n                      onChange={(e) => setInputText(e.target.value)}\n                      onKeyPress={handleKeyPress}\n                      placeholder=\"Type your message...\"\n                      className=\"flex-1\"\n                      data-testid=\"input-chat-message\"\n                    />\n                    <Button \n                      onClick={handleSendMessage}\n                      disabled={!inputText.trim()}\n                      className=\"bg-purple-600 hover:bg-purple-700\"\n                      data-testid=\"button-send-message\"\n                    >\n                      <Send className=\"w-4 h-4\" />\n                    </Button>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n}","size_bytes":17867},"client/src/pages/learning-path-suggestions.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { useQuery, useMutation } from \"@tanstack/react-query\";\nimport { Link } from \"wouter\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Progress } from \"@/components/ui/progress\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { \n  Brain, \n  TrendingUp, \n  Clock, \n  Target, \n  Star, \n  CheckCircle, \n  ArrowRight,\n  Lightbulb,\n  Award,\n  MapPin,\n  Zap,\n  BookOpen,\n  Users,\n  DollarSign\n} from \"lucide-react\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport diverWellLogo from \"@assets/DIVER_WELL_TRAINING-500x500-rbg-preview_1756088331820.png\";\n\ninterface LearningPathSuggestion {\n  id: string;\n  title: string;\n  description: string;\n  estimatedDuration: string;\n  difficulty: 'beginner' | 'intermediate' | 'advanced';\n  tracks: {\n    trackId: string;\n    trackTitle: string;\n    priority: number;\n    reason: string;\n    estimatedWeeks: number;\n  }[];\n  personalizedMessage: string;\n  nextSteps: string[];\n  prerequisites: string[];\n  careerBenefits: string[];\n}\n\ninterface LearningAnalysis {\n  preferredStyle: 'visual' | 'hands-on' | 'theoretical' | 'mixed';\n  confidence: number;\n  recommendations: string[];\n}\n\ninterface CareerAdvice {\n  careerPath: string;\n  nextCertifications: string[];\n  marketDemand: string;\n  salaryProjection: string;\n  timeToGoal: string;\n}\n\nexport default function LearningPathSuggestions() {\n  const { toast } = useToast();\n  const [activeTab, setActiveTab] = useState(\"suggestions\");\n\n  // Get current user data\n  const { data: currentUser } = useQuery({\n    queryKey: [\"/api/users/current\"],\n    queryFn: async () => {\n      const email = localStorage.getItem('userEmail') || 'lalabalavu.jon@gmail.com';\n      const response = await fetch(`/api/users/current?email=${email}`);\n      if (!response.ok) throw new Error('Failed to fetch user');\n      return response.json();\n    }\n  });\n\n  // Fetch learning path suggestions\n  const { data: learningPath, isLoading: loadingPath } = useQuery({\n    queryKey: [\"/api/learning-path/suggestions\", currentUser?.id],\n    queryFn: async () => {\n      const response = await fetch('/api/learning-path/suggestions', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          userId: currentUser?.id || 'demo-user',\n          skillLevel: 'intermediate',\n          goals: ['certification', 'career advancement'],\n          timeAvailable: 10,\n          preferredLearningStyle: 'mixed'\n        })\n      });\n      if (!response.ok) throw new Error('Failed to fetch learning path');\n      return response.json();\n    },\n    enabled: !!currentUser\n  });\n\n  // Fetch learning style analysis\n  const { data: learningAnalysis } = useQuery({\n    queryKey: [\"/api/learning-path/analysis\", currentUser?.id],\n    queryFn: async () => {\n      const response = await fetch('/api/learning-path/analysis', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          completedLessons: [],\n          quizScores: [85, 92, 78, 95]\n        })\n      });\n      if (!response.ok) throw new Error('Failed to analyze learning style');\n      return response.json();\n    },\n    enabled: !!currentUser\n  });\n\n  // Fetch career advice\n  const { data: careerAdvice } = useQuery({\n    queryKey: [\"/api/learning-path/career-advice\", currentUser?.id],\n    queryFn: async () => {\n      const response = await fetch('/api/learning-path/career-advice', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          userId: currentUser?.id || 'demo-user',\n          skillLevel: 'intermediate',\n          goals: ['certification', 'career advancement'],\n          certificationGoals: ['NDT Inspector', 'Dive Supervisor']\n        })\n      });\n      if (!response.ok) throw new Error('Failed to fetch career advice');\n      return response.json();\n    },\n    enabled: !!currentUser\n  });\n\n  const getDifficultyColor = (difficulty: string) => {\n    switch (difficulty) {\n      case 'beginner': return 'bg-green-100 text-green-800';\n      case 'intermediate': return 'bg-yellow-100 text-yellow-800';\n      case 'advanced': return 'bg-red-100 text-red-800';\n      default: return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  const getLearningStyleIcon = (style: string) => {\n    switch (style) {\n      case 'visual': return <Star className=\"w-4 h-4\" />;\n      case 'hands-on': return <Zap className=\"w-4 h-4\" />;\n      case 'theoretical': return <BookOpen className=\"w-4 h-4\" />;\n      case 'mixed': return <Users className=\"w-4 h-4\" />;\n      default: return <Brain className=\"w-4 h-4\" />;\n    }\n  };\n\n  if (!currentUser) {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-white to-slate-50 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin w-8 h-8 border-2 border-blue-600 border-t-transparent rounded-full mx-auto mb-4\"></div>\n          <p className=\"text-slate-600\">Loading your learning data...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-white to-slate-50\">\n      {/* Header */}\n      <nav className=\"bg-white/80 backdrop-blur-md border-b border-slate-200 sticky top-0 z-50\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex justify-between items-center h-16\">\n            <div className=\"flex items-center space-x-3\">\n              <img \n                src={diverWellLogo} \n                alt=\"Professional Diver - Diver Well Training\" \n                className=\"w-10 h-10 rounded-lg\"\n              />\n              <div>\n                <div className=\"text-lg font-bold text-slate-900\">Professional Diver</div>\n                <div className=\"text-xs text-slate-500\">AI Learning Path Suggestions</div>\n              </div>\n            </div>\n            <div className=\"flex items-center space-x-4\">\n              <Link href=\"/dashboard\">\n                <Button variant=\"outline\">\n                  Back to Dashboard\n                </Button>\n              </Link>\n            </div>\n          </div>\n        </div>\n      </nav>\n\n      <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        <div className=\"mb-8\">\n          <div className=\"flex items-center space-x-2 mb-2\">\n            <Brain className=\"w-8 h-8 text-blue-600\" />\n            <h1 className=\"text-3xl font-bold text-slate-900\">AI Learning Path Suggestions</h1>\n          </div>\n          <p className=\"text-lg text-slate-600\">\n            Personalized recommendations powered by AI to accelerate your diving career\n          </p>\n        </div>\n\n        <Tabs value={activeTab} onValueChange={setActiveTab} className=\"space-y-6\">\n          <TabsList className=\"grid w-full grid-cols-3\">\n            <TabsTrigger value=\"suggestions\">Learning Path</TabsTrigger>\n            <TabsTrigger value=\"analysis\">Learning Style</TabsTrigger>\n            <TabsTrigger value=\"career\">Career Guidance</TabsTrigger>\n          </TabsList>\n\n          <TabsContent value=\"suggestions\" className=\"space-y-6\">\n            {loadingPath ? (\n              <Card>\n                <CardContent className=\"p-8 text-center\">\n                  <div className=\"animate-spin w-8 h-8 border-2 border-blue-600 border-t-transparent rounded-full mx-auto mb-4\"></div>\n                  <p className=\"text-slate-600\">AI is analyzing your profile and generating personalized recommendations...</p>\n                </CardContent>\n              </Card>\n            ) : learningPath ? (\n              <div className=\"space-y-6\">\n                {/* Main Learning Path Card */}\n                <Card className=\"border-blue-200 bg-gradient-to-r from-blue-50 to-indigo-50\">\n                  <CardHeader>\n                    <div className=\"flex items-start justify-between\">\n                      <div className=\"flex-1\">\n                        <CardTitle className=\"flex items-center space-x-2 text-xl\">\n                          <Target className=\"w-6 h-6 text-blue-600\" />\n                          <span>{learningPath.title}</span>\n                        </CardTitle>\n                        <CardDescription className=\"mt-2 text-slate-700\">\n                          {learningPath.description}\n                        </CardDescription>\n                      </div>\n                      <Badge className={getDifficultyColor(learningPath.difficulty)}>\n                        {learningPath.difficulty}\n                      </Badge>\n                    </div>\n                  </CardHeader>\n                  <CardContent>\n                    <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-6\">\n                      <div className=\"flex items-center space-x-2\">\n                        <Clock className=\"w-5 h-5 text-slate-500\" />\n                        <span className=\"text-sm text-slate-600\">Duration: {learningPath.estimatedDuration}</span>\n                      </div>\n                      <div className=\"flex items-center space-x-2\">\n                        <BookOpen className=\"w-5 h-5 text-slate-500\" />\n                        <span className=\"text-sm text-slate-600\">{learningPath.tracks.length} Training Tracks</span>\n                      </div>\n                      <div className=\"flex items-center space-x-2\">\n                        <TrendingUp className=\"w-5 h-5 text-slate-500\" />\n                        <span className=\"text-sm text-slate-600\">Career Focused</span>\n                      </div>\n                    </div>\n\n                    <div className=\"bg-blue-100 p-4 rounded-lg mb-6\">\n                      <h4 className=\"font-medium text-blue-900 mb-2\">Personalized Message</h4>\n                      <p className=\"text-blue-800\">{learningPath.personalizedMessage}</p>\n                    </div>\n\n                    {/* Recommended Tracks */}\n                    <div className=\"space-y-4\">\n                      <h4 className=\"font-semibold text-slate-900\">Recommended Training Tracks</h4>\n                      {learningPath.tracks.map((track: any, index: number) => (\n                        <Card key={track.trackId} className=\"border-slate-200\">\n                          <CardContent className=\"p-4\">\n                            <div className=\"flex items-start justify-between mb-3\">\n                              <div className=\"flex-1\">\n                                <div className=\"flex items-center space-x-2 mb-1\">\n                                  <Badge variant=\"outline\" className=\"text-xs\">\n                                    Priority {track.priority}\n                                  </Badge>\n                                  <span className=\"text-sm text-slate-500\">\n                                    ~{track.estimatedWeeks} weeks\n                                  </span>\n                                </div>\n                                <h5 className=\"font-medium text-slate-900\">{track.trackTitle}</h5>\n                                <p className=\"text-sm text-slate-600 mt-1\">{track.reason}</p>\n                              </div>\n                              <Link href={`/tracks/${track.slug || track.trackId}`}>\n                                <Button \n                                  variant=\"outline\" \n                                  size=\"sm\"\n                                  data-testid={`button-start-track-${track.trackId}`}\n                                >\n                                  <ArrowRight className=\"w-4 h-4 mr-1\" />\n                                  Start Training\n                                </Button>\n                              </Link>\n                            </div>\n                          </CardContent>\n                        </Card>\n                      ))}\n                    </div>\n                  </CardContent>\n                </Card>\n\n                {/* Additional Information Cards */}\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                  <Card>\n                    <CardHeader>\n                      <CardTitle className=\"flex items-center space-x-2\">\n                        <CheckCircle className=\"w-5 h-5 text-green-600\" />\n                        <span>Next Steps</span>\n                      </CardTitle>\n                    </CardHeader>\n                    <CardContent>\n                      <ul className=\"space-y-2\">\n                        {learningPath.nextSteps.map((step: string, index: number) => (\n                          <li key={index} className=\"flex items-start space-x-2\">\n                            <span className=\"text-slate-400 mt-1\">•</span>\n                            <span className=\"text-sm text-slate-700\">{step}</span>\n                          </li>\n                        ))}\n                      </ul>\n                    </CardContent>\n                  </Card>\n\n                  <Card>\n                    <CardHeader>\n                      <CardTitle className=\"flex items-center space-x-2\">\n                        <Award className=\"w-5 h-5 text-yellow-600\" />\n                        <span>Career Benefits</span>\n                      </CardTitle>\n                    </CardHeader>\n                    <CardContent>\n                      <ul className=\"space-y-2\">\n                        {learningPath.careerBenefits.map((benefit: string, index: number) => (\n                          <li key={index} className=\"flex items-start space-x-2\">\n                            <span className=\"text-slate-400 mt-1\">•</span>\n                            <span className=\"text-sm text-slate-700\">{benefit}</span>\n                          </li>\n                        ))}\n                      </ul>\n                    </CardContent>\n                  </Card>\n                </div>\n\n                {learningPath.prerequisites.length > 0 && (\n                  <Card className=\"border-orange-200 bg-orange-50\">\n                    <CardHeader>\n                      <CardTitle className=\"flex items-center space-x-2 text-orange-800\">\n                        <Lightbulb className=\"w-5 h-5\" />\n                        <span>Prerequisites</span>\n                      </CardTitle>\n                    </CardHeader>\n                    <CardContent>\n                      <ul className=\"space-y-2\">\n                        {learningPath.prerequisites.map((prereq: string, index: number) => (\n                          <li key={index} className=\"flex items-start space-x-2\">\n                            <span className=\"text-orange-500 mt-1\">•</span>\n                            <span className=\"text-sm text-orange-800\">{prereq}</span>\n                          </li>\n                        ))}\n                      </ul>\n                    </CardContent>\n                  </Card>\n                )}\n              </div>\n            ) : (\n              <Card>\n                <CardContent className=\"p-8 text-center\">\n                  <p className=\"text-slate-600\">Unable to generate learning path suggestions at this time.</p>\n                  <Button className=\"mt-4\" onClick={() => window.location.reload()}>\n                    Try Again\n                  </Button>\n                </CardContent>\n              </Card>\n            )}\n          </TabsContent>\n\n          <TabsContent value=\"analysis\" className=\"space-y-6\">\n            {learningAnalysis ? (\n              <div className=\"space-y-6\">\n                <Card>\n                  <CardHeader>\n                    <CardTitle className=\"flex items-center space-x-2\">\n                      {getLearningStyleIcon(learningAnalysis.preferredStyle)}\n                      <span>Your Learning Style Analysis</span>\n                    </CardTitle>\n                    <CardDescription>\n                      AI-powered analysis of your learning preferences and patterns\n                    </CardDescription>\n                  </CardHeader>\n                  <CardContent>\n                    <div className=\"space-y-6\">\n                      <div>\n                        <div className=\"flex items-center justify-between mb-2\">\n                          <span className=\"text-sm font-medium text-slate-700\">\n                            Preferred Style: {learningAnalysis.preferredStyle}\n                          </span>\n                          <Badge className={getDifficultyColor('intermediate')}>\n                            {Math.round(learningAnalysis.confidence * 100)}% confidence\n                          </Badge>\n                        </div>\n                        <Progress value={learningAnalysis.confidence * 100} className=\"h-2\" />\n                      </div>\n\n                      <div>\n                        <h4 className=\"font-semibold text-slate-900 mb-3\">Personalized Recommendations</h4>\n                        <div className=\"space-y-3\">\n                          {learningAnalysis.recommendations.map((rec: string, index: number) => (\n                            <div key={index} className=\"flex items-start space-x-3 p-3 bg-slate-50 rounded-lg\">\n                              <Lightbulb className=\"w-5 h-5 text-yellow-500 mt-0.5\" />\n                              <span className=\"text-sm text-slate-700\">{rec}</span>\n                            </div>\n                          ))}\n                        </div>\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n              </div>\n            ) : (\n              <Card>\n                <CardContent className=\"p-8 text-center\">\n                  <div className=\"animate-spin w-8 h-8 border-2 border-blue-600 border-t-transparent rounded-full mx-auto mb-4\"></div>\n                  <p className=\"text-slate-600\">Analyzing your learning patterns...</p>\n                </CardContent>\n              </Card>\n            )}\n          </TabsContent>\n\n          <TabsContent value=\"career\" className=\"space-y-6\">\n            {careerAdvice ? (\n              <div className=\"space-y-6\">\n                <Card className=\"border-green-200 bg-gradient-to-r from-green-50 to-emerald-50\">\n                  <CardHeader>\n                    <CardTitle className=\"flex items-center space-x-2 text-green-800\">\n                      <TrendingUp className=\"w-6 h-6\" />\n                      <span>Career Path Guidance</span>\n                    </CardTitle>\n                    <CardDescription className=\"text-green-700\">\n                      AI-powered career advice based on industry trends and your goals\n                    </CardDescription>\n                  </CardHeader>\n                  <CardContent>\n                    <div className=\"space-y-6\">\n                      <div className=\"bg-green-100 p-4 rounded-lg\">\n                        <h4 className=\"font-medium text-green-900 mb-2\">Recommended Career Path</h4>\n                        <p className=\"text-green-800\">{careerAdvice.careerPath}</p>\n                      </div>\n\n                      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                        <div>\n                          <h4 className=\"font-semibold text-slate-900 mb-3 flex items-center space-x-2\">\n                            <Award className=\"w-5 h-5 text-yellow-500\" />\n                            <span>Next Certifications</span>\n                          </h4>\n                          <ul className=\"space-y-2\">\n                            {careerAdvice.nextCertifications.map((cert: string, index: number) => (\n                              <li key={index} className=\"flex items-center space-x-2\">\n                                <CheckCircle className=\"w-4 h-4 text-green-500\" />\n                                <span className=\"text-sm text-slate-700\">{cert}</span>\n                              </li>\n                            ))}\n                          </ul>\n                        </div>\n\n                        <div>\n                          <h4 className=\"font-semibold text-slate-900 mb-3 flex items-center space-x-2\">\n                            <DollarSign className=\"w-5 h-5 text-green-500\" />\n                            <span>Salary Projection</span>\n                          </h4>\n                          <p className=\"text-lg font-medium text-green-600 mb-2\">{careerAdvice.salaryProjection}</p>\n                          <p className=\"text-sm text-slate-600\">With recommended certifications</p>\n                        </div>\n                      </div>\n\n                      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                        <div>\n                          <h4 className=\"font-semibold text-slate-900 mb-3 flex items-center space-x-2\">\n                            <TrendingUp className=\"w-5 h-5 text-blue-500\" />\n                            <span>Market Demand</span>\n                          </h4>\n                          <p className=\"text-sm text-slate-700\">{careerAdvice.marketDemand}</p>\n                        </div>\n\n                        <div>\n                          <h4 className=\"font-semibold text-slate-900 mb-3 flex items-center space-x-2\">\n                            <Clock className=\"w-5 h-5 text-purple-500\" />\n                            <span>Timeline to Goal</span>\n                          </h4>\n                          <p className=\"text-lg font-medium text-purple-600\">{careerAdvice.timeToGoal}</p>\n                        </div>\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n              </div>\n            ) : (\n              <Card>\n                <CardContent className=\"p-8 text-center\">\n                  <div className=\"animate-spin w-8 h-8 border-2 border-blue-600 border-t-transparent rounded-full mx-auto mb-4\"></div>\n                  <p className=\"text-slate-600\">Generating career guidance...</p>\n                </CardContent>\n              </Card>\n            )}\n          </TabsContent>\n        </Tabs>\n      </main>\n    </div>\n  );\n}","size_bytes":22244},"client/src/pages/operations.tsx":{"content":"import { useState } from \"react\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle, DialogTrigger } from \"@/components/ui/dialog\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { \n  Crown, \n  Lock, \n  CheckCircle, \n  AlertTriangle, \n  Wrench, \n  Shield, \n  Search,\n  FileText,\n  Users,\n  TrendingUp,\n  Calendar,\n  MapPin,\n  Timer,\n  Settings\n} from \"lucide-react\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport diverWellLogo from \"@assets/DIVER_WELL_TRAINING-500x500-rbg-preview_1756088331820.png\";\nimport Navigation from \"@/components/navigation\";\n\n// Mock operational data - in real app this would come from backend\nconst operationalData = {\n  diveOperations: [\n    {\n      id: \"DO-001\",\n      title: \"Platform Installation - North Sea\",\n      date: \"2025-08-25\",\n      depth: \"45m\",\n      supervisor: \"John Smith\",\n      divers: 4,\n      status: \"In Progress\",\n      type: \"Commercial\"\n    },\n    {\n      id: \"DO-002\", \n      title: \"Hull Inspection - Port Terminal\",\n      date: \"2025-08-26\",\n      depth: \"12m\",\n      supervisor: \"Sarah Johnson\",\n      divers: 2,\n      status: \"Scheduled\",\n      type: \"Inspection\"\n    }\n  ],\n  inspectionReports: [\n    {\n      id: \"NDT-001\",\n      structure: \"Pipeline Section A-12\",\n      inspector: \"Mike Wilson\",\n      date: \"2025-08-24\",\n      findings: \"Minor corrosion detected\",\n      severity: \"Low\",\n      status: \"Completed\"\n    },\n    {\n      id: \"NDT-002\",\n      structure: \"Weld Joint B-08\",\n      inspector: \"Lisa Chen\",\n      date: \"2025-08-25\",\n      findings: \"Crack initiation observed\",\n      severity: \"High\",\n      status: \"Requires Action\"\n    }\n  ],\n  lstOperations: [\n    {\n      id: \"LST-001\",\n      diveId: \"DO-001\",\n      systems: [\"Primary Air\", \"Emergency Gas\", \"Communications\"],\n      technician: \"Dave Brown\",\n      status: \"Monitoring\",\n      lastCheck: \"2025-08-25 14:30\"\n    },\n    {\n      id: \"LST-002\",\n      diveId: \"DO-002\",\n      systems: [\"Hot Water\", \"Umbilical\", \"Decompression\"],\n      technician: \"Anna Taylor\",\n      status: \"Standby\",\n      lastCheck: \"2025-08-25 12:00\"\n    }\n  ]\n};\n\nexport default function Operations() {\n  const { toast } = useToast();\n  const [selectedApp, setSelectedApp] = useState<string | null>(null);\n  const [subscriptionModalOpen, setSubscriptionModalOpen] = useState(false);\n\n  // Get current user to check subscription status\n  const { data: currentUser } = useQuery({\n    queryKey: [\"/api/users/current\"],\n    queryFn: async () => {\n      const email = localStorage.getItem('userEmail') || 'lalabalavu.jon@gmail.com';\n      const response = await fetch(`/api/users/current?email=${email}`);\n      if (!response.ok) throw new Error('Failed to fetch user');\n      return response.json();\n    }\n  });\n\n  const hasOperationsAccess = currentUser?.subscriptionType === 'LIFETIME' || currentUser?.role === 'ADMIN';\n\n  const operationalApps = [\n    {\n      id: \"dive-supervisor\",\n      title: \"Dive Supervisor Operations\",\n      description: \"Comprehensive dive operation management, crew coordination, and safety oversight tools\",\n      icon: <Shield className=\"w-8 h-8 text-blue-600\" />,\n      color: \"blue\",\n      features: [\n        \"Real-time dive monitoring\",\n        \"Crew assignment & scheduling\", \n        \"Safety protocol management\",\n        \"Emergency response coordination\",\n        \"Dive log management\",\n        \"Equipment status tracking\"\n      ],\n      userRole: \"Dive Supervisor\"\n    },\n    {\n      id: \"lst-manager\",\n      title: \"Life Support Technician (LST)\",\n      description: \"Life support systems monitoring, maintenance scheduling, and critical equipment management\",\n      icon: <Wrench className=\"w-8 h-8 text-green-600\" />,\n      color: \"green\", \n      features: [\n        \"Life support system monitoring\",\n        \"Equipment maintenance tracking\",\n        \"Gas supply management\",\n        \"Emergency backup systems\",\n        \"Pressure & flow monitoring\",\n        \"System diagnostics & alerts\"\n      ],\n      userRole: \"Life Support Technician\"\n    },\n    {\n      id: \"ndt-inspector\",\n      title: \"NDT Underwater Inspection Controller\",\n      description: \"Non-destructive testing inspection management, reporting, and quality assurance tools\",\n      icon: <Search className=\"w-8 h-8 text-purple-600\" />,\n      color: \"purple\",\n      features: [\n        \"Inspection planning & scheduling\",\n        \"NDT method selection & protocols\",\n        \"Real-time inspection data capture\",\n        \"Defect analysis & reporting\",\n        \"Quality assurance workflows\",\n        \"Certification compliance tracking\"\n      ],\n      userRole: \"NDT Inspector\"\n    }\n  ];\n\n  const handleAppAccess = (appId: string) => {\n    if (!hasOperationsAccess) {\n      setSubscriptionModalOpen(true);\n      return;\n    }\n    setSelectedApp(appId);\n  };\n\n  const renderAppContent = (appId: string) => {\n    switch (appId) {\n      case \"dive-supervisor\":\n        return <DiveSupervisorApp />;\n      case \"lst-manager\":\n        return <LSTManagerApp />;\n      case \"ndt-inspector\":\n        return <NDTInspectorApp />;\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-slate-50\">\n      <Navigation />\n      \n      <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        <div className=\"mb-8\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <h1 className=\"text-3xl font-bold text-slate-900 mb-2\">Operations Center</h1>\n              <p className=\"text-lg text-slate-600\">\n                Professional operational management applications for diving professionals\n              </p>\n            </div>\n            {hasOperationsAccess && (\n              <Badge variant=\"secondary\" className=\"bg-green-100 text-green-800\">\n                <CheckCircle className=\"w-4 h-4 mr-1\" />\n                Operations Access Enabled\n              </Badge>\n            )}\n          </div>\n        </div>\n\n        {selectedApp ? (\n          <div className=\"space-y-6\">\n            <div className=\"flex items-center justify-between\">\n              <Button\n                variant=\"outline\"\n                onClick={() => setSelectedApp(null)}\n                className=\"flex items-center space-x-2\"\n              >\n                ← Back to Operations\n              </Button>\n              <h2 className=\"text-xl font-semibold text-slate-900\">\n                {operationalApps.find(app => app.id === selectedApp)?.title}\n              </h2>\n            </div>\n            {renderAppContent(selectedApp)}\n          </div>\n        ) : (\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n            {operationalApps.map((app) => (\n              <Card \n                key={app.id} \n                className={`relative cursor-pointer transition-all hover:shadow-lg ${\n                  hasOperationsAccess \n                    ? `border-${app.color}-200 hover:border-${app.color}-300` \n                    : 'border-gray-200 hover:border-gray-300'\n                }`}\n                onClick={() => handleAppAccess(app.id)}\n              >\n                {!hasOperationsAccess && (\n                  <div className=\"absolute inset-0 bg-white/90 backdrop-blur-sm rounded-lg flex items-center justify-center z-10\">\n                    <div className=\"text-center\">\n                      <Lock className=\"w-8 h-8 text-gray-400 mx-auto mb-2\" />\n                      <p className=\"text-sm font-medium text-gray-600\">Subscription Required</p>\n                    </div>\n                  </div>\n                )}\n                \n                <CardHeader>\n                  <div className=\"flex items-start justify-between\">\n                    <div className=\"flex-1\">\n                      <div className=\"flex items-center space-x-3 mb-2\">\n                        {app.icon}\n                        <Badge variant=\"outline\" className=\"text-xs\">\n                          {app.userRole}\n                        </Badge>\n                      </div>\n                      <CardTitle className=\"text-lg\">{app.title}</CardTitle>\n                      <CardDescription className=\"text-sm\">\n                        {app.description}\n                      </CardDescription>\n                    </div>\n                  </div>\n                </CardHeader>\n                \n                <CardContent>\n                  <div className=\"space-y-3\">\n                    <div>\n                      <h4 className=\"text-sm font-semibold text-slate-900 mb-2\">Key Features:</h4>\n                      <ul className=\"text-xs text-slate-600 space-y-1\">\n                        {app.features.slice(0, 4).map((feature, index) => (\n                          <li key={index} className=\"flex items-center space-x-2\">\n                            <CheckCircle className=\"w-3 h-3 text-green-500\" />\n                            <span>{feature}</span>\n                          </li>\n                        ))}\n                        {app.features.length > 4 && (\n                          <li className=\"text-xs text-slate-400\">\n                            +{app.features.length - 4} more features\n                          </li>\n                        )}\n                      </ul>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        )}\n\n        {/* Subscription Modal */}\n        <Dialog open={subscriptionModalOpen} onOpenChange={setSubscriptionModalOpen}>\n          <DialogContent className=\"sm:max-w-[500px]\">\n            <DialogHeader>\n              <DialogTitle className=\"flex items-center space-x-2\">\n                <Crown className=\"w-6 h-6 text-yellow-600\" />\n                <span>Operations Access Required</span>\n              </DialogTitle>\n              <DialogDescription>\n                Access to operational management applications requires an active subscription or lifetime membership.\n              </DialogDescription>\n            </DialogHeader>\n            \n            <div className=\"space-y-4 py-4\">\n              <div className=\"bg-yellow-50 p-4 rounded-lg border border-yellow-200\">\n                <div className=\"flex items-start space-x-3\">\n                  <AlertTriangle className=\"w-5 h-5 text-yellow-600 mt-0.5\" />\n                  <div>\n                    <h4 className=\"font-medium text-yellow-900\">Professional Operations Suite</h4>\n                    <p className=\"text-sm text-yellow-800 mt-1\">\n                      These specialized operational management tools are designed for professional diving operations \n                      and require subscription access to ensure quality, support, and regular updates.\n                    </p>\n                  </div>\n                </div>\n              </div>\n              \n              <div className=\"bg-blue-50 p-4 rounded-lg border border-blue-200\">\n                <h4 className=\"font-medium text-blue-900 mb-2\">Included in Operations Access:</h4>\n                <ul className=\"text-sm text-blue-800 space-y-1\">\n                  <li>• Complete operational management suite</li>\n                  <li>• Real-time monitoring & reporting</li>\n                  <li>• Compliance & safety tracking</li>\n                  <li>• Advanced analytics & insights</li>\n                  <li>• 24/7 technical support</li>\n                </ul>\n              </div>\n            </div>\n            \n            <div className=\"flex space-x-3\">\n              <Button \n                onClick={() => setSubscriptionModalOpen(false)}\n                variant=\"outline\" \n                className=\"flex-1\"\n              >\n                Maybe Later\n              </Button>\n              <Button \n                onClick={() => {\n                  setSubscriptionModalOpen(false);\n                  toast({\n                    title: \"Contact Sales\",\n                    description: \"Please contact our sales team for subscription options.\",\n                  });\n                }}\n                className=\"flex-1 bg-blue-600 hover:bg-blue-700\"\n              >\n                Upgrade Subscription\n              </Button>\n            </div>\n          </DialogContent>\n        </Dialog>\n      </main>\n    </div>\n  );\n}\n\n// Individual operational app components\nfunction DiveSupervisorApp() {\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n        <Card className=\"lg:col-span-2\">\n          <CardHeader>\n            <CardTitle className=\"flex items-center space-x-2\">\n              <Shield className=\"w-5 h-5 text-blue-600\" />\n              <span>Active Dive Operations</span>\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-4\">\n              {operationalData.diveOperations.map((operation) => (\n                <div key={operation.id} className=\"border rounded-lg p-4\">\n                  <div className=\"flex items-center justify-between mb-2\">\n                    <h4 className=\"font-semibold\">{operation.title}</h4>\n                    <Badge variant={operation.status === 'In Progress' ? 'default' : 'secondary'}>\n                      {operation.status}\n                    </Badge>\n                  </div>\n                  <div className=\"grid grid-cols-2 gap-4 text-sm text-slate-600\">\n                    <div>Date: {operation.date}</div>\n                    <div>Depth: {operation.depth}</div>\n                    <div>Supervisor: {operation.supervisor}</div>\n                    <div>Divers: {operation.divers}</div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </CardContent>\n        </Card>\n        \n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center space-x-2\">\n              <TrendingUp className=\"w-5 h-5 text-green-600\" />\n              <span>Safety Metrics</span>\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-3\">\n              <div className=\"flex justify-between\">\n                <span className=\"text-sm\">Incident-Free Days</span>\n                <span className=\"font-semibold text-green-600\">127</span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span className=\"text-sm\">Active Operations</span>\n                <span className=\"font-semibold\">2</span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span className=\"text-sm\">Crew Availability</span>\n                <span className=\"font-semibold text-blue-600\">95%</span>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  );\n}\n\nfunction LSTManagerApp() {\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center space-x-2\">\n              <Wrench className=\"w-5 h-5 text-green-600\" />\n              <span>System Status</span>\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-4\">\n              {operationalData.lstOperations.map((operation) => (\n                <div key={operation.id} className=\"border rounded-lg p-4\">\n                  <div className=\"flex items-center justify-between mb-2\">\n                    <h4 className=\"font-semibold\">Dive {operation.diveId}</h4>\n                    <Badge variant={operation.status === 'Monitoring' ? 'default' : 'secondary'}>\n                      {operation.status}\n                    </Badge>\n                  </div>\n                  <div className=\"text-sm text-slate-600\">\n                    <div>Technician: {operation.technician}</div>\n                    <div>Last Check: {operation.lastCheck}</div>\n                    <div className=\"mt-2\">\n                      <span className=\"font-medium\">Systems: </span>\n                      {operation.systems.join(', ')}\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </CardContent>\n        </Card>\n        \n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center space-x-2\">\n              <Timer className=\"w-5 h-5 text-orange-600\" />\n              <span>Maintenance Schedule</span>\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-3\">\n              <div className=\"border-l-4 border-orange-500 pl-3\">\n                <div className=\"font-medium\">Primary Air System</div>\n                <div className=\"text-sm text-slate-600\">Due: Today</div>\n              </div>\n              <div className=\"border-l-4 border-blue-500 pl-3\">\n                <div className=\"font-medium\">Emergency Gas Supply</div>\n                <div className=\"text-sm text-slate-600\">Due: Tomorrow</div>\n              </div>\n              <div className=\"border-l-4 border-green-500 pl-3\">\n                <div className=\"font-medium\">Communication System</div>\n                <div className=\"text-sm text-slate-600\">Due: Next Week</div>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  );\n}\n\nfunction NDTInspectorApp() {\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n        <Card className=\"lg:col-span-2\">\n          <CardHeader>\n            <CardTitle className=\"flex items-center space-x-2\">\n              <Search className=\"w-5 h-5 text-purple-600\" />\n              <span>Inspection Reports</span>\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-4\">\n              {operationalData.inspectionReports.map((report) => (\n                <div key={report.id} className=\"border rounded-lg p-4\">\n                  <div className=\"flex items-center justify-between mb-2\">\n                    <h4 className=\"font-semibold\">{report.structure}</h4>\n                    <Badge variant={report.severity === 'High' ? 'destructive' : 'secondary'}>\n                      {report.severity} Risk\n                    </Badge>\n                  </div>\n                  <div className=\"grid grid-cols-2 gap-4 text-sm text-slate-600\">\n                    <div>Inspector: {report.inspector}</div>\n                    <div>Date: {report.date}</div>\n                    <div className=\"col-span-2\">Findings: {report.findings}</div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </CardContent>\n        </Card>\n        \n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center space-x-2\">\n              <FileText className=\"w-5 h-5 text-blue-600\" />\n              <span>Compliance Status</span>\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-3\">\n              <div className=\"flex justify-between\">\n                <span className=\"text-sm\">Inspections Complete</span>\n                <span className=\"font-semibold text-green-600\">24/25</span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span className=\"text-sm\">Critical Findings</span>\n                <span className=\"font-semibold text-red-600\">1</span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span className=\"text-sm\">Compliance Rate</span>\n                <span className=\"font-semibold text-blue-600\">96%</span>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  );\n}","size_bytes":20045},"server/ai-learning-path-service.ts":{"content":"import OpenAI from \"openai\";\n\nif (!process.env.OPENAI_API_KEY) {\n  throw new Error(\"OPENAI_API_KEY environment variable must be set\");\n}\n\nconst openai = new OpenAI({\n  apiKey: process.env.OPENAI_API_KEY,\n});\n\nexport interface UserProgress {\n  userId: string;\n  completedLessons: string[];\n  currentTrack?: string;\n  skillLevel: 'beginner' | 'intermediate' | 'advanced';\n  goals: string[];\n  weakAreas: string[];\n  strengths: string[];\n  timeAvailable: number; // hours per week\n  preferredLearningStyle: 'visual' | 'hands-on' | 'theoretical' | 'mixed';\n  certificationGoals: string[];\n}\n\nexport interface LearningPathSuggestion {\n  id: string;\n  title: string;\n  description: string;\n  estimatedDuration: string;\n  difficulty: 'beginner' | 'intermediate' | 'advanced';\n  tracks: {\n    trackId: string;\n    trackTitle: string;\n    priority: number;\n    reason: string;\n    estimatedWeeks: number;\n  }[];\n  personalizedMessage: string;\n  nextSteps: string[];\n  prerequisites: string[];\n  careerBenefits: string[];\n}\n\nexport class AILearningPathService {\n  \n  async generateLearningPath(userProgress: UserProgress): Promise<LearningPathSuggestion> {\n    try {\n      const prompt = this.buildLearningPathPrompt(userProgress);\n      \n      const response = await openai.chat.completions.create({\n        model: \"gpt-4\", // the newest OpenAI model is \"gpt-4\" which was released August 7, 2025. do not change this unless explicitly requested by the user\n        messages: [\n          {\n            role: \"system\",\n            content: \"You are an expert commercial diving education consultant with 20+ years of experience in professional diving training. You specialize in creating personalized learning paths for commercial divers based on their current skills, goals, and career aspirations. Your recommendations should be practical, industry-relevant, and aligned with commercial diving certification standards.\"\n          },\n          {\n            role: \"user\",\n            content: prompt\n          }\n        ],\n        response_format: { type: \"json_object\" },\n        temperature: 0.7,\n        max_tokens: 2000\n      });\n\n      const suggestion = JSON.parse(response.choices[0].message.content || '{}');\n      \n      return {\n        id: `path-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\n        title: suggestion.title || \"Personalized Learning Path\",\n        description: suggestion.description || \"A customized learning journey based on your goals and progress.\",\n        estimatedDuration: suggestion.estimatedDuration || \"8-12 weeks\",\n        difficulty: suggestion.difficulty || userProgress.skillLevel,\n        tracks: suggestion.tracks || [],\n        personalizedMessage: suggestion.personalizedMessage || \"This path is designed specifically for your learning goals.\",\n        nextSteps: suggestion.nextSteps || [\"Start with the recommended track\", \"Complete prerequisite courses\"],\n        prerequisites: suggestion.prerequisites || [],\n        careerBenefits: suggestion.careerBenefits || [\"Enhanced career prospects\", \"Industry certification\"]\n      };\n    } catch (error) {\n      console.error('Error generating learning path:', error);\n      \n      // Fallback to rule-based recommendation\n      return this.generateFallbackLearningPath(userProgress);\n    }\n  }\n\n  private buildLearningPathPrompt(userProgress: UserProgress): string {\n    return `\nAs a commercial diving education expert, analyze this user's profile and create a personalized learning path recommendation.\n\nUser Profile:\n- Current Skill Level: ${userProgress.skillLevel}\n- Completed Lessons: ${userProgress.completedLessons.length} lessons\n- Current Track: ${userProgress.currentTrack || 'None'}\n- Goals: ${userProgress.goals.join(', ')}\n- Weak Areas: ${userProgress.weakAreas.join(', ')}\n- Strengths: ${userProgress.strengths.join(', ')}\n- Time Available: ${userProgress.timeAvailable} hours per week\n- Learning Style: ${userProgress.preferredLearningStyle}\n- Certification Goals: ${userProgress.certificationGoals.join(', ')}\n\nAvailable Training Tracks:\n1. Inspection & Non-Destructive Testing (NDT) - Advanced underwater inspection techniques\n2. Diver Medic Technician - Emergency medical response and diving medicine\n3. Commercial Dive Supervisor - Leadership and dive operation management\n4. Air Diver Certification - Fundamental air diving skills\n5. Saturation Diver Training - Deep-sea saturation diving operations\n6. Assistant Life Support Technician (ALST) - Life support system operation\n7. Life Support Technician (LST) - Advanced life support systems\n\nPlease respond with a JSON object containing:\n{\n  \"title\": \"Descriptive title for the learning path\",\n  \"description\": \"Detailed description explaining why this path suits the user\",\n  \"estimatedDuration\": \"Time estimate (e.g., '6-8 weeks', '3-4 months')\",\n  \"difficulty\": \"beginner|intermediate|advanced\",\n  \"tracks\": [\n    {\n      \"trackId\": \"track-slug\",\n      \"trackTitle\": \"Track Name\",\n      \"priority\": 1-5,\n      \"reason\": \"Why this track is recommended for this user\",\n      \"estimatedWeeks\": 2-8\n    }\n  ],\n  \"personalizedMessage\": \"Encouraging message tailored to their goals and situation\",\n  \"nextSteps\": [\"Specific actionable steps they should take\"],\n  \"prerequisites\": [\"Any requirements or preparation needed\"],\n  \"careerBenefits\": [\"How this path advances their career\"]\n}\n\nConsider:\n- Their current skill level and experience\n- Time constraints and learning preferences\n- Career advancement opportunities\n- Industry demand and certification value\n- Logical skill progression and dependencies\n- Personalization based on their specific goals and interests\n`;\n  }\n\n  private generateFallbackLearningPath(userProgress: UserProgress): LearningPathSuggestion {\n    // Rule-based fallback when AI is unavailable\n    const tracks = this.getFallbackTracks(userProgress);\n    \n    return {\n      id: `fallback-${Date.now()}`,\n      title: \"Recommended Learning Path\",\n      description: `Based on your ${userProgress.skillLevel} level and goals, we've created a structured learning path to advance your commercial diving career.`,\n      estimatedDuration: \"8-12 weeks\",\n      difficulty: userProgress.skillLevel,\n      tracks,\n      personalizedMessage: `Your ${userProgress.skillLevel} level experience and ${userProgress.timeAvailable} hours per week make this an ideal path for skill development.`,\n      nextSteps: [\n        \"Review the recommended tracks below\",\n        \"Start with the highest priority track\",\n        \"Complete one track before moving to the next\"\n      ],\n      prerequisites: userProgress.skillLevel === 'beginner' ? [\"Basic diving certification\"] : [],\n      careerBenefits: [\n        \"Industry-recognized certifications\",\n        \"Enhanced job opportunities\",\n        \"Higher earning potential\",\n        \"Professional skill advancement\"\n      ]\n    };\n  }\n\n  private getFallbackTracks(userProgress: UserProgress) {\n    const allTracks = [\n      {\n        trackId: \"air-diver-certification\",\n        trackTitle: \"Air Diver Certification\",\n        priority: userProgress.skillLevel === 'beginner' ? 1 : 3,\n        reason: \"Foundation skills for all commercial diving operations\",\n        estimatedWeeks: 4\n      },\n      {\n        trackId: \"inspection-ndt\",\n        trackTitle: \"Inspection & Non-Destructive Testing (NDT)\",\n        priority: 2,\n        reason: \"High demand in commercial diving industry\",\n        estimatedWeeks: 6\n      },\n      {\n        trackId: \"diver-medic-technician\",\n        trackTitle: \"Diver Medic Technician\",\n        priority: userProgress.goals.includes('safety') ? 1 : 2,\n        reason: \"Essential safety skills for diving operations\",\n        estimatedWeeks: 5\n      },\n      {\n        trackId: \"commercial-dive-supervisor\",\n        trackTitle: \"Commercial Dive Supervisor\",\n        priority: userProgress.skillLevel === 'advanced' ? 1 : 4,\n        reason: \"Leadership role with career advancement potential\",\n        estimatedWeeks: 8\n      }\n    ];\n\n    return allTracks\n      .sort((a, b) => a.priority - b.priority)\n      .slice(0, 3);\n  }\n\n  async analyzeLearningStyle(completedLessons: string[], quizScores: number[]): Promise<{\n    preferredStyle: 'visual' | 'hands-on' | 'theoretical' | 'mixed';\n    confidence: number;\n    recommendations: string[];\n  }> {\n    try {\n      const prompt = `\nAnalyze this user's learning pattern and determine their preferred learning style:\n\nCompleted Lessons: ${completedLessons.length}\nAverage Quiz Score: ${quizScores.length ? (quizScores.reduce((a, b) => a + b, 0) / quizScores.length).toFixed(1) : 'N/A'}%\n\nBased on completion patterns and performance, determine:\n1. Preferred learning style (visual, hands-on, theoretical, mixed)\n2. Confidence level (0-1)\n3. Specific recommendations for optimizing their learning\n\nRespond with JSON:\n{\n  \"preferredStyle\": \"style\",\n  \"confidence\": 0.8,\n  \"recommendations\": [\"specific learning tips\"]\n}\n`;\n\n      const response = await openai.chat.completions.create({\n        model: \"gpt-4\", // the newest OpenAI model is \"gpt-4\" which was released August 7, 2025. do not change this unless explicitly requested by the user\n        messages: [\n          {\n            role: \"system\",\n            content: \"You are an educational psychologist specializing in adult learning and professional training analysis.\"\n          },\n          {\n            role: \"user\",\n            content: prompt\n          }\n        ],\n        response_format: { type: \"json_object\" },\n        temperature: 0.5,\n        max_tokens: 500\n      });\n\n      return JSON.parse(response.choices[0].message.content || '{}');\n    } catch (error) {\n      console.error('Error analyzing learning style:', error);\n      \n      return {\n        preferredStyle: 'mixed',\n        confidence: 0.5,\n        recommendations: [\n          \"Try different learning approaches to find what works best\",\n          \"Combine visual aids with hands-on practice\",\n          \"Take regular breaks to process information\"\n        ]\n      };\n    }\n  }\n\n  async generateCareerAdvice(userProgress: UserProgress): Promise<{\n    careerPath: string;\n    nextCertifications: string[];\n    marketDemand: string;\n    salaryProjection: string;\n    timeToGoal: string;\n  }> {\n    try {\n      const prompt = `\nAs a commercial diving career counselor, provide career guidance for this professional:\n\nCurrent Status:\n- Skill Level: ${userProgress.skillLevel}\n- Completed Training: ${userProgress.completedLessons.length} lessons\n- Goals: ${userProgress.goals.join(', ')}\n- Certifications Sought: ${userProgress.certificationGoals.join(', ')}\n\nProvide career guidance in JSON format:\n{\n  \"careerPath\": \"Recommended career trajectory\",\n  \"nextCertifications\": [\"List of relevant certifications to pursue\"],\n  \"marketDemand\": \"Industry demand analysis\",\n  \"salaryProjection\": \"Potential salary range with these skills\",\n  \"timeToGoal\": \"Realistic timeline to achieve career goals\"\n}\n`;\n\n      const response = await openai.chat.completions.create({\n        model: \"gpt-4\", // the newest OpenAI model is \"gpt-4\" which was released August 7, 2025. do not change this unless explicitly requested by the user\n        messages: [\n          {\n            role: \"system\",\n            content: \"You are a commercial diving industry expert with deep knowledge of career paths, certifications, and market demands in the commercial diving sector.\"\n          },\n          {\n            role: \"user\",\n            content: prompt\n          }\n        ],\n        response_format: { type: \"json_object\" },\n        temperature: 0.6,\n        max_tokens: 800\n      });\n\n      return JSON.parse(response.choices[0].message.content || '{}');\n    } catch (error) {\n      console.error('Error generating career advice:', error);\n      \n      return {\n        careerPath: \"Progressive advancement through specialized certifications\",\n        nextCertifications: [\"NDT Inspection\", \"Dive Supervisor\", \"Advanced Life Support\"],\n        marketDemand: \"Strong demand for certified commercial divers across offshore, marine construction, and inspection sectors\",\n        salaryProjection: \"$55,000 - $120,000+ depending on specialization and experience\",\n        timeToGoal: \"12-24 months with dedicated training\"\n      };\n    }\n  }\n}\n\nexport const aiLearningPathService = new AILearningPathService();","size_bytes":12308},"client/src/pages/terms.tsx":{"content":"import Navigation from \"@/components/navigation\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\n\nexport default function Terms() {\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-white to-slate-50\">\n      <Navigation />\n      \n      <main className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"text-3xl font-bold text-slate-900\">Terms of Service</CardTitle>\n            <p className=\"text-sm text-slate-600\">Last updated: January 2025</p>\n          </CardHeader>\n          \n          <CardContent className=\"prose prose-slate max-w-none\">\n            <section className=\"mb-8\">\n              <h2 className=\"text-2xl font-semibold text-slate-900 mb-4\">1. Acceptance of Terms</h2>\n              <p className=\"text-slate-700 mb-4\">\n                By accessing and using Professional Diver - Diver Well Training platform, you accept and agree to be bound by the terms and provision of this agreement.\n              </p>\n            </section>\n\n            <section className=\"mb-8\">\n              <h2 className=\"text-2xl font-semibold text-slate-900 mb-4\">2. Use License</h2>\n              <p className=\"text-slate-700 mb-4\">\n                Permission is granted to temporarily download one copy of Professional Diver materials for personal, non-commercial transitory viewing only. This is the grant of a license, not a transfer of title, and under this license you may not:\n              </p>\n              <ul className=\"list-disc pl-6 text-slate-700 space-y-2\">\n                <li>modify or copy the materials</li>\n                <li>use the materials for any commercial purpose or for any public display</li>\n                <li>attempt to reverse engineer any software contained on the platform</li>\n                <li>remove any copyright or other proprietary notations from the materials</li>\n              </ul>\n            </section>\n\n            <section className=\"mb-8\">\n              <h2 className=\"text-2xl font-semibold text-slate-900 mb-4\">3. Educational Content</h2>\n              <p className=\"text-slate-700 mb-4\">\n                All content provided by Professional Diver - Diver Well Training is brand-neutral and has been reworded to ensure compliance and congruence with educational standards. We are not affiliated with any specific certification bodies or industry organizations.\n              </p>\n            </section>\n\n            <section className=\"mb-8\">\n              <h2 className=\"text-2xl font-semibold text-slate-900 mb-4\">4. Affiliate Program</h2>\n              <p className=\"text-slate-700 mb-4\">\n                Our affiliate program offers commission-based earnings for referring new users. Participants must comply with our affiliate guidelines and promotional standards. Commission rates and terms are subject to change with notice.\n              </p>\n            </section>\n\n            <section className=\"mb-8\">\n              <h2 className=\"text-2xl font-semibold text-slate-900 mb-4\">5. User Accounts</h2>\n              <p className=\"text-slate-700 mb-4\">\n                Users are responsible for maintaining the confidentiality of their account credentials and for all activities that occur under their account. Professional Diver reserves the right to terminate accounts that violate these terms.\n              </p>\n            </section>\n\n            <section className=\"mb-8\">\n              <h2 className=\"text-2xl font-semibold text-slate-900 mb-4\">6. Privacy and Data</h2>\n              <p className=\"text-slate-700 mb-4\">\n                Your privacy is important to us. Please review our Privacy Policy, which also governs your use of the platform, to understand our practices.\n              </p>\n            </section>\n\n            <section className=\"mb-8\">\n              <h2 className=\"text-2xl font-semibold text-slate-900 mb-4\">7. Disclaimers</h2>\n              <p className=\"text-slate-700 mb-4\">\n                The materials on Professional Diver platform are provided on an 'as is' basis. Professional Diver makes no warranties, expressed or implied, and hereby disclaims and negates all other warranties including without limitation, implied warranties or conditions of merchantability, fitness for a particular purpose, or non-infringement of intellectual property or other violation of rights.\n              </p>\n            </section>\n\n            <section className=\"mb-8\">\n              <h2 className=\"text-2xl font-semibold text-slate-900 mb-4\">8. Limitations</h2>\n              <p className=\"text-slate-700 mb-4\">\n                In no event shall Professional Diver or its suppliers be liable for any damages (including, without limitation, damages for loss of data or profit, or due to business interruption) arising out of the use or inability to use the materials on Professional Diver platform, even if Professional Diver or an authorized representative has been notified orally or in writing of the possibility of such damage.\n              </p>\n            </section>\n\n            <section className=\"mb-8\">\n              <h2 className=\"text-2xl font-semibold text-slate-900 mb-4\">9. Revisions and Errata</h2>\n              <p className=\"text-slate-700 mb-4\">\n                The materials appearing on Professional Diver platform could include technical, typographical, or photographic errors. Professional Diver does not warrant that any of the materials on its platform are accurate, complete, or current.\n              </p>\n            </section>\n\n            <section className=\"mb-8\">\n              <h2 className=\"text-2xl font-semibold text-slate-900 mb-4\">10. Governing Law</h2>\n              <p className=\"text-slate-700 mb-4\">\n                These terms and conditions are governed by and construed in accordance with the laws of the United Kingdom and you irrevocably submit to the exclusive jurisdiction of the courts in that state or location.\n              </p>\n            </section>\n\n            <section className=\"mb-8\">\n              <h2 className=\"text-2xl font-semibold text-slate-900 mb-4\">Contact Information</h2>\n              <p className=\"text-slate-700 mb-4\">\n                If you have any questions about these Terms of Service, please contact us at:\n              </p>\n              <div className=\"bg-slate-50 p-4 rounded-lg\">\n                <p className=\"text-slate-700\">\n                  <strong>Email:</strong> support@diverwell.app<br />\n                  <strong>Phone:</strong> +44 (0) 208 123 4567<br />\n                  <strong>Address:</strong> London, United Kingdom\n                </p>\n              </div>\n            </section>\n          </CardContent>\n        </Card>\n      </main>\n    </div>\n  );\n}","size_bytes":6772},"client/src/pages/tracks.tsx":{"content":"import { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Progress } from \"@/components/ui/progress\";\nimport { Clock, Users, BookOpen, Award, CheckCircle, ArrowRight, Brain } from \"lucide-react\";\nimport { Link, useLocation } from \"wouter\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport Navigation from \"@/components/navigation\";\n\ninterface Track {\n  id: string;\n  title: string;\n  slug: string;\n  summary: string | null;\n  isPublished: boolean;\n  createdAt: string;\n  aiTutor: {\n    id: string;\n    name: string;\n    specialty: string;\n    description: string;\n  } | null;\n}\n\n// Mock data for tracks\nconst mockTracks = [\n  {\n    id: \"1\",\n    title: \"Commercial Diving Fundamentals\",\n    slug: \"commercial-diving-fundamentals\",\n    description: \"Master the essential skills and safety protocols for commercial diving operations.\",\n    level: \"Beginner\",\n    duration: \"8 weeks\",\n    lessons: 12,\n    students: 2847,\n    progress: 0,\n    completed: false,\n    category: \"Fundamentals\"\n  },\n  {\n    id: \"2\", \n    title: \"Advanced Underwater Welding\",\n    slug: \"advanced-underwater-welding\",\n    description: \"Professional underwater welding techniques and certification preparation.\",\n    level: \"Advanced\",\n    duration: \"12 weeks\", \n    lessons: 18,\n    students: 1456,\n    progress: 0,\n    completed: false,\n    category: \"Specialized Skills\"\n  },\n  {\n    id: \"3\",\n    title: \"Dive Supervision & Management\",\n    slug: \"dive-supervision-management\", \n    description: \"Leadership training for dive supervisors and project managers.\",\n    level: \"Expert\",\n    duration: \"10 weeks\",\n    lessons: 15,\n    students: 892,\n    progress: 0,\n    completed: false,\n    category: \"Management\"\n  },\n  {\n    id: \"4\",\n    title: \"NDT Inspection Techniques\",\n    slug: \"ndt-inspection-techniques\",\n    description: \"Non-destructive testing methods for underwater structural inspection.\",\n    level: \"Intermediate\",\n    duration: \"6 weeks\",\n    lessons: 10,\n    students: 1247,\n    progress: 0,\n    completed: false,\n    category: \"Inspection\"\n  },\n  {\n    id: \"5\",\n    title: \"Saturation Diving Operations\",\n    slug: \"saturation-diving-operations\",\n    description: \"Comprehensive training for saturation diving systems and procedures.\", \n    level: \"Expert\",\n    duration: \"16 weeks\",\n    lessons: 24,\n    students: 623,\n    progress: 0,\n    completed: false,\n    category: \"Advanced Operations\"\n  },\n  {\n    id: \"6\",\n    title: \"Offshore Platform Safety\",\n    slug: \"offshore-platform-safety\",\n    description: \"Safety protocols and emergency procedures for offshore diving operations.\",\n    level: \"Intermediate\", \n    duration: \"4 weeks\",\n    lessons: 8,\n    students: 1834,\n    progress: 0,\n    completed: false,\n    category: \"Safety\"\n  }\n];\n\nconst levelColors: { [key: string]: string } = {\n  \"Beginner\": \"bg-green-100 text-green-800\",\n  \"Intermediate\": \"bg-blue-100 text-blue-800\", \n  \"Advanced\": \"bg-orange-100 text-orange-800\",\n  \"Expert\": \"bg-red-100 text-red-800\"\n};\n\nexport default function Tracks() {\n  const [, setLocation] = useLocation();\n  const { data: apiTracks, isLoading } = useQuery<Track[]>({\n    queryKey: [\"/api/tracks\"],\n  });\n\n  // Use API data if available, otherwise fall back to mock data\n  const tracks = apiTracks && apiTracks.length > 0 ? \n    apiTracks.map(track => ({\n      id: track.id,\n      title: track.title,\n      slug: track.slug,\n      description: track.summary || \"Professional diving training course\",\n      level: \"Intermediate\", // Default level\n      duration: \"8 weeks\",\n      lessons: 12,\n      students: Math.floor(Math.random() * 2000) + 500,\n      progress: Math.floor(Math.random() * 100),\n      completed: false,\n      category: \"Professional Training\",\n      aiTutor: track.aiTutor\n    })) : mockTracks;\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-white to-slate-50\">\n      <Navigation />\n      \n      <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        {/* Header */}\n        <div className=\"mb-8\">\n          <h1 className=\"text-3xl font-bold text-slate-900 mb-2\">Learning Tracks</h1>\n          <p className=\"text-lg text-slate-600\">\n            Comprehensive professional diving education tracks designed for career advancement\n          </p>\n        </div>\n\n        {/* Stats Cards */}\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6 mb-8\">\n          <Card>\n            <CardContent className=\"p-6\">\n              <div className=\"flex items-center\">\n                <BookOpen className=\"w-8 h-8 text-blue-600 mr-3\" />\n                <div>\n                  <p className=\"text-2xl font-bold text-slate-900\">{mockTracks.length}</p>\n                  <p className=\"text-sm text-slate-600\">Total Tracks</p>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardContent className=\"p-6\">\n              <div className=\"flex items-center\">\n                <Users className=\"w-8 h-8 text-green-600 mr-3\" />\n                <div>\n                  <p className=\"text-2xl font-bold text-slate-900\">\n                    {mockTracks.reduce((sum, track) => sum + track.students, 0).toLocaleString()}\n                  </p>\n                  <p className=\"text-sm text-slate-600\">Active Students</p>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardContent className=\"p-6\">\n              <div className=\"flex items-center\">\n                <Award className=\"w-8 h-8 text-purple-600 mr-3\" />\n                <div>\n                  <p className=\"text-2xl font-bold text-slate-900\">\n                    {mockTracks.reduce((sum, track) => sum + track.lessons, 0)}\n                  </p>\n                  <p className=\"text-sm text-slate-600\">Total Lessons</p>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardContent className=\"p-6\">\n              <div className=\"flex items-center\">\n                <CheckCircle className=\"w-8 h-8 text-orange-600 mr-3\" />\n                <div>\n                  <p className=\"text-2xl font-bold text-slate-900\">0%</p>\n                  <p className=\"text-sm text-slate-600\">Your Progress</p>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n\n        {/* Tracks Grid */}\n        {isLoading ? (\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n            {[1, 2, 3, 4, 5, 6].map((i) => (\n              <div key={i} className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6\">\n                <div className=\"animate-pulse\">\n                  <div className=\"h-6 bg-gray-200 rounded w-3/4 mb-2\"></div>\n                  <div className=\"h-4 bg-gray-200 rounded w-full mb-4\"></div>\n                  <div className=\"h-2 bg-gray-200 rounded w-full mb-4\"></div>\n                  <div className=\"h-8 bg-gray-200 rounded w-full\"></div>\n                </div>\n              </div>\n            ))}\n          </div>\n        ) : (\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n            {tracks.map((track) => (\n            <Card key={track.id} className=\"hover:shadow-lg transition-shadow duration-200\">\n              <CardHeader>\n                <div className=\"flex justify-between items-start mb-2\">\n                  <Badge className={levelColors[track.level]}>{track.level}</Badge>\n                  <Badge variant=\"outline\">{track.category}</Badge>\n                </div>\n                <CardTitle className=\"text-xl\">{track.title}</CardTitle>\n                <CardDescription className=\"text-sm text-slate-600\">\n                  {track.description}\n                </CardDescription>\n                \n                {/* AI Tutor Information for API tracks */}\n                {track.aiTutor && (\n                  <div className=\"mt-3 p-3 bg-blue-50 rounded-lg border border-blue-200\">\n                    <div className=\"flex items-center gap-2 mb-1\">\n                      <Brain className=\"w-4 h-4 text-blue-600\" />\n                      <span className=\"text-sm font-medium text-blue-900\">AI Tutor</span>\n                    </div>\n                    <p className=\"text-sm text-blue-800\">\n                      {track.aiTutor.description}\n                    </p>\n                  </div>\n                )}\n              </CardHeader>\n              \n              <CardContent>\n                <div className=\"space-y-4\">\n                  {/* Progress Bar */}\n                  <div>\n                    <div className=\"flex justify-between text-sm mb-1\">\n                      <span className=\"text-slate-600\">Progress</span>\n                      <span className=\"text-slate-900 font-medium\">{track.progress}%</span>\n                    </div>\n                    <Progress value={track.progress} className=\"h-2\" />\n                  </div>\n\n                  {/* Track Stats */}\n                  <div className=\"flex justify-between text-sm text-slate-600\">\n                    <div className=\"flex items-center\">\n                      <Clock className=\"w-4 h-4 mr-1\" />\n                      <span>{track.duration}</span>\n                    </div>\n                    <div className=\"flex items-center\">\n                      <BookOpen className=\"w-4 h-4 mr-1\" />\n                      <span>{track.lessons} lessons</span>\n                    </div>\n                    <div className=\"flex items-center\">\n                      <Users className=\"w-4 h-4 mr-1\" />\n                      <span>{track.students.toLocaleString()}</span>\n                    </div>\n                  </div>\n\n                  {/* Action Button */}\n                  <Button \n                    onClick={() => setLocation(`/tracks/${track.slug}`)}\n                    className=\"w-full bg-blue-600 hover:bg-blue-700\" \n                    data-testid={`button-start-track-${track.id}`}\n                  >\n                    {track.progress > 0 ? (\n                      <>\n                        Continue Track\n                        <ArrowRight className=\"w-4 h-4 ml-2\" />\n                      </>\n                    ) : (\n                      <>\n                        Start Track\n                        <ArrowRight className=\"w-4 h-4 ml-2\" />\n                      </>\n                    )}\n                  </Button>\n                </div>\n              </CardContent>\n            </Card>\n            ))}\n          </div>\n        )}\n\n        {/* Call to Action */}\n        <div className=\"mt-12 text-center\">\n          <Card className=\"bg-gradient-to-r from-blue-50 to-slate-50 border-blue-200\">\n            <CardContent className=\"p-8\">\n              <h3 className=\"text-2xl font-bold text-slate-900 mb-4\">\n                Ready to Advance Your Diving Career?\n              </h3>\n              <p className=\"text-lg text-slate-600 mb-6 max-w-2xl mx-auto\">\n                Join thousands of professional divers who have advanced their careers with our comprehensive training tracks. \n                Get personalized recommendations with our AI Learning Path system.\n              </p>\n              <div className=\"space-x-4\">\n                <Link href=\"/learning-path\">\n                  <Button size=\"lg\" className=\"bg-blue-600 hover:bg-blue-700\">\n                    Get AI Recommendations\n                  </Button>\n                </Link>\n                <Link href=\"/affiliate\">\n                  <Button size=\"lg\" variant=\"outline\">\n                    Join Partner Program\n                  </Button>\n                </Link>\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n      </main>\n    </div>\n  );\n}","size_bytes":11898},"scripts/simple-seed.ts":{"content":"import { db } from '../server/db.js';\nimport { tracks, lessons, quizzes, questions } from '../shared/schema.js';\n\nasync function simpleSeed() {\n  console.log('🌱 Creating diving tracks...');\n\n  try {\n    // Clear existing data\n    await db.delete(questions);\n    await db.delete(quizzes);\n    await db.delete(lessons);\n    await db.delete(tracks);\n\n    // Create tracks without ai_tutor_id\n    const dmtTrack = await db.insert(tracks).values({\n      title: \"Diver Medic Technician (DMT)\",\n      slug: \"diver-medic-technician\",\n      summary: \"Advanced medical training for commercial diving operations\",\n      difficulty: \"advanced\",\n      isPublished: true,\n    }).returning();\n\n    const alstTrack = await db.insert(tracks).values({\n      title: \"Air Diving Life Support Technician (ALST)\",\n      slug: \"air-diving-life-support-technician\", \n      summary: \"Life support systems and air diving operations\",\n      difficulty: \"intermediate\",\n      isPublished: true,\n    }).returning();\n\n    const lstTrack = await db.insert(tracks).values({\n      title: \"Life Support Technician (LST)\",\n      slug: \"life-support-technician\",\n      summary: \"Surface-supplied diving life support operations\",\n      difficulty: \"intermediate\", \n      isPublished: true,\n    }).returning();\n\n    const mixedGasTrack = await db.insert(tracks).values({\n      title: \"Mixed Gas Diving\",\n      slug: \"mixed-gas-diving\",\n      summary: \"Helium and mixed gas diving procedures\",\n      difficulty: \"advanced\",\n      isPublished: true,\n    }).returning();\n\n    const saturateTrack = await db.insert(tracks).values({\n      title: \"Saturation Diving\",\n      slug: \"saturation-diving\", \n      summary: \"Deep saturation diving operations and procedures\",\n      difficulty: \"expert\",\n      isPublished: true,\n    }).returning();\n\n    const physioTrack = await db.insert(tracks).values({\n      title: \"Diving Physiology Basics\",\n      slug: \"diving-physiology-basics\",\n      summary: \"Understanding how the human body responds to underwater environments\",\n      difficulty: \"beginner\",\n      isPublished: true,\n    }).returning();\n\n    // Create a basic lesson for physiology track\n    const physiologyLesson = await db.insert(lessons).values({\n      trackId: physioTrack[0].id,\n      title: \"Pressure and the Human Body\",\n      order: 1,\n      content: `# Pressure and the Human Body\n\nUnderstanding how pressure affects the human body underwater is fundamental to safe diving practices.\n\n## Key Concepts\n\n### Pressure Increases with Depth\n- At sea level: 1 atmosphere (14.7 PSI)\n- At 33 feet: 2 atmospheres \n- At 66 feet: 3 atmospheres\n- At 99 feet: 4 atmospheres\n\n### Effects on Gas-Filled Spaces\nThe human body contains several gas-filled spaces that are affected by pressure changes:\n\n1. **Lungs** - The primary concern during breath-hold diving\n2. **Middle ear** - Must be equalized during descent\n3. **Sinuses** - Can cause pain if blocked\n4. **Intestinal gas** - Can expand during ascent\n\n### Physiological Responses\n- Increased heart rate initially\n- Peripheral vasoconstriction \n- Mammalian dive reflex activation\n- Nitrogen absorption into body tissues\n\nUnderstanding these fundamental principles is essential before progressing to more advanced topics.`,\n    }).returning();\n\n    console.log('✅ Tracks created successfully!');\n    console.log(`Created ${await db.select().from(tracks).then(r => r.length)} tracks`);\n\n  } catch (error) {\n    console.error('❌ Error creating tracks:', error);\n  }\n}\n\nsimpleSeed().catch(console.error).finally(() => process.exit(0));","size_bytes":3549},"scripts/populate-content.ts":{"content":"import { db } from \"../server/db\";\nimport { tracks, lessons, quizzes, questions } from \"@shared/schema\";\n\nconst professionalDivingContent = {\n  // Diver Medic Technician (DMT)\n  \"diver-medic-technician\": {\n    lessons: [\n      {\n        title: \"Introduction to Diving Medicine\",\n        order: 1,\n        content: `# Introduction to Diving Medicine\n\n## Overview\nThe Diver Medic Technician (DMT) program provides comprehensive medical training specifically designed for commercial diving operations. This certification is essential for maintaining safety standards in professional diving environments.\n\n## Learning Objectives\n- Understand the physiological effects of diving on the human body\n- Identify and treat diving-related medical emergencies\n- Apply proper first aid techniques in hyperbaric environments\n- Maintain medical equipment and supplies for diving operations\n\n## Medical Scope in Commercial Diving\n\n### Primary Responsibilities\n1. **Emergency Response**: First responder for diving accidents and decompression incidents\n2. **Medical Monitoring**: Continuous assessment of diver health and fitness\n3. **Equipment Management**: Maintenance of medical supplies and emergency equipment\n4. **Documentation**: Accurate record-keeping of medical incidents and treatments\n\n### Physiological Considerations\n- Pressure effects on body systems\n- Gas narcosis and oxygen toxicity\n- Decompression sickness mechanisms\n- Hypothermia and thermal protection\n\n## Legal and Regulatory Framework\n- OSHA Commercial Diving Standards (29 CFR 1910.401-441)\n- ADCI certification requirements\n- Medical documentation and reporting obligations\n- Liability and scope of practice limitations\n\nThis foundational knowledge forms the basis for all advanced DMT procedures and protocols.`,\n        estimatedMinutes: 45,\n        quiz: {\n          title: \"Diving Medicine Fundamentals Quiz\",\n          timeLimit: 20,\n          questions: [\n            {\n              prompt: \"What is the primary role of a Diver Medic Technician in commercial diving operations?\",\n              options: [\"Equipment maintenance\", \"Emergency medical response\", \"Dive planning\", \"Surface support\"],\n              correctAnswer: \"Emergency medical response\",\n              explanation: \"The DMT serves as the primary medical responder for diving emergencies and decompression incidents.\"\n            },\n            {\n              prompt: \"Which regulatory body establishes commercial diving standards in the United States?\",\n              options: [\"PADI\", \"NAUI\", \"OSHA\", \"USCG\"],\n              correctAnswer: \"OSHA\",\n              explanation: \"OSHA (Occupational Safety and Health Administration) regulates commercial diving through 29 CFR 1910.401-441.\"\n            },\n            {\n              prompt: \"Decompression sickness primarily affects which body systems?\",\n              options: [\"Respiratory only\", \"Circulatory and nervous systems\", \"Digestive system\", \"Muscular system only\"],\n              correctAnswer: \"Circulatory and nervous systems\",\n              explanation: \"DCS affects circulation through bubble formation and can cause neurological symptoms.\"\n            }\n          ]\n        }\n      },\n      {\n        title: \"Hyperbaric Medicine Principles\",\n        order: 2,\n        content: `# Hyperbaric Medicine Principles\n\n## Pressure Physics in Diving Medicine\n\n### Fundamental Laws\n1. **Boyle's Law**: Gas volume inversely proportional to pressure\n2. **Henry's Law**: Gas solubility proportional to pressure\n3. **Dalton's Law**: Total pressure equals sum of partial pressures\n\n### Clinical Applications\n- Understanding tissue gas loading during compression\n- Predicting decompression requirements\n- Calculating therapeutic recompression protocols\n\n## Decompression Sickness (DCS)\n\n### Type I DCS (Pain-Only Bends)\n- Musculoskeletal pain, typically in joints\n- Mild to moderate severity\n- Usually responds well to recompression therapy\n- Most common in shoulders, elbows, and knees\n\n### Type II DCS (Serious Bends)\n- Neurological symptoms: paralysis, sensory loss, confusion\n- Pulmonary symptoms: chest pain, cough, breathing difficulty\n- Inner ear symptoms: vertigo, hearing loss, tinnitus\n- Requires immediate recompression treatment\n\n## Treatment Protocols\n\n### Initial Assessment\n1. Airway, breathing, circulation (ABC)\n2. Neurological examination\n3. Diving history and profile analysis\n4. Symptom onset and progression\n\n### Recompression Therapy\n- U.S. Navy Treatment Tables\n- Oxygen administration protocols\n- Monitoring during treatment\n- Post-treatment care and observation\n\n## Emergency Procedures\n- Chamber operations and safety\n- Medical gas management\n- Patient monitoring systems\n- Communication protocols during treatment`,\n        estimatedMinutes: 60,\n        quiz: {\n          title: \"Hyperbaric Medicine Assessment\",\n          timeLimit: 25,\n          questions: [\n            {\n              prompt: \"Which gas law explains why decompression sickness occurs?\",\n              options: [\"Boyle's Law\", \"Henry's Law\", \"Dalton's Law\", \"Gay-Lussac's Law\"],\n              correctAnswer: \"Henry's Law\",\n              explanation: \"Henry's Law governs gas solubility, explaining how nitrogen dissolves under pressure and forms bubbles during decompression.\"\n            },\n            {\n              prompt: \"Type II DCS is characterized by:\",\n              options: [\"Joint pain only\", \"Neurological symptoms\", \"Skin manifestations\", \"Mild discomfort\"],\n              correctAnswer: \"Neurological symptoms\",\n              explanation: \"Type II DCS affects the nervous system and can cause serious neurological complications.\"\n            }\n          ]\n        }\n      }\n    ]\n  },\n\n  // Air Diving Life Support Technician (ALST)\n  \"air-diving-life-support-technician\": {\n    lessons: [\n      {\n        title: \"Air Diving Systems Overview\",\n        order: 1,\n        content: `# Air Diving Systems Overview\n\n## Surface-Supplied Air Diving\n\n### System Components\n1. **Air Supply Sources**\n   - High-pressure compressors\n   - Breathing air quality standards\n   - Backup air supply systems\n   - Emergency bail-out bottles\n\n2. **Distribution Systems**\n   - Manifolds and control panels\n   - Pressure regulators and gauges\n   - Umbilical management systems\n   - Emergency gas switching valves\n\n## ALST Responsibilities\n\n### Pre-Dive Operations\n- System inspection and testing\n- Air quality verification\n- Equipment calibration\n- Safety briefings with dive team\n\n### During Dive Operations\n- Continuous monitoring of air supply pressures\n- Umbilical management and tending\n- Communication with diving supervisor\n- Emergency response readiness\n\n### Post-Dive Procedures\n- System shutdown and securing\n- Equipment maintenance and logging\n- Incident documentation\n- Preventive maintenance scheduling\n\n## Air Quality Standards\n\n### Grade E Breathing Air Requirements\n- Oxygen: 19.5-23.5%\n- Carbon monoxide: 10 ppm maximum\n- Carbon dioxide: 1000 ppm maximum\n- Condensed water: no measurement\n- Oil mist: 5 mg/m³ maximum\n\n### Testing and Monitoring\n- Daily air quality analysis\n- Compressor intake monitoring\n- Filter maintenance schedules\n- Documentation requirements\n\n## Emergency Procedures\n- Loss of primary air supply\n- Umbilical entanglement or damage\n- Compressor failure protocols\n- Diver emergency response`,\n        estimatedMinutes: 50,\n        quiz: {\n          title: \"Air Diving Systems Knowledge Check\",\n          timeLimit: 20,\n          questions: [\n            {\n              prompt: \"What is the maximum allowable carbon monoxide content in Grade E breathing air?\",\n              options: [\"5 ppm\", \"10 ppm\", \"20 ppm\", \"50 ppm\"],\n              correctAnswer: \"10 ppm\",\n              explanation: \"Grade E breathing air standards specify a maximum of 10 ppm carbon monoxide for safe diving operations.\"\n            },\n            {\n              prompt: \"The primary responsibility of an ALST during diving operations is:\",\n              options: [\"Dive planning\", \"Air supply monitoring\", \"Equipment repair\", \"Diver training\"],\n              correctAnswer: \"Air supply monitoring\",\n              explanation: \"ALSTs are responsible for continuous monitoring and management of the air supply system during dive operations.\"\n            }\n          ]\n        }\n      }\n    ]\n  },\n\n  // Life Support Technician (LST)\n  \"life-support-technician\": {\n    lessons: [\n      {\n        title: \"Life Support System Fundamentals\",\n        order: 1,\n        content: `# Life Support System Fundamentals\n\n## Surface-Supplied Diving Life Support\n\n### Core Functions\n1. **Gas Supply Management**\n   - Primary and secondary gas sources\n   - Gas mixing and distribution systems\n   - Pressure regulation and control\n   - Quality assurance and monitoring\n\n2. **Environmental Control**\n   - Diver heating systems\n   - Depth and pressure monitoring\n   - Communication systems\n   - Emergency response capabilities\n\n## LST Certification Requirements\n\n### Training Components\n- Gas physics and physiology\n- Life support equipment operation\n- Emergency procedures and protocols\n- System maintenance and troubleshooting\n\n### Practical Skills\n- Equipment inspection and testing\n- System startup and operation\n- Emergency response procedures\n- Maintenance and repair techniques\n\n## Equipment Systems\n\n### Gas Distribution Panels\n- Multi-diver manifold systems\n- Individual diver controls\n- Pressure monitoring and alarms\n- Emergency switching capabilities\n\n### Hot Water Systems\n- Heating unit operation\n- Temperature control and monitoring\n- Flow rate management\n- System maintenance requirements\n\n### Communication Systems\n- Hard-wire communication equipment\n- Through-water communication devices\n- Emergency signaling systems\n- Integration with dive control systems\n\n## Operational Procedures\n- Pre-dive system checks\n- Operational monitoring requirements\n- Emergency response protocols\n- Post-dive shutdown procedures\n\n## Safety Protocols\n- Redundant system design\n- Fail-safe mechanisms\n- Emergency procedures\n- Risk assessment and mitigation`,\n        estimatedMinutes: 45,\n        quiz: {\n          title: \"Life Support Systems Evaluation\",\n          timeLimit: 20,\n          questions: [\n            {\n              prompt: \"What are the core functions of surface-supplied diving life support systems?\",\n              options: [\"Gas supply only\", \"Gas supply and environmental control\", \"Communication only\", \"Equipment storage\"],\n              correctAnswer: \"Gas supply and environmental control\",\n              explanation: \"LST systems provide both breathing gas management and environmental support including heating and communication.\"\n            }\n          ]\n        }\n      }\n    ]\n  },\n\n  // Mixed Gas Diving\n  \"mixed-gas-diving\": {\n    lessons: [\n      {\n        title: \"Mixed Gas Theory and Applications\",\n        order: 1,\n        content: `# Mixed Gas Theory and Applications\n\n## Introduction to Mixed Gas Diving\n\nMixed gas diving utilizes breathing gas mixtures other than air to extend operational depth and reduce narcotic effects. This advanced technique requires specialized knowledge of gas physics, physiology, and operational procedures.\n\n## Gas Mixing Fundamentals\n\n### Helium-Oxygen Mixtures (Heliox)\n- **Advantages**: Reduced nitrogen narcosis, improved thermal conductivity\n- **Disadvantages**: Helium cost, voice distortion, increased heat loss\n- **Applications**: Deep air equivalent diving beyond 190 fsw\n\n### Trimix (Helium-Nitrogen-Oxygen)\n- **Composition**: Variable ratios of all three gases\n- **Benefits**: Cost reduction compared to pure heliox\n- **Considerations**: Complex mixing calculations and procedures\n\n## Physiological Considerations\n\n### Nitrogen Narcosis Mitigation\n- Helium substitution for nitrogen at depth\n- Equivalent air depth (EAD) calculations\n- Performance improvements in deep diving\n\n### Oxygen Toxicity Management\n- Central nervous system (CNS) oxygen toxicity\n- Pulmonary oxygen toxicity\n- Partial pressure calculations and limits\n\n### High-Pressure Nervous Syndrome (HPNS)\n- Symptoms and onset depths\n- Nitrogen addition to mitigate HPNS\n- Compression rate considerations\n\n## Decompression Planning\n\n### Mixed Gas Tables and Algorithms\n- Helium vs. nitrogen uptake and elimination\n- Multi-tissue models for mixed gas\n- Computer algorithm considerations\n\n### Gas Switching Procedures\n- Travel gas mixtures\n- Bottom gas compositions\n- Decompression gas optimization\n- Switch depth calculations\n\n## Operational Procedures\n\n### Gas Mixing Safety\n- Contamination prevention\n- Oxygen handling procedures\n- Gas analysis and verification\n- Documentation requirements\n\n### Equipment Considerations\n- Regulator compatibility\n- Thermal protection requirements\n- Communication system effects\n- Emergency gas supplies\n\nThis comprehensive overview prepares divers for advanced mixed gas operations while emphasizing safety protocols and theoretical understanding.`,\n        estimatedMinutes: 75,\n        quiz: {\n          title: \"Mixed Gas Diving Competency\",\n          timeLimit: 30,\n          questions: [\n            {\n              prompt: \"What is the primary advantage of using heliox over air for deep diving?\",\n              options: [\"Lower cost\", \"Reduced nitrogen narcosis\", \"Better taste\", \"Easier mixing\"],\n              correctAnswer: \"Reduced nitrogen narcosis\",\n              explanation: \"Heliox eliminates nitrogen narcosis by replacing nitrogen with helium, allowing clearer thinking at depth.\"\n            },\n            {\n              prompt: \"High-Pressure Nervous Syndrome (HPNS) is typically mitigated by:\",\n              options: [\"Adding oxygen\", \"Adding nitrogen\", \"Adding helium\", \"Using pure oxygen\"],\n              correctAnswer: \"Adding nitrogen\",\n              explanation: \"Adding small amounts of nitrogen to helium-oxygen mixtures helps reduce HPNS symptoms.\"\n            },\n            {\n              prompt: \"In mixed gas diving, equivalent air depth (EAD) is used to:\",\n              options: [\"Calculate oxygen toxicity\", \"Determine narcotic effects\", \"Plan decompression\", \"Monitor gas supplies\"],\n              correctAnswer: \"Determine narcotic effects\",\n              explanation: \"EAD helps determine the narcotic equivalent depth when using nitrogen-helium mixtures.\"\n            }\n          ]\n        }\n      }\n    ]\n  },\n\n  // Saturation Diving\n  \"saturation-diving\": {\n    lessons: [\n      {\n        title: \"Saturation Diving Principles\",\n        order: 1,\n        content: `# Saturation Diving Principles\n\n## Saturation Diving Overview\n\nSaturation diving is the most advanced form of commercial diving, allowing divers to work at extreme depths for extended periods. This technique involves saturating body tissues with inert gas at working depth pressure, eliminating repetitive decompression requirements.\n\n## Fundamental Concepts\n\n### Tissue Saturation\n- **Definition**: Complete equilibration of dissolved gases in body tissues\n- **Time Requirements**: Typically 24-48 hours to achieve saturation\n- **Depth Independence**: Once saturated, decompression time remains constant regardless of additional bottom time\n\n### Operational Advantages\n- Extended bottom time without additional decompression penalty\n- Continuous work capability at operational depth\n- Reduced total project decompression time for long-duration jobs\n- Enhanced diver safety through controlled environment\n\n## Saturation System Components\n\n### Deck Decompression Chamber (DDC)\n- **Living Chambers**: Pressurized habitat for diver accommodation\n- **Entry/Exit Locks**: Transfer systems for personnel and equipment\n- **Environmental Control**: Atmosphere monitoring, heating, sanitation\n- **Emergency Systems**: Fire suppression, emergency evacuation capabilities\n\n### Personnel Transfer Capsule (PTC)\n- **Transport Function**: Safe transfer of divers to working depth\n- **Life Support**: Independent breathing gas and environmental systems\n- **Communication**: Continuous contact with dive control\n- **Emergency Capabilities**: Self-rescue and backup systems\n\n### Surface Support Systems\n- **Gas Supply**: High-volume mixed gas generation and storage\n- **Control Systems**: Centralized monitoring and control capabilities\n- **Power Generation**: Redundant electrical systems\n- **Emergency Response**: Medical facilities and evacuation procedures\n\n## Physiological Considerations\n\n### Long-Term Pressure Exposure\n- **Tissue Adaptation**: Physiological changes during saturation\n- **Thermal Regulation**: Body heat management in helium atmospheres\n- **Respiratory Function**: Breathing gas density effects\n- **Psychological Factors**: Isolation and confinement effects\n\n### Gas Management\n- **Breathing Gas Mixtures**: Optimized helium-oxygen compositions\n- **Atmosphere Control**: CO2 scrubbing and oxygen addition\n- **Contaminant Removal**: Trace gas and humidity control\n- **Emergency Gas Supplies**: Backup breathing systems\n\n## Operational Procedures\n\n### Saturation Phases\n1. **Compression**: Gradual pressurization to storage depth\n2. **Storage**: Extended period at working pressure\n3. **Excursions**: Working dives to operational depth\n4. **Decompression**: Controlled return to surface pressure\n\n### Safety Protocols\n- **Redundant Systems**: Multiple backup capabilities\n- **Emergency Procedures**: Fire, flood, and medical emergencies\n- **Communication**: Continuous contact requirements\n- **Medical Support**: Specialized hyperbaric medicine\n\n### Quality Control\n- **Gas Analysis**: Continuous atmosphere monitoring\n- **Equipment Testing**: Regular system inspections\n- **Documentation**: Detailed operational logs\n- **Training Requirements**: Specialized crew certification\n\nThis advanced diving technique requires extensive training, specialized equipment, and rigorous safety procedures to ensure successful operations.`,\n        estimatedMinutes: 90,\n        quiz: {\n          title: \"Saturation Diving Mastery Test\",\n          timeLimit: 35,\n          questions: [\n            {\n              prompt: \"What is the primary advantage of saturation diving for deep commercial operations?\",\n              options: [\"Lower equipment costs\", \"Extended bottom time without decompression penalty\", \"Simpler procedures\", \"Reduced training requirements\"],\n              correctAnswer: \"Extended bottom time without decompression penalty\",\n              explanation: \"Once tissues are saturated, additional bottom time doesn't increase decompression requirements.\"\n            },\n            {\n              prompt: \"How long does it typically take to achieve tissue saturation?\",\n              options: [\"6-12 hours\", \"24-48 hours\", \"3-4 days\", \"1 week\"],\n              correctAnswer: \"24-48 hours\",\n              explanation: \"Complete tissue saturation typically requires 24-48 hours of pressure exposure.\"\n            },\n            {\n              prompt: \"The Personnel Transfer Capsule (PTC) is used for:\",\n              options: [\"Equipment storage\", \"Gas mixing\", \"Diver transport to depth\", \"Surface communication\"],\n              correctAnswer: \"Diver transport to depth\",\n              explanation: \"The PTC safely transports saturated divers between the surface chamber and working depth.\"\n            },\n            {\n              prompt: \"In saturation diving, what happens to decompression time as bottom time increases?\",\n              options: [\"It increases proportionally\", \"It remains constant\", \"It decreases\", \"It doubles\"],\n              correctAnswer: \"It remains constant\",\n              explanation: \"Once tissues are saturated, decompression time remains constant regardless of additional bottom time.\"\n            }\n          ]\n        }\n      }\n    ]\n  },\n\n  // Diving Physiology Basics\n  \"diving-physiology-basics\": {\n    lessons: [\n      {\n        title: \"Human Physiology and Pressure Effects\",\n        order: 1,\n        content: `# Human Physiology and Pressure Effects\n\n## Introduction to Diving Physiology\n\nUnderstanding human physiology under pressure is fundamental to safe diving operations. The human body undergoes significant physiological changes when exposed to increased pressure, affecting multiple organ systems and requiring careful consideration in dive planning and execution.\n\n## Pressure and the Human Body\n\n### Atmospheric Pressure Concepts\n- **Sea Level Pressure**: 14.7 psi (1 atmosphere absolute)\n- **Pressure Increase**: 14.7 psi per 33 feet of seawater\n- **Gauge vs. Absolute Pressure**: Understanding pressure measurement systems\n- **Pressure Effects**: Direct and indirect effects on body systems\n\n### Gas Laws and Physiological Applications\n\n#### Boyle's Law Applications\n- **Lung Volume Changes**: Compression and expansion effects\n- **Air-Filled Spaces**: Mask squeeze, ear squeeze, sinus squeeze\n- **Pneumothorax Risk**: Lung overexpansion injuries\n- **Equipment Considerations**: Buoyancy compensator behavior\n\n#### Henry's Law Applications\n- **Gas Solubility**: Increased gas dissolution under pressure\n- **Nitrogen Absorption**: Tissue loading during descent\n- **Decompression Requirements**: Gas elimination during ascent\n- **Bubble Formation**: Supersaturation and decompression sickness\n\n## Respiratory System Under Pressure\n\n### Breathing Gas Density\n- **Increased Work of Breathing**: Higher gas density at depth\n- **CO2 Retention**: Reduced ventilation efficiency\n- **Performance Limitations**: Maximum sustainable work rates\n- **Equipment Design**: Regulator performance considerations\n\n### Oxygen and Carbon Dioxide Transport\n- **Oxygen Partial Pressure**: Effects on tissue oxygenation\n- **Carbon Dioxide Elimination**: Pressure effects on CO2 removal\n- **Respiratory Drive**: Hypercapnic and hypoxic responses\n- **Acid-Base Balance**: Pressure effects on pH regulation\n\n## Circulatory System Adaptations\n\n### Cardiovascular Responses\n- **Heart Rate Changes**: Bradycardia and pressure effects\n- **Blood Flow Distribution**: Centralization of circulation\n- **Blood Pressure**: Hydrostatic and physiological changes\n- **Cardiac Output**: Pressure effects on heart function\n\n### Blood Gas Transport\n- **Hemoglobin Saturation**: Oxygen carrying capacity\n- **Dissolved Gas Content**: Henry's Law applications\n- **Bubble Formation**: Intravascular gas bubbles\n- **Circulation Time**: Effects on gas elimination\n\n## Nervous System Considerations\n\n### Pressure Effects on Neural Function\n- **High-Pressure Nervous Syndrome**: Deep diving considerations\n- **Cognitive Function**: Performance under pressure\n- **Sensory Changes**: Vision, hearing, and proprioception\n- **Motor Function**: Coordination and dexterity effects\n\n### Gas Narcosis\n- **Nitrogen Narcosis**: Mechanism and effects\n- **Impairment Assessment**: Performance degradation\n- **Individual Variation**: Susceptibility factors\n- **Mitigation Strategies**: Mixed gas applications\n\n## Thermal Regulation\n\n### Heat Loss Mechanisms\n- **Conduction**: Direct thermal transfer\n- **Convection**: Water circulation effects\n- **Respiratory Heat Loss**: Breathing gas temperature\n- **Metabolic Heat Production**: Exercise and shivering\n\n### Hypothermia Prevention\n- **Thermal Protection**: Insulation requirements\n- **Active Heating**: Hot water suits and heaters\n- **Recognition and Treatment**: Hypothermia management\n- **Performance Effects**: Cold-induced impairment\n\nThis foundational knowledge is essential for understanding more advanced diving physiology concepts and safe diving practices.`,\n        estimatedMinutes: 60,\n        quiz: {\n          title: \"Diving Physiology Fundamentals\",\n          timeLimit: 25,\n          questions: [\n            {\n              prompt: \"According to Boyle's Law, what happens to lung volume when a diver descends from the surface to 33 feet?\",\n              options: [\"Volume doubles\", \"Volume halves\", \"Volume remains constant\", \"Volume triples\"],\n              correctAnswer: \"Volume halves\",\n              explanation: \"At 33 feet (2 ATA), pressure doubles and volume halves according to Boyle's Law.\"\n            },\n            {\n              prompt: \"Henry's Law explains which diving-related phenomenon?\",\n              options: [\"Lung squeeze\", \"Gas narcosis\", \"Decompression sickness\", \"Oxygen toxicity\"],\n              correctAnswer: \"Decompression sickness\",\n              explanation: \"Henry's Law governs gas solubility, explaining how inert gases dissolve under pressure and can form bubbles during decompression.\"\n            },\n            {\n              prompt: \"What is the primary cause of increased work of breathing at depth?\",\n              options: [\"Lower oxygen levels\", \"Higher gas density\", \"Increased pressure\", \"Cold water\"],\n              correctAnswer: \"Higher gas density\",\n              explanation: \"Breathing gas becomes denser at depth, increasing the work required to move gas in and out of the lungs.\"\n            },\n            {\n              prompt: \"High-Pressure Nervous Syndrome (HPNS) primarily affects which body system?\",\n              options: [\"Respiratory\", \"Circulatory\", \"Nervous\", \"Digestive\"],\n              correctAnswer: \"Nervous\",\n              explanation: \"HPNS directly affects the nervous system, causing tremors, dizziness, and cognitive impairment at extreme depths.\"\n            }\n          ]\n        }\n      }\n    ]\n  }\n};\n\nasync function populateLessonsAndQuizzes() {\n  console.log(\"Starting to populate lessons and quizzes...\");\n\n  try {\n    // Get all existing tracks\n    const existingTracks = await db.select().from(tracks);\n    console.log(`Found ${existingTracks.length} tracks in database`);\n\n    for (const track of existingTracks) {\n      const trackContent = professionalDivingContent[track.slug as keyof typeof professionalDivingContent];\n      \n      if (trackContent) {\n        console.log(`Adding content for track: ${track.title}`);\n        \n        for (const lessonData of trackContent.lessons) {\n          // Insert lesson\n          const [insertedLesson] = await db.insert(lessons).values({\n            trackId: track.id,\n            title: lessonData.title,\n            order: lessonData.order,\n            content: lessonData.content,\n            estimatedMinutes: lessonData.estimatedMinutes,\n            isRequired: true\n          }).returning();\n\n          console.log(`  Added lesson: ${lessonData.title}`);\n\n          // Insert quiz if it exists\n          if (lessonData.quiz) {\n            const [insertedQuiz] = await db.insert(quizzes).values({\n              lessonId: insertedLesson.id,\n              title: lessonData.quiz.title,\n              timeLimit: lessonData.quiz.timeLimit,\n              examType: 'QUIZ',\n              passingScore: 70,\n              maxAttempts: 3,\n              showFeedback: true\n            }).returning();\n\n            console.log(`    Added quiz: ${lessonData.quiz.title}`);\n\n            // Insert questions\n            for (let i = 0; i < lessonData.quiz.questions.length; i++) {\n              const questionData = lessonData.quiz.questions[i];\n              await db.insert(questions).values({\n                quizId: insertedQuiz.id,\n                type: 'MULTIPLE_CHOICE',\n                prompt: questionData.prompt,\n                options: questionData.options,\n                correctAnswer: questionData.correctAnswer,\n                explanation: questionData.explanation,\n                points: 1,\n                order: i + 1\n              });\n\n              console.log(`      Added question ${i + 1}`);\n            }\n          }\n        }\n      } else {\n        console.log(`No content found for track: ${track.slug}`);\n      }\n    }\n\n    console.log(\"Content population completed successfully!\");\n\n  } catch (error) {\n    console.error(\"Error populating content:\", error);\n    throw error;\n  }\n}\n\n// Execute the population function\npopulateLessonsAndQuizzes()\n  .then(() => {\n    console.log(\"Database population completed!\");\n    process.exit(0);\n  })\n  .catch((error) => {\n    console.error(\"Failed to populate database:\", error);\n    process.exit(1);\n  });","size_bytes":27938},"scripts/simple-populate.ts":{"content":"import { db } from \"../server/db\";\n\nasync function populateContent() {\n  console.log(\"Starting to populate lessons and quizzes...\");\n\n  try {\n    // Get all tracks\n    const tracksResult = await db.execute('SELECT id, slug, title FROM tracks WHERE is_published = true');\n    console.log(`Found ${tracksResult.rows.length} published tracks`);\n\n    for (const track of tracksResult.rows) {\n      console.log(`Processing track: ${track.title}`);\n      \n      if (track.slug === 'diver-medic-technician') {\n        // Add DMT lessons\n        const lessonResult = await db.execute(`\n          INSERT INTO lessons (track_id, title, \"order\", content, estimated_minutes, is_required) \n          VALUES ($1, $2, $3, $4, $5, $6) \n          RETURNING id\n        `, [\n          track.id,\n          'Introduction to Diving Medicine',\n          1,\n          `# Introduction to Diving Medicine\n\n## Overview\nThe Diver Medic Technician (DMT) program provides comprehensive medical training specifically designed for commercial diving operations. This certification is essential for maintaining safety standards in professional diving environments.\n\n## Learning Objectives\n- Understand the physiological effects of diving on the human body\n- Identify and treat diving-related medical emergencies\n- Apply proper first aid techniques in hyperbaric environments\n- Maintain medical equipment and supplies for diving operations\n\n## Medical Scope in Commercial Diving\n\n### Primary Responsibilities\n1. **Emergency Response**: First responder for diving accidents and decompression incidents\n2. **Medical Monitoring**: Continuous assessment of diver health and fitness\n3. **Equipment Management**: Maintenance of medical supplies and emergency equipment\n4. **Documentation**: Accurate record-keeping of medical incidents and treatments\n\n### Physiological Considerations\n- Pressure effects on body systems\n- Gas narcosis and oxygen toxicity\n- Decompression sickness mechanisms\n- Hypothermia and thermal protection\n\n## Legal and Regulatory Framework\n- OSHA Commercial Diving Standards (29 CFR 1910.401-441)\n- ADCI certification requirements\n- Medical documentation and reporting obligations\n- Liability and scope of practice limitations\n\nThis foundational knowledge forms the basis for all advanced DMT procedures and protocols.`,\n          45,\n          true\n        ]);\n\n        const lessonId = lessonResult.rows[0].id;\n\n        // Add quiz for DMT lesson\n        const quizResult = await db.execute(`\n          INSERT INTO quizzes (lesson_id, title, time_limit) \n          VALUES ($1, $2, $3) \n          RETURNING id\n        `, [lessonId, 'Diving Medicine Fundamentals Quiz', 20]);\n\n        const quizId = quizResult.rows[0].id;\n\n        // Add questions for DMT quiz (adapted to current schema)\n        await db.execute(`\n          INSERT INTO questions (quiz_id, prompt, a, b, c, d, answer, \"order\") \n          VALUES ($1, $2, $3, $4, $5, $6, $7, $8)\n        `, [\n          quizId,\n          'What is the primary role of a Diver Medic Technician in commercial diving operations?',\n          'Equipment maintenance',\n          'Emergency medical response',\n          'Dive planning',\n          'Surface support',\n          'b',\n          1\n        ]);\n\n        await db.execute(`\n          INSERT INTO questions (quiz_id, prompt, a, b, c, d, answer, \"order\") \n          VALUES ($1, $2, $3, $4, $5, $6, $7, $8)\n        `, [\n          quizId,\n          'Which regulatory body establishes commercial diving standards in the United States?',\n          'PADI',\n          'NAUI',\n          'OSHA',\n          'USCG',\n          'c',\n          2\n        ]);\n\n        await db.execute(`\n          INSERT INTO questions (quiz_id, prompt, a, b, c, d, answer, \"order\") \n          VALUES ($1, $2, $3, $4, $5, $6, $7, $8)\n        `, [\n          quizId,\n          'Decompression sickness primarily affects which body systems?',\n          'Respiratory only',\n          'Circulatory and nervous systems',\n          'Digestive system',\n          'Muscular system only',\n          'b',\n          3\n        ]);\n\n        console.log(`  Added lesson and quiz for DMT`);\n      }\n\n      if (track.slug === 'air-diving-life-support-technician') {\n        // Add ALST lesson\n        const lessonResult = await db.execute(`\n          INSERT INTO lessons (track_id, title, \"order\", content, estimated_minutes, is_required) \n          VALUES ($1, $2, $3, $4, $5, $6) \n          RETURNING id\n        `, [\n          track.id,\n          'Air Diving Systems Overview',\n          1,\n          `# Air Diving Systems Overview\n\n## Surface-Supplied Air Diving\n\n### System Components\n1. **Air Supply Sources**\n   - High-pressure compressors\n   - Breathing air quality standards\n   - Backup air supply systems\n   - Emergency bail-out bottles\n\n2. **Distribution Systems**\n   - Manifolds and control panels\n   - Pressure regulators and gauges\n   - Umbilical management systems\n   - Emergency gas switching valves\n\n## ALST Responsibilities\n\n### Pre-Dive Operations\n- System inspection and testing\n- Air quality verification\n- Equipment calibration\n- Safety briefings with dive team\n\n### During Dive Operations\n- Continuous monitoring of air supply pressures\n- Umbilical management and tending\n- Communication with diving supervisor\n- Emergency response readiness\n\n### Post-Dive Procedures\n- System shutdown and securing\n- Equipment maintenance and logging\n- Incident documentation\n- Preventive maintenance scheduling\n\n## Air Quality Standards\n\n### Grade E Breathing Air Requirements\n- Oxygen: 19.5-23.5%\n- Carbon monoxide: 10 ppm maximum\n- Carbon dioxide: 1000 ppm maximum\n- Condensed water: no measurement\n- Oil mist: 5 mg/m³ maximum\n\n### Testing and Monitoring\n- Daily air quality analysis\n- Compressor intake monitoring\n- Filter maintenance schedules\n- Documentation requirements\n\n## Emergency Procedures\n- Loss of primary air supply\n- Umbilical entanglement or damage\n- Compressor failure protocols\n- Diver emergency response`,\n          50,\n          true\n        ]);\n\n        const lessonId = lessonResult.rows[0].id;\n\n        // Add ALST quiz\n        const quizResult = await db.execute(`\n          INSERT INTO quizzes (lesson_id, title, time_limit) \n          VALUES ($1, $2, $3) \n          RETURNING id\n        `, [lessonId, 'Air Diving Systems Knowledge Check', 20]);\n\n        const quizId = quizResult.rows[0].id;\n\n        // Add ALST questions\n        await db.execute(`\n          INSERT INTO questions (quiz_id, prompt, a, b, c, d, answer, \"order\") \n          VALUES ($1, $2, $3, $4, $5, $6, $7, $8)\n        `, [\n          quizId,\n          'What is the maximum allowable carbon monoxide content in Grade E breathing air?',\n          '5 ppm',\n          '10 ppm',\n          '20 ppm',\n          '50 ppm',\n          'b',\n          1\n        ]);\n\n        await db.execute(`\n          INSERT INTO questions (quiz_id, prompt, a, b, c, d, answer, \"order\") \n          VALUES ($1, $2, $3, $4, $5, $6, $7, $8)\n        `, [\n          quizId,\n          'The primary responsibility of an ALST during diving operations is:',\n          'Dive planning',\n          'Air supply monitoring',\n          'Equipment repair',\n          'Diver training',\n          'b',\n          2\n        ]);\n\n        console.log(`  Added lesson and quiz for ALST`);\n      }\n\n      if (track.slug === 'life-support-technician') {\n        // Add LST lesson\n        const lessonResult = await db.execute(`\n          INSERT INTO lessons (track_id, title, \"order\", content, estimated_minutes, is_required) \n          VALUES ($1, $2, $3, $4, $5, $6) \n          RETURNING id\n        `, [\n          track.id,\n          'Life Support System Fundamentals',\n          1,\n          `# Life Support System Fundamentals\n\n## Surface-Supplied Diving Life Support\n\n### Core Functions\n1. **Gas Supply Management**\n   - Primary and secondary gas sources\n   - Gas mixing and distribution systems\n   - Pressure regulation and control\n   - Quality assurance and monitoring\n\n2. **Environmental Control**\n   - Diver heating systems\n   - Depth and pressure monitoring\n   - Communication systems\n   - Emergency response capabilities\n\n## LST Certification Requirements\n\n### Training Components\n- Gas physics and physiology\n- Life support equipment operation\n- Emergency procedures and protocols\n- System maintenance and troubleshooting\n\n### Practical Skills\n- Equipment inspection and testing\n- System startup and operation\n- Emergency response procedures\n- Maintenance and repair techniques\n\n## Equipment Systems\n\n### Gas Distribution Panels\n- Multi-diver manifold systems\n- Individual diver controls\n- Pressure monitoring and alarms\n- Emergency switching capabilities\n\n### Hot Water Systems\n- Heating unit operation\n- Temperature control and monitoring\n- Flow rate management\n- System maintenance requirements\n\n### Communication Systems\n- Hard-wire communication equipment\n- Through-water communication devices\n- Emergency signaling systems\n- Integration with dive control systems\n\n## Operational Procedures\n- Pre-dive system checks\n- Operational monitoring requirements\n- Emergency response protocols\n- Post-dive shutdown procedures\n\n## Safety Protocols\n- Redundant system design\n- Fail-safe mechanisms\n- Emergency procedures\n- Risk assessment and mitigation`,\n          45,\n          true\n        ]);\n\n        const lessonId = lessonResult.rows[0].id;\n\n        // Add LST quiz\n        const quizResult = await db.execute(`\n          INSERT INTO quizzes (lesson_id, title, time_limit) \n          VALUES ($1, $2, $3) \n          RETURNING id\n        `, [lessonId, 'Life Support Systems Evaluation', 20]);\n\n        const quizId = quizResult.rows[0].id;\n\n        // Add LST question\n        await db.execute(`\n          INSERT INTO questions (quiz_id, prompt, a, b, c, d, answer, \"order\") \n          VALUES ($1, $2, $3, $4, $5, $6, $7, $8)\n        `, [\n          quizId,\n          'What are the core functions of surface-supplied diving life support systems?',\n          'Gas supply only',\n          'Gas supply and environmental control',\n          'Communication only',\n          'Equipment storage',\n          'b',\n          1\n        ]);\n\n        console.log(`  Added lesson and quiz for LST`);\n      }\n\n      if (track.slug === 'mixed-gas-diving') {\n        // Add Mixed Gas lesson\n        const lessonResult = await db.execute(`\n          INSERT INTO lessons (track_id, title, \"order\", content, estimated_minutes, is_required) \n          VALUES ($1, $2, $3, $4, $5, $6) \n          RETURNING id\n        `, [\n          track.id,\n          'Mixed Gas Theory and Applications',\n          1,\n          `# Mixed Gas Theory and Applications\n\n## Introduction to Mixed Gas Diving\n\nMixed gas diving utilizes breathing gas mixtures other than air to extend operational depth and reduce narcotic effects. This advanced technique requires specialized knowledge of gas physics, physiology, and operational procedures.\n\n## Gas Mixing Fundamentals\n\n### Helium-Oxygen Mixtures (Heliox)\n- **Advantages**: Reduced nitrogen narcosis, improved thermal conductivity\n- **Disadvantages**: Helium cost, voice distortion, increased heat loss\n- **Applications**: Deep air equivalent diving beyond 190 fsw\n\n### Trimix (Helium-Nitrogen-Oxygen)\n- **Composition**: Variable ratios of all three gases\n- **Benefits**: Cost reduction compared to pure heliox\n- **Considerations**: Complex mixing calculations and procedures\n\n## Physiological Considerations\n\n### Nitrogen Narcosis Mitigation\n- Helium substitution for nitrogen at depth\n- Equivalent air depth (EAD) calculations\n- Performance improvements in deep diving\n\n### Oxygen Toxicity Management\n- Central nervous system (CNS) oxygen toxicity\n- Pulmonary oxygen toxicity\n- Partial pressure calculations and limits\n\n### High-Pressure Nervous Syndrome (HPNS)\n- Symptoms and onset depths\n- Nitrogen addition to mitigate HPNS\n- Compression rate considerations\n\n## Decompression Planning\n\n### Mixed Gas Tables and Algorithms\n- Helium vs. nitrogen uptake and elimination\n- Multi-tissue models for mixed gas\n- Computer algorithm considerations\n\n### Gas Switching Procedures\n- Travel gas mixtures\n- Bottom gas compositions\n- Decompression gas optimization\n- Switch depth calculations\n\n## Operational Procedures\n\n### Gas Mixing Safety\n- Contamination prevention\n- Oxygen handling procedures\n- Gas analysis and verification\n- Documentation requirements\n\n### Equipment Considerations\n- Regulator compatibility\n- Thermal protection requirements\n- Communication system effects\n- Emergency gas supplies\n\nThis comprehensive overview prepares divers for advanced mixed gas operations while emphasizing safety protocols and theoretical understanding.`,\n          75,\n          true\n        ]);\n\n        const lessonId = lessonResult.rows[0].id;\n\n        // Add Mixed Gas quiz\n        const quizResult = await db.execute(`\n          INSERT INTO quizzes (lesson_id, title, time_limit) \n          VALUES ($1, $2, $3) \n          RETURNING id\n        `, [lessonId, 'Mixed Gas Diving Competency', 30]);\n\n        const quizId = quizResult.rows[0].id;\n\n        // Add Mixed Gas questions\n        await db.execute(`\n          INSERT INTO questions (quiz_id, prompt, a, b, c, d, answer, \"order\") \n          VALUES ($1, $2, $3, $4, $5, $6, $7, $8)\n        `, [\n          quizId,\n          'What is the primary advantage of using heliox over air for deep diving?',\n          'Lower cost',\n          'Reduced nitrogen narcosis',\n          'Better taste',\n          'Easier mixing',\n          'b',\n          1\n        ]);\n\n        await db.execute(`\n          INSERT INTO questions (quiz_id, prompt, a, b, c, d, answer, \"order\") \n          VALUES ($1, $2, $3, $4, $5, $6, $7, $8)\n        `, [\n          quizId,\n          'High-Pressure Nervous Syndrome (HPNS) is typically mitigated by:',\n          'Adding oxygen',\n          'Adding nitrogen',\n          'Adding helium',\n          'Using pure oxygen',\n          'b',\n          2\n        ]);\n\n        console.log(`  Added lesson and quiz for Mixed Gas`);\n      }\n\n      if (track.slug === 'saturation-diving') {\n        // Add Saturation Diving lesson\n        const lessonResult = await db.execute(`\n          INSERT INTO lessons (track_id, title, \"order\", content, estimated_minutes, is_required) \n          VALUES ($1, $2, $3, $4, $5, $6) \n          RETURNING id\n        `, [\n          track.id,\n          'Saturation Diving Principles',\n          1,\n          `# Saturation Diving Principles\n\n## Saturation Diving Overview\n\nSaturation diving is the most advanced form of commercial diving, allowing divers to work at extreme depths for extended periods. This technique involves saturating body tissues with inert gas at working depth pressure, eliminating repetitive decompression requirements.\n\n## Fundamental Concepts\n\n### Tissue Saturation\n- **Definition**: Complete equilibration of dissolved gases in body tissues\n- **Time Requirements**: Typically 24-48 hours to achieve saturation\n- **Depth Independence**: Once saturated, decompression time remains constant regardless of additional bottom time\n\n### Operational Advantages\n- Extended bottom time without additional decompression penalty\n- Continuous work capability at operational depth\n- Reduced total project decompression time for long-duration jobs\n- Enhanced diver safety through controlled environment\n\n## Saturation System Components\n\n### Deck Decompression Chamber (DDC)\n- **Living Chambers**: Pressurized habitat for diver accommodation\n- **Entry/Exit Locks**: Transfer systems for personnel and equipment\n- **Environmental Control**: Atmosphere monitoring, heating, sanitation\n- **Emergency Systems**: Fire suppression, emergency evacuation capabilities\n\n### Personnel Transfer Capsule (PTC)\n- **Transport Function**: Safe transfer of divers to working depth\n- **Life Support**: Independent breathing gas and environmental systems\n- **Communication**: Continuous contact with dive control\n- **Emergency Capabilities**: Self-rescue and backup systems\n\n## Physiological Considerations\n\n### Long-Term Pressure Exposure\n- **Tissue Adaptation**: Physiological changes during saturation\n- **Thermal Regulation**: Body heat management in helium atmospheres\n- **Respiratory Function**: Breathing gas density effects\n- **Psychological Factors**: Isolation and confinement effects\n\n### Gas Management\n- **Breathing Gas Mixtures**: Optimized helium-oxygen compositions\n- **Atmosphere Control**: CO2 scrubbing and oxygen addition\n- **Contaminant Removal**: Trace gas and humidity control\n- **Emergency Gas Supplies**: Backup breathing systems\n\nThis advanced diving technique requires extensive training, specialized equipment, and rigorous safety procedures to ensure successful operations.`,\n          90,\n          true\n        ]);\n\n        const lessonId = lessonResult.rows[0].id;\n\n        // Add Saturation quiz\n        const quizResult = await db.execute(`\n          INSERT INTO quizzes (lesson_id, title, time_limit) \n          VALUES ($1, $2, $3) \n          RETURNING id\n        `, [lessonId, 'Saturation Diving Mastery Test', 35]);\n\n        const quizId = quizResult.rows[0].id;\n\n        // Add Saturation questions\n        await db.execute(`\n          INSERT INTO questions (quiz_id, prompt, a, b, c, d, answer, \"order\") \n          VALUES ($1, $2, $3, $4, $5, $6, $7, $8)\n        `, [\n          quizId,\n          'What is the primary advantage of saturation diving for deep commercial operations?',\n          'Lower equipment costs',\n          'Extended bottom time without decompression penalty',\n          'Simpler procedures',\n          'Reduced training requirements',\n          'b',\n          1\n        ]);\n\n        await db.execute(`\n          INSERT INTO questions (quiz_id, prompt, a, b, c, d, answer, \"order\") \n          VALUES ($1, $2, $3, $4, $5, $6, $7, $8)\n        `, [\n          quizId,\n          'How long does it typically take to achieve tissue saturation?',\n          '6-12 hours',\n          '24-48 hours',\n          '3-4 days',\n          '1 week',\n          'b',\n          2\n        ]);\n\n        console.log(`  Added lesson and quiz for Saturation Diving`);\n      }\n\n      if (track.slug === 'diving-physiology-basics') {\n        // Add Physiology lesson\n        const lessonResult = await db.execute(`\n          INSERT INTO lessons (track_id, title, \"order\", content, estimated_minutes, is_required) \n          VALUES ($1, $2, $3, $4, $5, $6) \n          RETURNING id\n        `, [\n          track.id,\n          'Human Physiology and Pressure Effects',\n          1,\n          `# Human Physiology and Pressure Effects\n\n## Introduction to Diving Physiology\n\nUnderstanding human physiology under pressure is fundamental to safe diving operations. The human body undergoes significant physiological changes when exposed to increased pressure, affecting multiple organ systems and requiring careful consideration in dive planning and execution.\n\n## Pressure and the Human Body\n\n### Atmospheric Pressure Concepts\n- **Sea Level Pressure**: 14.7 psi (1 atmosphere absolute)\n- **Pressure Increase**: 14.7 psi per 33 feet of seawater\n- **Gauge vs. Absolute Pressure**: Understanding pressure measurement systems\n- **Pressure Effects**: Direct and indirect effects on body systems\n\n### Gas Laws and Physiological Applications\n\n#### Boyle's Law Applications\n- **Lung Volume Changes**: Compression and expansion effects\n- **Air-Filled Spaces**: Mask squeeze, ear squeeze, sinus squeeze\n- **Pneumothorax Risk**: Lung overexpansion injuries\n- **Equipment Considerations**: Buoyancy compensator behavior\n\n#### Henry's Law Applications\n- **Gas Solubility**: Increased gas dissolution under pressure\n- **Nitrogen Absorption**: Tissue loading during descent\n- **Decompression Requirements**: Gas elimination during ascent\n- **Bubble Formation**: Supersaturation and decompression sickness\n\n## Respiratory System Under Pressure\n\n### Breathing Gas Density\n- **Increased Work of Breathing**: Higher gas density at depth\n- **CO2 Retention**: Reduced ventilation efficiency\n- **Performance Limitations**: Maximum sustainable work rates\n- **Equipment Design**: Regulator performance considerations\n\n### Oxygen and Carbon Dioxide Transport\n- **Oxygen Partial Pressure**: Effects on tissue oxygenation\n- **Carbon Dioxide Elimination**: Pressure effects on CO2 removal\n- **Respiratory Drive**: Hypercapnic and hypoxic responses\n- **Acid-Base Balance**: Pressure effects on pH regulation\n\n## Circulatory System Adaptations\n\n### Cardiovascular Responses\n- **Heart Rate Changes**: Bradycardia and pressure effects\n- **Blood Flow Distribution**: Centralization of circulation\n- **Blood Pressure**: Hydrostatic and physiological changes\n- **Cardiac Output**: Pressure effects on heart function\n\nThis foundational knowledge is essential for understanding more advanced diving physiology concepts and safe diving practices.`,\n          60,\n          true\n        ]);\n\n        const lessonId = lessonResult.rows[0].id;\n\n        // Add Physiology quiz\n        const quizResult = await db.execute(`\n          INSERT INTO quizzes (lesson_id, title, time_limit) \n          VALUES ($1, $2, $3) \n          RETURNING id\n        `, [lessonId, 'Diving Physiology Fundamentals', 25]);\n\n        const quizId = quizResult.rows[0].id;\n\n        // Add Physiology questions\n        await db.execute(`\n          INSERT INTO questions (quiz_id, prompt, a, b, c, d, answer, \"order\") \n          VALUES ($1, $2, $3, $4, $5, $6, $7, $8)\n        `, [\n          quizId,\n          'According to Boyle\\'s Law, what happens to lung volume when a diver descends from the surface to 33 feet?',\n          'Volume doubles',\n          'Volume halves',\n          'Volume remains constant',\n          'Volume triples',\n          'b',\n          1\n        ]);\n\n        await db.execute(`\n          INSERT INTO questions (quiz_id, prompt, a, b, c, d, answer, \"order\") \n          VALUES ($1, $2, $3, $4, $5, $6, $7, $8)\n        `, [\n          quizId,\n          'Henry\\'s Law explains which diving-related phenomenon?',\n          'Lung squeeze',\n          'Gas narcosis',\n          'Decompression sickness',\n          'Oxygen toxicity',\n          'c',\n          2\n        ]);\n\n        console.log(`  Added lesson and quiz for Diving Physiology`);\n      }\n    }\n\n    console.log(\"Content population completed successfully!\");\n\n  } catch (error) {\n    console.error(\"Error populating content:\", error);\n    throw error;\n  }\n}\n\n// Execute the population function\npopulateContent()\n  .then(() => {\n    console.log(\"Database population completed!\");\n    process.exit(0);\n  })\n  .catch((error) => {\n    console.error(\"Failed to populate database:\", error);\n    process.exit(1);\n  });","size_bytes":22616},"scripts/update-ai-tutors.ts":{"content":"import { db } from '../server/db.js';\n\nasync function updateAITutors() {\n  console.log('🤖 Updating AI Tutors with new specializations...');\n\n  // First clear the foreign key references from tracks\n  await db.execute(`UPDATE tracks SET ai_tutor_id = NULL`);\n  \n  // Delete existing AI tutors\n  await db.execute(`DELETE FROM ai_tutors`);\n\n  // Insert the new AI tutors with first names and correct specializations\n  await db.execute(`\n    INSERT INTO ai_tutors (name, specialty, description) VALUES \n    ('Sarah', 'NDT', 'Sarah - a highly trained AI expert in the field of Non Destructive Testing Underwater Inspection ready for real time Tutoring and comprehensive technical guidance'),\n    ('Mike', 'DMT', 'Mike - a highly trained AI expert in the field of Diver Medic emergency response and medical procedures ready for real time Tutoring and life-saving guidance'),\n    ('Jennifer', 'ALST', 'Jennifer - a highly trained AI expert in the field of Assistant Life Support Technician systems and operations ready for real time Tutoring and technical support'),\n    ('Robert', 'LST', 'Robert - a highly trained AI expert in the field of Life Support Technician advanced systems management ready for real time Tutoring and operational guidance'),\n    ('David', 'Commercial Dive Supervisor Training', 'David - a highly trained AI expert in the field of Commercial Dive Supervisor Training and leadership development ready for real time Tutoring and management skills'),\n    ('Lisa', 'SSED', 'Lisa - a highly trained AI expert in the field of Surface Supply Enclosed Diving (Air Diver Training) ready for real time Tutoring and safety protocols'),\n    ('Amanda', 'SAT', 'Amanda - a highly trained AI expert in the field of Saturation Diver Training and deep-sea operations ready for real time Tutoring and advanced techniques')\n  `);\n\n  // Get the AI tutor IDs\n  const aiTutorsResult = await db.execute(`SELECT id, specialty FROM ai_tutors`);\n  const aiTutors = aiTutorsResult.rows;\n\n  // Update tracks to assign appropriate AI tutors\n  const tracksResult = await db.execute(`SELECT id, slug FROM tracks`);\n  const tracks = tracksResult.rows;\n\n  // Map tracks to AI tutors based on specialization\n  for (const track of tracks) {\n    let tutorSpecialization = '';\n    \n    switch (track.slug) {\n      case 'inspection-ndt':\n        tutorSpecialization = 'NDT';\n        break;\n      case 'diver-medic-technician':\n        tutorSpecialization = 'DMT';\n        break;\n      case 'assistant-life-support-technician':\n        tutorSpecialization = 'ALST';\n        break;\n      case 'life-support-technician':\n        tutorSpecialization = 'LST';\n        break;\n      case 'commercial-dive-supervisor':\n        tutorSpecialization = 'Commercial Dive Supervisor Training';\n        break;\n      case 'air-diver-certification':\n        tutorSpecialization = 'SSED';\n        break;\n      case 'saturation-diver-training':\n        tutorSpecialization = 'SAT';\n        break;\n    }\n\n    const aiTutor = aiTutors.find(t => t.specialty === tutorSpecialization);\n    if (aiTutor) {\n      await db.execute(`UPDATE tracks SET ai_tutor_id = '${aiTutor.id}' WHERE id = '${track.id}'`);\n      console.log(`✓ Assigned ${tutorSpecialization} tutor to ${track.slug}`);\n    }\n  }\n\n  console.log('✅ AI Tutors updated successfully!');\n}\n\nupdateAITutors().catch(console.error);","size_bytes":3350},"server/ai-learning-path.ts":{"content":"import OpenAI from \"openai\";\n\nif (!process.env.OPENAI_API_KEY) {\n  throw new Error(\"OPENAI_API_KEY environment variable must be set\");\n}\n\n// the newest OpenAI model is \"gpt-5\" which was released August 7, 2025. do not change this unless explicitly requested by the user\nconst openai = new OpenAI({ apiKey: process.env.OPENAI_API_KEY });\n\ninterface UserProfile {\n  experience: string;\n  goals: string[];\n  timeCommitment: string;\n  certifications: string[];\n  interests: string[];\n}\n\ninterface TrackInfo {\n  id: string;\n  title: string;\n  slug: string;\n  summary: string;\n  difficulty: string;\n  prerequisites: string[];\n  specialization: string;\n}\n\ninterface LearningPathSuggestion {\n  id: string;\n  title: string;\n  description: string;\n  difficulty: string;\n  estimatedWeeks: number;\n  tracks: Array<{\n    id: string;\n    title: string;\n    slug: string;\n    order: number;\n    reason: string;\n  }>;\n  confidence: number;\n  reasoning: string;\n}\n\nexport class AILearningPathService {\n  private availableTracks: TrackInfo[] = [\n    {\n      id: \"1\",\n      title: \"Air Diving Life Support Technician (ALST)\",\n      slug: \"air-diving-life-support-technician\",\n      summary: \"Foundation course for air diving support operations and safety systems\",\n      difficulty: \"Beginner\",\n      prerequisites: [],\n      specialization: \"ALST\"\n    },\n    {\n      id: \"2\", \n      title: \"Life Support Technician (LST)\",\n      slug: \"life-support-technician\",\n      summary: \"Advanced life support systems for commercial diving operations\",\n      difficulty: \"Intermediate\",\n      prerequisites: [\"ALST\"],\n      specialization: \"LST\"\n    },\n    {\n      id: \"3\",\n      title: \"Diver Medic Technician (DMT)\",\n      slug: \"diver-medic-technician\", \n      summary: \"Emergency medical training for diving operations and hyperbaric medicine\",\n      difficulty: \"Advanced\",\n      prerequisites: [\"ALST\"],\n      specialization: \"DMT\"\n    },\n    {\n      id: \"4\",\n      title: \"Non Destructive Testing Underwater Inspection (NDT)\",\n      slug: \"non-destructive-testing-underwater-inspection\",\n      summary: \"Specialized underwater inspection techniques and equipment certification\",\n      difficulty: \"Advanced\", \n      prerequisites: [\"ALST\", \"Commercial Experience\"],\n      specialization: \"NDT\"\n    },\n    {\n      id: \"5\",\n      title: \"Commercial Dive Supervisor Training\",\n      slug: \"commercial-dive-supervisor-training\",\n      summary: \"Leadership and management training for commercial diving operations\",\n      difficulty: \"Expert\",\n      prerequisites: [\"LST\", \"DMT\", \"Experience\"],\n      specialization: \"Commercial Dive Supervisor\"\n    },\n    {\n      id: \"6\",\n      title: \"Surface Supply Enclosed Diving (SSED)\",\n      slug: \"surface-supply-enclosed-diving\",\n      summary: \"Specialized training for surface-supplied diving in enclosed environments\", \n      difficulty: \"Intermediate\",\n      prerequisites: [\"ALST\"],\n      specialization: \"SSED\"\n    },\n    {\n      id: \"7\",\n      title: \"Saturation Diver Training (SAT)\",\n      slug: \"saturation-diver-training\",\n      summary: \"Advanced saturation diving techniques for deep water operations\",\n      difficulty: \"Expert\", \n      prerequisites: [\"LST\", \"SSED\", \"Commercial Experience\"],\n      specialization: \"SAT\"\n    }\n  ];\n\n  async generateLearningPath(\n    userProfile: UserProfile,\n    additionalInfo?: string\n  ): Promise<LearningPathSuggestion[]> {\n    try {\n      const prompt = this.buildAnalysisPrompt(userProfile, additionalInfo);\n      \n      const response = await openai.chat.completions.create({\n        model: \"gpt-5\", // the newest OpenAI model is \"gpt-5\" which was released August 7, 2025. do not change this unless explicitly requested by the user\n        messages: [\n          {\n            role: \"system\",\n            content: `You are an expert diving training advisor with 30+ years of experience in commercial diving education. You specialize in creating personalized learning paths for professional divers based on industry standards (IMCA, ADCI, etc.).\n\nYour task is to analyze user profiles and recommend optimal learning sequences from available diving training tracks. Always prioritize safety, industry standards, and career progression logic.\n\nRespond with a JSON array containing 2-3 learning path suggestions, each with this structure:\n{\n  \"id\": \"path-1\",\n  \"title\": \"Career-focused title\", \n  \"description\": \"Brief description of the path\",\n  \"difficulty\": \"Beginner|Intermediate|Advanced|Expert\",\n  \"estimatedWeeks\": number,\n  \"tracks\": [\n    {\n      \"id\": \"track-id\",\n      \"title\": \"Track Title\",\n      \"slug\": \"track-slug\", \n      \"order\": 1,\n      \"reason\": \"Why this track at this position\"\n    }\n  ],\n  \"confidence\": 85,\n  \"reasoning\": \"Detailed explanation of why this path suits the user\"\n}`\n          },\n          {\n            role: \"user\",\n            content: prompt\n          }\n        ],\n        response_format: { type: \"json_object\" },\n        temperature: 0.7,\n        max_tokens: 2000\n      });\n\n      const result = JSON.parse(response.choices[0].message.content || \"{}\");\n      \n      if (result.suggestions && Array.isArray(result.suggestions)) {\n        return result.suggestions;\n      } else if (Array.isArray(result)) {\n        return result;\n      } else {\n        // Fallback to create a single suggestion\n        return [this.createFallbackSuggestion(userProfile)];\n      }\n    } catch (error) {\n      console.error(\"AI Learning Path Generation Error:\", error);\n      throw new Error(\"Failed to generate AI learning path suggestions\");\n    }\n  }\n\n  private buildAnalysisPrompt(userProfile: UserProfile, additionalInfo?: string): string {\n    const tracksDescription = this.availableTracks.map(track => \n      `${track.title} (${track.slug}): ${track.summary} - Difficulty: ${track.difficulty}, Prerequisites: [${track.prerequisites.join(\", \") || \"None\"}]`\n    ).join(\"\\n\");\n\n    return `\nAnalyze this diving professional's profile and create personalized learning path recommendations:\n\nUSER PROFILE:\n- Experience Level: ${userProfile.experience}\n- Career Goals: ${userProfile.goals.join(\", \")}\n- Time Commitment: ${userProfile.timeCommitment}\n- Current Certifications: ${userProfile.certifications.join(\", \") || \"None\"}\n- Areas of Interest: ${userProfile.interests.join(\", \") || \"None\"}\n${additionalInfo ? `- Additional Information: ${additionalInfo}` : \"\"}\n\nAVAILABLE TRAINING TRACKS:\n${tracksDescription}\n\nREQUIREMENTS:\n1. Create 2-3 different learning path options\n2. Ensure logical prerequisite progression (ALST before LST, etc.)\n3. Match tracks to user's goals and experience level\n4. Consider time commitment for realistic timelines\n5. Provide clear reasoning for each recommendation\n6. Use industry-standard progression paths\n7. Include confidence scores (70-95% realistic range)\n\nFocus on career advancement, safety certification requirements, and industry demand for the specializations.\n`;\n  }\n\n  private createFallbackSuggestion(userProfile: UserProfile): LearningPathSuggestion {\n    // Create a basic learning path as fallback\n    const isBeginnerLevel = userProfile.experience.toLowerCase().includes(\"beginner\") || \n                           userProfile.experience.toLowerCase().includes(\"new\");\n    \n    if (isBeginnerLevel) {\n      return {\n        id: \"beginner-path\",\n        title: \"Foundation Commercial Diving Path\",\n        description: \"Start your commercial diving career with essential certifications\",\n        difficulty: \"Beginner\",\n        estimatedWeeks: 12,\n        tracks: [\n          {\n            id: \"1\",\n            title: \"Air Diving Life Support Technician (ALST)\",\n            slug: \"air-diving-life-support-technician\",\n            order: 1,\n            reason: \"Essential foundation for all commercial diving operations\"\n          }\n        ],\n        confidence: 85,\n        reasoning: \"As a beginner, starting with ALST provides the fundamental knowledge and certification required for entry into commercial diving.\"\n      };\n    }\n\n    return {\n      id: \"intermediate-path\",\n      title: \"Professional Development Path\",\n      description: \"Advance your diving career with specialized certifications\",\n      difficulty: \"Intermediate\", \n      estimatedWeeks: 20,\n      tracks: [\n        {\n          id: \"2\",\n          title: \"Life Support Technician (LST)\",\n          slug: \"life-support-technician\",\n          order: 1,\n          reason: \"Advanced life support skills for complex operations\"\n        },\n        {\n          id: \"3\", \n          title: \"Diver Medic Technician (DMT)\",\n          slug: \"diver-medic-technician\",\n          order: 2,\n          reason: \"Medical emergency response capabilities\"\n        }\n      ],\n      confidence: 80,\n      reasoning: \"Building on your experience, these certifications will enhance your value and safety capabilities in commercial diving operations.\"\n    };\n  }\n}","size_bytes":8857},"client/src/pages/learning-path.tsx":{"content":"import { useState } from \"react\";\nimport { useQuery, useMutation } from \"@tanstack/react-query\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\n// Progress component not needed for this implementation\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Label } from \"@/components/ui/label\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Brain, Target, Clock, TrendingUp, ChevronRight, Lightbulb, Users, Award } from \"lucide-react\";\nimport { useLocation } from \"wouter\";\nimport Navigation from \"@/components/navigation\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { useToast } from \"@/hooks/use-toast\";\n\ninterface LearningPathSuggestion {\n  id: string;\n  title: string;\n  description: string;\n  difficulty: string;\n  estimatedWeeks: number;\n  tracks: Array<{\n    id: string;\n    title: string;\n    slug: string;\n    order: number;\n    reason: string;\n  }>;\n  confidence: number;\n  reasoning: string;\n}\n\ninterface UserProfile {\n  experience: string;\n  goals: string[];\n  timeCommitment: string;\n  certifications: string[];\n  interests: string[];\n}\n\nexport default function LearningPath() {\n  const [, setLocation] = useLocation();\n  const { toast } = useToast();\n  const [userProfile, setUserProfile] = useState<UserProfile>({\n    experience: '',\n    goals: [],\n    timeCommitment: '',\n    certifications: [],\n    interests: []\n  });\n  const [additionalInfo, setAdditionalInfo] = useState('');\n  const [showSuggestions, setShowSuggestions] = useState(false);\n\n  const { data: suggestions, isLoading: suggestionsLoading } = useQuery<LearningPathSuggestion[]>({\n    queryKey: [\"/api/learning-path/suggestions\", userProfile],\n    enabled: showSuggestions,\n  });\n\n  const generateSuggestionsMutation = useMutation({\n    mutationFn: async () => {\n      return await apiRequest(\"/api/learning-path/generate\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          profile: userProfile,\n          additionalInfo\n        })\n      });\n    },\n    onSuccess: () => {\n      setShowSuggestions(true);\n      toast({\n        title: \"AI Analysis Complete\",\n        description: \"Your personalized learning path has been generated based on your profile.\",\n      });\n    },\n    onError: (error) => {\n      toast({\n        title: \"Generation Failed\",\n        description: \"Unable to generate learning path suggestions. Please try again.\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const handleGoalToggle = (goal: string) => {\n    setUserProfile(prev => ({\n      ...prev,\n      goals: prev.goals.includes(goal) \n        ? prev.goals.filter(g => g !== goal)\n        : [...prev.goals, goal]\n    }));\n  };\n\n  const handleCertificationToggle = (cert: string) => {\n    setUserProfile(prev => ({\n      ...prev,\n      certifications: prev.certifications.includes(cert)\n        ? prev.certifications.filter(c => c !== cert)\n        : [...prev.certifications, cert]\n    }));\n  };\n\n  const handleInterestToggle = (interest: string) => {\n    setUserProfile(prev => ({\n      ...prev,\n      interests: prev.interests.includes(interest)\n        ? prev.interests.filter(i => i !== interest)\n        : [...prev.interests, interest]\n    }));\n  };\n\n  const generateSuggestions = () => {\n    if (!userProfile.experience || userProfile.goals.length === 0) {\n      toast({\n        title: \"Profile Incomplete\",\n        description: \"Please provide your experience level and select at least one goal.\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n    generateSuggestionsMutation.mutate();\n  };\n\n  const experienceOptions = [\n    \"Beginner - New to diving\",\n    \"Recreational - Basic diving experience\",\n    \"Advanced - Some commercial diving experience\", \n    \"Professional - Experienced commercial diver\",\n    \"Expert - Senior professional with certifications\"\n  ];\n\n  const goalOptions = [\n    \"Commercial Diving Career\",\n    \"Underwater Inspection\",\n    \"Diving Medicine & Safety\",\n    \"Life Support Systems\",\n    \"Dive Supervision & Management\",\n    \"Saturation Diving\",\n    \"Offshore Operations\",\n    \"Career Advancement\"\n  ];\n\n  const certificationOptions = [\n    \"ADCI Commercial Diver\",\n    \"IMCA Surface Supplied Diver\",\n    \"PADI/NAUI Recreational\",\n    \"Scientific Diving\",\n    \"Public Safety Diving\",\n    \"Military Diving\",\n    \"Hyperbaric Medicine\",\n    \"NDT Certifications\"\n  ];\n\n  const interestOptions = [\n    \"Underwater Welding\",\n    \"Hull Inspection\",\n    \"Pipeline Work\",\n    \"Offshore Platforms\",\n    \"Marine Biology\",\n    \"Salvage Operations\",\n    \"Emergency Response\",\n    \"Technical Innovation\"\n  ];\n\n  const timeOptions = [\n    \"1-2 hours per week\",\n    \"3-5 hours per week\", \n    \"6-10 hours per week\",\n    \"11-15 hours per week\",\n    \"16+ hours per week\"\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-white to-slate-50\">\n      <Navigation />\n      \n      <main className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        {/* Header */}\n        <div className=\"text-center mb-12\">\n          <div className=\"flex items-center justify-center mb-4\">\n            <Brain className=\"w-12 h-12 text-blue-600 mr-3\" />\n            <h1 className=\"text-4xl font-bold text-slate-900\">AI Learning Path</h1>\n          </div>\n          <p className=\"text-xl text-slate-600 max-w-3xl mx-auto\">\n            Get personalized training recommendations powered by AI. Our system analyzes your experience, \n            goals, and interests to create the optimal learning journey for your diving career.\n          </p>\n        </div>\n\n        {!showSuggestions ? (\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n            {/* Profile Setup Form */}\n            <div className=\"space-y-6\">\n              <Card>\n                <CardHeader>\n                  <CardTitle className=\"flex items-center\">\n                    <Target className=\"w-5 h-5 mr-2 text-blue-600\" />\n                    Your Profile\n                  </CardTitle>\n                  <CardDescription>\n                    Tell us about your diving background and goals\n                  </CardDescription>\n                </CardHeader>\n                <CardContent className=\"space-y-6\">\n                  {/* Experience Level */}\n                  <div>\n                    <Label htmlFor=\"experience\" className=\"text-sm font-medium text-slate-700\">\n                      Experience Level *\n                    </Label>\n                    <Select value={userProfile.experience} onValueChange={(value) => \n                      setUserProfile(prev => ({...prev, experience: value}))\n                    }>\n                      <SelectTrigger className=\"mt-1\" data-testid=\"select-experience\">\n                        <SelectValue placeholder=\"Select your experience level\" />\n                      </SelectTrigger>\n                      <SelectContent>\n                        {experienceOptions.map((option) => (\n                          <SelectItem key={option} value={option}>{option}</SelectItem>\n                        ))}\n                      </SelectContent>\n                    </Select>\n                  </div>\n\n                  {/* Goals */}\n                  <div>\n                    <Label className=\"text-sm font-medium text-slate-700 mb-3 block\">\n                      Career Goals * (Select all that apply)\n                    </Label>\n                    <div className=\"grid grid-cols-2 gap-2\">\n                      {goalOptions.map((goal) => (\n                        <Badge\n                          key={goal}\n                          variant={userProfile.goals.includes(goal) ? \"default\" : \"outline\"}\n                          className=\"cursor-pointer text-center py-2 hover:bg-blue-100\"\n                          onClick={() => handleGoalToggle(goal)}\n                          data-testid={`badge-goal-${goal.toLowerCase().replace(/\\s+/g, '-')}`}\n                        >\n                          {goal}\n                        </Badge>\n                      ))}\n                    </div>\n                  </div>\n\n                  {/* Time Commitment */}\n                  <div>\n                    <Label htmlFor=\"time\" className=\"text-sm font-medium text-slate-700\">\n                      Time Commitment\n                    </Label>\n                    <Select value={userProfile.timeCommitment} onValueChange={(value) => \n                      setUserProfile(prev => ({...prev, timeCommitment: value}))\n                    }>\n                      <SelectTrigger className=\"mt-1\" data-testid=\"select-time\">\n                        <SelectValue placeholder=\"How much time can you dedicate?\" />\n                      </SelectTrigger>\n                      <SelectContent>\n                        {timeOptions.map((option) => (\n                          <SelectItem key={option} value={option}>{option}</SelectItem>\n                        ))}\n                      </SelectContent>\n                    </Select>\n                  </div>\n                </CardContent>\n              </Card>\n\n              <Card>\n                <CardHeader>\n                  <CardTitle className=\"flex items-center\">\n                    <Award className=\"w-5 h-5 mr-2 text-green-600\" />\n                    Additional Information\n                  </CardTitle>\n                </CardHeader>\n                <CardContent className=\"space-y-6\">\n                  {/* Current Certifications */}\n                  <div>\n                    <Label className=\"text-sm font-medium text-slate-700 mb-3 block\">\n                      Current Certifications\n                    </Label>\n                    <div className=\"grid grid-cols-1 gap-2\">\n                      {certificationOptions.map((cert) => (\n                        <Badge\n                          key={cert}\n                          variant={userProfile.certifications.includes(cert) ? \"default\" : \"outline\"}\n                          className=\"cursor-pointer text-center py-2 hover:bg-green-100\"\n                          onClick={() => handleCertificationToggle(cert)}\n                          data-testid={`badge-cert-${cert.toLowerCase().replace(/\\s+/g, '-')}`}\n                        >\n                          {cert}\n                        </Badge>\n                      ))}\n                    </div>\n                  </div>\n\n                  {/* Areas of Interest */}\n                  <div>\n                    <Label className=\"text-sm font-medium text-slate-700 mb-3 block\">\n                      Areas of Interest\n                    </Label>\n                    <div className=\"grid grid-cols-2 gap-2\">\n                      {interestOptions.map((interest) => (\n                        <Badge\n                          key={interest}\n                          variant={userProfile.interests.includes(interest) ? \"default\" : \"outline\"}\n                          className=\"cursor-pointer text-center py-2 hover:bg-purple-100\"\n                          onClick={() => handleInterestToggle(interest)}\n                          data-testid={`badge-interest-${interest.toLowerCase().replace(/\\s+/g, '-')}`}\n                        >\n                          {interest}\n                        </Badge>\n                      ))}\n                    </div>\n                  </div>\n\n                  {/* Additional Information */}\n                  <div>\n                    <Label htmlFor=\"additional\" className=\"text-sm font-medium text-slate-700\">\n                      Additional Information\n                    </Label>\n                    <Textarea\n                      id=\"additional\"\n                      placeholder=\"Tell us about your specific goals, challenges, or any other relevant information...\"\n                      value={additionalInfo}\n                      onChange={(e) => setAdditionalInfo(e.target.value)}\n                      className=\"mt-1\"\n                      rows={4}\n                      data-testid=\"textarea-additional\"\n                    />\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n\n            {/* AI Analysis Preview */}\n            <div className=\"space-y-6\">\n              <Card className=\"bg-gradient-to-br from-blue-50 to-indigo-50 border-blue-200\">\n                <CardHeader>\n                  <CardTitle className=\"flex items-center text-blue-900\">\n                    <Brain className=\"w-5 h-5 mr-2\" />\n                    AI Analysis Preview\n                  </CardTitle>\n                  <CardDescription className=\"text-blue-700\">\n                    How our AI creates your personalized learning path\n                  </CardDescription>\n                </CardHeader>\n                <CardContent className=\"space-y-4\">\n                  <div className=\"flex items-start\">\n                    <div className=\"w-8 h-8 bg-blue-100 rounded-full flex items-center justify-center mr-3 mt-1\">\n                      <span className=\"text-blue-600 font-semibold text-sm\">1</span>\n                    </div>\n                    <div>\n                      <h4 className=\"font-medium text-blue-900\">Profile Analysis</h4>\n                      <p className=\"text-sm text-blue-700\">\n                        Analyzes your experience level, certifications, and career goals\n                      </p>\n                    </div>\n                  </div>\n                  \n                  <div className=\"flex items-start\">\n                    <div className=\"w-8 h-8 bg-blue-100 rounded-full flex items-center justify-center mr-3 mt-1\">\n                      <span className=\"text-blue-600 font-semibold text-sm\">2</span>\n                    </div>\n                    <div>\n                      <h4 className=\"font-medium text-blue-900\">Track Matching</h4>\n                      <p className=\"text-sm text-blue-700\">\n                        Matches you with relevant training tracks based on industry standards\n                      </p>\n                    </div>\n                  </div>\n                  \n                  <div className=\"flex items-start\">\n                    <div className=\"w-8 h-8 bg-blue-100 rounded-full flex items-center justify-center mr-3 mt-1\">\n                      <span className=\"text-blue-600 font-semibold text-sm\">3</span>\n                    </div>\n                    <div>\n                      <h4 className=\"font-medium text-blue-900\">Optimal Sequencing</h4>\n                      <p className=\"text-sm text-blue-700\">\n                        Creates the best learning order based on prerequisites and difficulty\n                      </p>\n                    </div>\n                  </div>\n                  \n                  <div className=\"flex items-start\">\n                    <div className=\"w-8 h-8 bg-blue-100 rounded-full flex items-center justify-center mr-3 mt-1\">\n                      <span className=\"text-blue-600 font-semibold text-sm\">4</span>\n                    </div>\n                    <div>\n                      <h4 className=\"font-medium text-blue-900\">Personalized Recommendations</h4>\n                      <p className=\"text-sm text-blue-700\">\n                        Provides detailed reasoning and timeline for your learning journey\n                      </p>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n\n              <Card>\n                <CardContent className=\"pt-6\">\n                  <Button \n                    onClick={generateSuggestions}\n                    disabled={generateSuggestionsMutation.isPending}\n                    className=\"w-full bg-blue-600 hover:bg-blue-700\"\n                    size=\"lg\"\n                    data-testid=\"button-generate\"\n                  >\n                    {generateSuggestionsMutation.isPending ? (\n                      <>\n                        <Brain className=\"w-5 h-5 mr-2 animate-pulse\" />\n                        AI Analyzing Your Profile...\n                      </>\n                    ) : (\n                      <>\n                        <Lightbulb className=\"w-5 h-5 mr-2\" />\n                        Generate My Learning Path\n                      </>\n                    )}\n                  </Button>\n                </CardContent>\n              </Card>\n            </div>\n          </div>\n        ) : (\n          <div className=\"space-y-8\">\n            {/* Back Button */}\n            <Button \n              variant=\"outline\" \n              onClick={() => setShowSuggestions(false)}\n              className=\"mb-6\"\n              data-testid=\"button-back\"\n            >\n              ← Modify Profile\n            </Button>\n\n            {/* AI Suggestions */}\n            {suggestionsLoading ? (\n              <div className=\"grid grid-cols-1 gap-6\">\n                {[1, 2, 3].map((i) => (\n                  <Card key={i} className=\"animate-pulse\">\n                    <CardContent className=\"p-6\">\n                      <div className=\"h-6 bg-gray-200 rounded w-3/4 mb-4\"></div>\n                      <div className=\"h-4 bg-gray-200 rounded w-full mb-2\"></div>\n                      <div className=\"h-4 bg-gray-200 rounded w-2/3\"></div>\n                    </CardContent>\n                  </Card>\n                ))}\n              </div>\n            ) : (\n              <div className=\"space-y-6\">\n                {suggestions?.map((suggestion, index) => (\n                  <Card key={suggestion.id} className=\"hover:shadow-lg transition-shadow duration-200\">\n                    <CardHeader>\n                      <div className=\"flex items-center justify-between\">\n                        <div className=\"flex items-center\">\n                          <Badge className=\"bg-blue-100 text-blue-800 mr-3\">\n                            Path {index + 1}\n                          </Badge>\n                          <div>\n                            <CardTitle className=\"text-xl\">{suggestion.title}</CardTitle>\n                            <CardDescription className=\"mt-1\">{suggestion.description}</CardDescription>\n                          </div>\n                        </div>\n                        <div className=\"text-right\">\n                          <div className=\"text-lg font-semibold text-blue-600\">{suggestion.confidence}% Match</div>\n                          <div className=\"text-sm text-slate-500\">{suggestion.estimatedWeeks} weeks</div>\n                        </div>\n                      </div>\n                    </CardHeader>\n                    \n                    <CardContent>\n                      <div className=\"space-y-6\">\n                        {/* AI Reasoning */}\n                        <div className=\"bg-gradient-to-r from-blue-50 to-indigo-50 p-4 rounded-lg border border-blue-200\">\n                          <h4 className=\"font-medium text-blue-900 mb-2 flex items-center\">\n                            <Brain className=\"w-4 h-4 mr-2\" />\n                            AI Analysis\n                          </h4>\n                          <p className=\"text-blue-800 text-sm\">{suggestion.reasoning}</p>\n                        </div>\n\n                        {/* Learning Tracks */}\n                        <div>\n                          <h4 className=\"font-medium text-slate-900 mb-3\">Recommended Learning Sequence</h4>\n                          <div className=\"space-y-3\">\n                            {suggestion.tracks.map((track, trackIndex) => (\n                              <div key={track.id} className=\"flex items-center p-3 bg-white border border-gray-200 rounded-lg hover:bg-gray-50\">\n                                <div className=\"w-8 h-8 bg-blue-100 rounded-full flex items-center justify-center mr-3\">\n                                  <span className=\"text-blue-600 font-semibold text-sm\">{track.order}</span>\n                                </div>\n                                <div className=\"flex-1\">\n                                  <h5 className=\"font-medium text-slate-900\">{track.title}</h5>\n                                  <p className=\"text-sm text-slate-600\">{track.reason}</p>\n                                </div>\n                                <Button\n                                  variant=\"outline\"\n                                  size=\"sm\"\n                                  onClick={() => setLocation(`/tracks/${track.slug}`)}\n                                  data-testid={`button-start-${track.slug}`}\n                                >\n                                  Start Track\n                                  <ChevronRight className=\"w-4 h-4 ml-1\" />\n                                </Button>\n                              </div>\n                            ))}\n                          </div>\n                        </div>\n\n                        {/* Action Buttons */}\n                        <div className=\"flex gap-3 pt-4 border-t border-gray-200\">\n                          <Button \n                            className=\"flex-1 bg-blue-600 hover:bg-blue-700\"\n                            onClick={() => {\n                              const firstTrack = suggestion.tracks[0];\n                              if (firstTrack) {\n                                setLocation(`/tracks/${firstTrack.slug}`);\n                              }\n                            }}\n                            data-testid={`button-start-path-${index}`}\n                          >\n                            <TrendingUp className=\"w-4 h-4 mr-2\" />\n                            Start This Path\n                          </Button>\n                          <Button variant=\"outline\" data-testid={`button-save-path-${index}`}>\n                            Save for Later\n                          </Button>\n                        </div>\n                      </div>\n                    </CardContent>\n                  </Card>\n                ))}\n              </div>\n            )}\n          </div>\n        )}\n      </main>\n    </div>\n  );\n}","size_bytes":22093},"client/src/pages/exam-interface.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { useRoute } from \"wouter\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Progress } from \"@/components/ui/progress\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Timer, Mic, MicOff, Volume2, ChevronLeft, ChevronRight, Clock, Brain, FileText } from \"lucide-react\";\nimport Navigation from \"@/components/navigation\";\n\ninterface ExamQuestion {\n  id: string;\n  type: 'MULTIPLE_CHOICE' | 'WRITTEN' | 'TRUE_FALSE';\n  prompt: string;\n  options?: string[];\n  correctAnswer?: string;\n  explanation?: string;\n  points: number;\n  order: number;\n}\n\n// Sample professional diving exam questions\nconst sampleQuestions: ExamQuestion[] = [\n  {\n    id: \"1\",\n    type: \"MULTIPLE_CHOICE\",\n    prompt: \"In professional commercial underwater inspection operations, what is the primary advantage of systematic grid pattern inspection methodology for ensuring comprehensive coverage and quality assurance?\",\n    options: [\n      \"Reduces total inspection time and operational costs significantly while maintaining basic coverage\",\n      \"Ensures complete systematic coverage with quality assurance verification and eliminates missed critical structural areas\",\n      \"Minimizes specialized lighting and equipment requirements for standard operations\",\n      \"Reduces diver physical exertion and gas consumption rates during extended work periods\"\n    ],\n    correctAnswer: \"Ensures complete systematic coverage with quality assurance verification and eliminates missed critical structural areas\",\n    explanation: \"Systematic grid pattern methodology ensures no areas are missed during inspection, provides quality assurance verification, and is critical for structural integrity assessment in commercial diving operations.\",\n    points: 3,\n    order: 1\n  },\n  {\n    id: \"2\",\n    type: \"WRITTEN\",\n    prompt: \"Describe the complete ABCDE emergency assessment protocol for diving emergencies. Include the specific clinical focus of each component and explain how this systematic approach improves patient outcomes in underwater emergency situations. Provide specific examples of assessment techniques for each component.\",\n    points: 5,\n    order: 2\n  },\n  {\n    id: \"3\",\n    type: \"MULTIPLE_CHOICE\",\n    prompt: \"Which corrosion type is most commonly associated with dissimilar metal connections in marine environments and requires electrochemical galvanic series analysis for proper assessment?\",\n    options: [\n      \"General uniform corrosion across large surface areas of marine structures\",\n      \"Localized pitting corrosion with high depth-to-diameter ratios and irregular patterns\",\n      \"Galvanic corrosion with preferential anode attack at connection points and metal interfaces\",\n      \"Crevice corrosion in confined joint spaces and under marine growth deposits\"\n    ],\n    correctAnswer: \"Galvanic corrosion with preferential anode attack at connection points and metal interfaces\",\n    explanation: \"Galvanic corrosion occurs when dissimilar metals are in electrical contact in seawater, creating a galvanic cell where the more anodic metal corrodes preferentially at connection points.\",\n    points: 2,\n    order: 3\n  },\n  {\n    id: \"4\",\n    type: \"TRUE_FALSE\",\n    prompt: \"According to NACE industry standards for cathodic protection, the minimum protection potential for steel structures in seawater using Silver/Silver Chloride reference electrode is -750 mV with polarization verification.\",\n    options: [\"True\", \"False\"],\n    correctAnswer: \"False\",\n    explanation: \"The minimum cathodic protection potential for steel in seawater is -850 mV (Ag/AgCl) with instant-off potential measurement, not -750 mV.\",\n    points: 2,\n    order: 4\n  },\n  {\n    id: \"5\",\n    type: \"WRITTEN\",\n    prompt: \"Analyze the safety considerations and operational procedures for saturation diving operations at depths exceeding 150 meters. Include discussion of decompression management, life support systems, emergency protocols, and the physiological challenges faced by divers during extended saturation exposures.\",\n    points: 8,\n    order: 5\n  }\n];\n\nexport default function ExamInterface() {\n  const [match, params] = useRoute(\"/exams/:slug/start\");\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [answers, setAnswers] = useState<Record<string, string>>({});\n  const [timeRemaining, setTimeRemaining] = useState(7200); // 2 hours in seconds\n  const [isRecording, setIsRecording] = useState(false);\n  const [showExplanations, setShowExplanations] = useState(false);\n  const [examSubmitted, setExamSubmitted] = useState(false);\n\n  const currentQuestion = sampleQuestions[currentQuestionIndex];\n  const totalQuestions = sampleQuestions.length;\n  const progressPercentage = ((currentQuestionIndex + 1) / totalQuestions) * 100;\n\n  // Timer countdown\n  useEffect(() => {\n    if (timeRemaining > 0 && !examSubmitted) {\n      const timer = setTimeout(() => setTimeRemaining(timeRemaining - 1), 1000);\n      return () => clearTimeout(timer);\n    } else if (timeRemaining === 0) {\n      handleSubmitExam();\n    }\n  }, [timeRemaining, examSubmitted]);\n\n  const formatTime = (seconds: number) => {\n    const hours = Math.floor(seconds / 3600);\n    const minutes = Math.floor((seconds % 3600) / 60);\n    const secs = seconds % 60;\n    return `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  const handleAnswerChange = (value: string) => {\n    setAnswers(prev => ({\n      ...prev,\n      [currentQuestion.id]: value\n    }));\n  };\n\n  const handleNextQuestion = () => {\n    if (currentQuestionIndex < totalQuestions - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    }\n  };\n\n  const handlePreviousQuestion = () => {\n    if (currentQuestionIndex > 0) {\n      setCurrentQuestionIndex(currentQuestionIndex - 1);\n    }\n  };\n\n  const toggleRecording = () => {\n    setIsRecording(!isRecording);\n    // Voice recording logic would go here\n  };\n\n  const handleSubmitExam = () => {\n    setExamSubmitted(true);\n    setShowExplanations(true);\n  };\n\n  const getQuestionTypeIcon = (type: string) => {\n    switch (type) {\n      case 'MULTIPLE_CHOICE': return <FileText className=\"w-4 h-4\" />;\n      case 'WRITTEN': return <Mic className=\"w-4 h-4\" />;\n      case 'TRUE_FALSE': return <FileText className=\"w-4 h-4\" />;\n      default: return <FileText className=\"w-4 h-4\" />;\n    }\n  };\n\n  const answeredQuestions = Object.keys(answers).length;\n  const timeIsLow = timeRemaining < 600; // Less than 10 minutes\n\n  if (!match) return null;\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <Navigation />\n      \n      <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        {/* Exam Header */}\n        <div className=\"mb-6\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <div>\n              <h1 className=\"text-2xl font-bold text-slate-900\" data-testid=\"text-exam-title\">\n                NDT Inspection Practice Test\n              </h1>\n              <p className=\"text-slate-600\">Prepare for Commercial Diving Certification Exams</p>\n            </div>\n            <div className={`flex items-center space-x-2 px-4 py-2 rounded-lg font-mono text-lg font-bold ${\n              timeIsLow ? 'bg-red-100 text-red-700' : 'bg-blue-100 text-blue-700'\n            }`}>\n              <Clock className=\"w-5 h-5\" />\n              <span data-testid=\"text-time-remaining\">{formatTime(timeRemaining)}</span>\n            </div>\n          </div>\n\n          {/* Progress Bar */}\n          <div className=\"space-y-2\">\n            <div className=\"flex justify-between text-sm\">\n              <span className=\"text-slate-600\">\n                Question {currentQuestionIndex + 1} of {totalQuestions}\n              </span>\n              <span className=\"text-slate-600\">\n                {answeredQuestions}/{totalQuestions} answered\n              </span>\n            </div>\n            <Progress value={progressPercentage} className=\"h-2\" />\n          </div>\n        </div>\n\n        {!examSubmitted ? (\n          /* Question Interface */\n          <Card className=\"shadow-lg\">\n            <CardHeader className=\"border-b\">\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center space-x-2\">\n                  {getQuestionTypeIcon(currentQuestion.type)}\n                  <Badge variant=\"outline\">\n                    {currentQuestion.type.replace('_', ' ')}\n                  </Badge>\n                  <span className=\"text-sm text-slate-600\">\n                    {currentQuestion.points} {currentQuestion.points === 1 ? 'point' : 'points'}\n                  </span>\n                </div>\n              </div>\n            </CardHeader>\n\n            <CardContent className=\"pt-6\">\n              {/* Question Prompt */}\n              <h3 className=\"text-lg font-semibold text-slate-900 mb-6\" data-testid=\"text-question-prompt\">\n                {currentQuestion.prompt}\n              </h3>\n\n              {/* Answer Interface */}\n              {currentQuestion.type === 'MULTIPLE_CHOICE' && (\n                <div className=\"space-y-3 mb-6\">\n                  {currentQuestion.options?.map((option, index) => (\n                    <label \n                      key={index}\n                      className={`flex items-start p-4 border rounded-lg cursor-pointer transition-colors ${\n                        answers[currentQuestion.id] === option\n                          ? \"border-blue-200 bg-blue-50\"\n                          : \"border-gray-200 hover:border-gray-300\"\n                      }`}\n                    >\n                      <input\n                        type=\"radio\"\n                        name={`question-${currentQuestion.id}`}\n                        value={option}\n                        checked={answers[currentQuestion.id] === option}\n                        onChange={(e) => handleAnswerChange(e.target.value)}\n                        className=\"mt-1 mr-3\"\n                        data-testid={`radio-option-${index}`}\n                      />\n                      <span className=\"text-slate-700\">{option}</span>\n                    </label>\n                  ))}\n                </div>\n              )}\n\n              {currentQuestion.type === 'TRUE_FALSE' && (\n                <div className=\"space-y-3 mb-6\">\n                  {['True', 'False'].map((option) => (\n                    <label \n                      key={option}\n                      className={`flex items-center p-4 border rounded-lg cursor-pointer transition-colors ${\n                        answers[currentQuestion.id] === option\n                          ? \"border-blue-200 bg-blue-50\"\n                          : \"border-gray-200 hover:border-gray-300\"\n                      }`}\n                    >\n                      <input\n                        type=\"radio\"\n                        name={`question-${currentQuestion.id}`}\n                        value={option}\n                        checked={answers[currentQuestion.id] === option}\n                        onChange={(e) => handleAnswerChange(e.target.value)}\n                        className=\"mr-3\"\n                        data-testid={`radio-${option.toLowerCase()}`}\n                      />\n                      <span className=\"text-slate-700 font-medium\">{option}</span>\n                    </label>\n                  ))}\n                </div>\n              )}\n\n              {currentQuestion.type === 'WRITTEN' && (\n                <div className=\"space-y-4 mb-6\">\n                  <Textarea\n                    placeholder=\"Type your detailed response here...\"\n                    value={answers[currentQuestion.id] || ''}\n                    onChange={(e) => handleAnswerChange(e.target.value)}\n                    className=\"min-h-[200px] text-base\"\n                    data-testid=\"textarea-written-answer\"\n                  />\n                  \n                  {/* Voice Recording */}\n                  <div className=\"flex items-center justify-between p-4 bg-slate-50 rounded-lg border\">\n                    <div className=\"flex items-center space-x-3\">\n                      <Volume2 className=\"w-5 h-5 text-slate-600\" />\n                      <span className=\"text-slate-700 font-medium\">Voice Dictation Available</span>\n                    </div>\n                    <Button\n                      onClick={toggleRecording}\n                      variant={isRecording ? \"destructive\" : \"outline\"}\n                      size=\"sm\"\n                      data-testid=\"button-voice-recording\"\n                    >\n                      {isRecording ? (\n                        <>\n                          <MicOff className=\"w-4 h-4 mr-2\" />\n                          Stop Recording\n                        </>\n                      ) : (\n                        <>\n                          <Mic className=\"w-4 h-4 mr-2\" />\n                          Start Recording\n                        </>\n                      )}\n                    </Button>\n                  </div>\n                </div>\n              )}\n\n              {/* Navigation */}\n              <div className=\"flex justify-between pt-6 border-t\">\n                <Button\n                  onClick={handlePreviousQuestion}\n                  disabled={currentQuestionIndex === 0}\n                  variant=\"outline\"\n                  data-testid=\"button-previous\"\n                >\n                  <ChevronLeft className=\"w-4 h-4 mr-2\" />\n                  Previous\n                </Button>\n\n                <div className=\"space-x-3\">\n                  {currentQuestionIndex === totalQuestions - 1 ? (\n                    <Button\n                      onClick={handleSubmitExam}\n                      className=\"bg-green-600 hover:bg-green-700 text-white\"\n                      data-testid=\"button-submit-exam\"\n                    >\n                      Complete Practice Test\n                    </Button>\n                  ) : (\n                    <Button\n                      onClick={handleNextQuestion}\n                      data-testid=\"button-next\"\n                    >\n                      Next\n                      <ChevronRight className=\"w-4 h-4 ml-2\" />\n                    </Button>\n                  )}\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        ) : (\n          /* Results Interface */\n          <div className=\"space-y-6\">\n            <Card className=\"bg-green-50 border-green-200\">\n              <CardHeader>\n                <CardTitle className=\"text-green-800\">Practice Test Completed Successfully</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <p className=\"text-green-700\">\n                  Your practice test has been completed. Review the detailed explanations below to prepare for your certification exam.\n                </p>\n              </CardContent>\n            </Card>\n\n            {/* Question Review with AI Explanations */}\n            <div className=\"space-y-4\">\n              <h2 className=\"text-xl font-semibold text-slate-900 flex items-center\">\n                <Brain className=\"w-5 h-5 mr-2\" />\n                AI-Powered Detailed Explanations\n              </h2>\n              \n              {sampleQuestions.map((question, index) => (\n                <Card key={question.id} className=\"border-l-4 border-l-blue-500\">\n                  <CardHeader className=\"pb-3\">\n                    <div className=\"flex items-center justify-between\">\n                      <h3 className=\"font-medium text-slate-900\">\n                        Question {index + 1}: {question.type.replace('_', ' ')}\n                      </h3>\n                      <Badge variant=\"outline\">{question.points} pts</Badge>\n                    </div>\n                  </CardHeader>\n                  <CardContent className=\"space-y-3\">\n                    <p className=\"text-slate-700\">{question.prompt}</p>\n                    \n                    {question.explanation && (\n                      <div className=\"bg-blue-50 border-l-4 border-l-blue-400 p-4\">\n                        <h4 className=\"font-medium text-blue-800 mb-2\">Professional Explanation:</h4>\n                        <p className=\"text-blue-700\">{question.explanation}</p>\n                      </div>\n                    )}\n\n                    {answers[question.id] && (\n                      <div className=\"bg-slate-50 p-3 rounded\">\n                        <h4 className=\"font-medium text-slate-800 mb-1\">Your Answer:</h4>\n                        <p className=\"text-slate-700\">{answers[question.id]}</p>\n                      </div>\n                    )}\n                  </CardContent>\n                </Card>\n              ))}\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}","size_bytes":17097},"client/src/pages/professional-exams.tsx":{"content":"import { useState } from \"react\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport Navigation from \"@/components/navigation\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Progress } from \"@/components/ui/progress\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Clock, FileText, Mic, Brain, BarChart3, Award, CheckCircle, Play, Timer, Volume2 } from \"lucide-react\";\nimport { Link } from \"wouter\";\n\ninterface ExamTrack {\n  id: string;\n  title: string;\n  slug: string;\n  description: string;\n  questionsCount: number;\n  timeLimit: number;\n  passingScore: number;\n  attempts: number;\n  maxAttempts: number;\n  bestScore: number | null;\n  completed: boolean;\n  hasVoiceQuestions: boolean;\n  difficulty: 'Beginner' | 'Intermediate' | 'Advanced' | 'Expert';\n}\n\nconst professionalExamTracks: ExamTrack[] = [\n  {\n    id: \"ndt-inspection\",\n    title: \"NDT Inspection & Testing\",\n    slug: \"ndt-inspection\",\n    description: \"Practice visual inspection, magnetic particle testing, and ultrasonic testing exam preparation\",\n    questionsCount: 75,\n    timeLimit: 120,\n    passingScore: 80,\n    attempts: 2,\n    maxAttempts: 3,\n    bestScore: 87,\n    completed: false,\n    hasVoiceQuestions: true,\n    difficulty: 'Advanced'\n  },\n  {\n    id: \"diver-medic\",\n    title: \"Diver Medic Technician\",\n    slug: \"diver-medic\",\n    description: \"Practice emergency medical response, ABCDE assessment, and diving injury treatment exam prep\",\n    questionsCount: 65,\n    timeLimit: 90,\n    passingScore: 85,\n    attempts: 1,\n    maxAttempts: 3,\n    bestScore: 92,\n    completed: true,\n    hasVoiceQuestions: true,\n    difficulty: 'Expert'\n  },\n  {\n    id: \"commercial-supervisor\",\n    title: \"Commercial Dive Supervisor\",\n    slug: \"commercial-supervisor\",\n    description: \"Practice dive operations management, safety protocols, and emergency response exam prep\",\n    questionsCount: 80,\n    timeLimit: 150,\n    passingScore: 80,\n    attempts: 0,\n    maxAttempts: 3,\n    bestScore: null,\n    completed: false,\n    hasVoiceQuestions: true,\n    difficulty: 'Expert'\n  },\n  {\n    id: \"saturation-diving\",\n    title: \"Saturation Diving Systems\",\n    slug: \"saturation-diving\",\n    description: \"Saturation diving operations, life support systems, and decompression management\",\n    questionsCount: 70,\n    timeLimit: 135,\n    passingScore: 85,\n    attempts: 0,\n    maxAttempts: 3,\n    bestScore: null,\n    completed: false,\n    hasVoiceQuestions: false,\n    difficulty: 'Expert'\n  },\n  {\n    id: \"underwater-welding\",\n    title: \"Advanced Underwater Welding\",\n    slug: \"underwater-welding\",\n    description: \"Professional underwater welding techniques, electrode selection, and quality control\",\n    questionsCount: 60,\n    timeLimit: 100,\n    passingScore: 80,\n    attempts: 1,\n    maxAttempts: 3,\n    bestScore: 78,\n    completed: false,\n    hasVoiceQuestions: true,\n    difficulty: 'Advanced'\n  },\n  {\n    id: \"hyperbaric-operations\",\n    title: \"Hyperbaric Chamber Operations\",\n    slug: \"hyperbaric-operations\",\n    description: \"Hyperbaric treatment protocols, emergency procedures, and patient monitoring\",\n    questionsCount: 55,\n    timeLimit: 90,\n    passingScore: 85,\n    attempts: 0,\n    maxAttempts: 3,\n    bestScore: null,\n    completed: false,\n    hasVoiceQuestions: false,\n    difficulty: 'Intermediate'\n  }\n];\n\nexport default function ProfessionalExams() {\n  const [selectedDifficulty, setSelectedDifficulty] = useState<string>(\"all\");\n\n  // Get current user data\n  const { data: currentUser } = useQuery({\n    queryKey: [\"/api/users/current\"],\n    queryFn: async () => {\n      const email = localStorage.getItem('userEmail') || 'lalabalavu.jon@gmail.com';\n      const response = await fetch(`/api/users/current?email=${email}`);\n      if (!response.ok) throw new Error('Failed to fetch user');\n      return response.json();\n    }\n  });\n\n  const filteredExams = selectedDifficulty === \"all\" \n    ? professionalExamTracks \n    : professionalExamTracks.filter(exam => exam.difficulty.toLowerCase() === selectedDifficulty);\n\n  const totalQuestions = professionalExamTracks.reduce((sum, exam) => sum + exam.questionsCount, 0);\n  const completedExams = professionalExamTracks.filter(exam => exam.completed).length;\n  const averageScore = professionalExamTracks\n    .filter(exam => exam.bestScore !== null)\n    .reduce((sum, exam) => sum + (exam.bestScore || 0), 0) / \n    professionalExamTracks.filter(exam => exam.bestScore !== null).length || 0;\n\n  const getDifficultyColor = (difficulty: string) => {\n    switch (difficulty) {\n      case 'Beginner': return 'bg-green-100 text-green-800';\n      case 'Intermediate': return 'bg-blue-100 text-blue-800';\n      case 'Advanced': return 'bg-orange-100 text-orange-800';\n      case 'Expert': return 'bg-red-100 text-red-800';\n      default: return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 text-slate-900 font-sans\">\n      <Navigation />\n      \n      <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        {/* Header */}\n        <div className=\"mb-8\">\n          <h1 className=\"text-3xl font-bold text-slate-900 mb-2\" data-testid=\"text-exams-title\">\n            Professional Diving Exam Preparation\n          </h1>\n          <p className=\"text-lg text-slate-600\">\n            Practice tests and study materials to prepare for certification exams at certified diving schools\n          </p>\n        </div>\n\n        {/* Stats Overview */}\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6 mb-8\">\n          <Card>\n            <CardContent className=\"pt-6\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <p className=\"text-sm font-medium text-slate-600\">Total Questions</p>\n                  <p className=\"text-2xl font-bold text-slate-900\" data-testid=\"text-total-questions\">{totalQuestions}+</p>\n                </div>\n                <FileText className=\"w-8 h-8 text-blue-600\" />\n              </div>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardContent className=\"pt-6\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <p className=\"text-sm font-medium text-slate-600\">Exams Completed</p>\n                  <p className=\"text-2xl font-bold text-slate-900\" data-testid=\"text-completed-exams\">{completedExams}</p>\n                </div>\n                <CheckCircle className=\"w-8 h-8 text-green-600\" />\n              </div>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardContent className=\"pt-6\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <p className=\"text-sm font-medium text-slate-600\">Average Score</p>\n                  <p className=\"text-2xl font-bold text-slate-900\" data-testid=\"text-average-score\">\n                    {averageScore > 0 ? `${Math.round(averageScore)}%` : 'N/A'}\n                  </p>\n                </div>\n                <BarChart3 className=\"w-8 h-8 text-purple-600\" />\n              </div>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardContent className=\"pt-6\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <p className=\"text-sm font-medium text-slate-600\">Voice Questions</p>\n                  <p className=\"text-2xl font-bold text-slate-900\" data-testid=\"text-voice-questions\">\n                    {professionalExamTracks.filter(exam => exam.hasVoiceQuestions).length}\n                  </p>\n                </div>\n                <Mic className=\"w-8 h-8 text-orange-600\" />\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n\n        {/* Filters */}\n        <div className=\"mb-6\">\n          <Tabs value={selectedDifficulty} onValueChange={setSelectedDifficulty}>\n            <TabsList className=\"grid w-full grid-cols-5\">\n              <TabsTrigger value=\"all\">All Levels</TabsTrigger>\n              <TabsTrigger value=\"beginner\">Beginner</TabsTrigger>\n              <TabsTrigger value=\"intermediate\">Intermediate</TabsTrigger>\n              <TabsTrigger value=\"advanced\">Advanced</TabsTrigger>\n              <TabsTrigger value=\"expert\">Expert</TabsTrigger>\n            </TabsList>\n          </Tabs>\n        </div>\n\n        {/* Exam Cards */}\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n          {filteredExams.map((exam) => (\n            <Card key={exam.id} className=\"border-0 shadow-lg hover:shadow-xl transition-all\">\n              <CardHeader className=\"pb-4\">\n                <div className=\"flex items-start justify-between mb-2\">\n                  <div className=\"flex-1\">\n                    <CardTitle className=\"text-xl text-slate-900 mb-2\">{exam.title}</CardTitle>\n                    <p className=\"text-slate-600 text-sm leading-relaxed\">{exam.description}</p>\n                  </div>\n                  <Badge className={getDifficultyColor(exam.difficulty)}>\n                    {exam.difficulty}\n                  </Badge>\n                </div>\n                \n                {exam.completed && (\n                  <div className=\"flex items-center text-green-600 text-sm font-medium\">\n                    <CheckCircle className=\"w-4 h-4 mr-2\" />\n                    Practice Complete\n                  </div>\n                )}\n              </CardHeader>\n\n              <CardContent className=\"space-y-4\">\n                {/* Exam Details */}\n                <div className=\"grid grid-cols-2 gap-4 text-sm\">\n                  <div className=\"flex items-center text-slate-600\">\n                    <FileText className=\"w-4 h-4 mr-2\" />\n                    {exam.questionsCount} Questions\n                  </div>\n                  <div className=\"flex items-center text-slate-600\">\n                    <Timer className=\"w-4 h-4 mr-2\" />\n                    {exam.timeLimit} minutes\n                  </div>\n                  <div className=\"flex items-center text-slate-600\">\n                    <Award className=\"w-4 h-4 mr-2\" />\n                    {exam.passingScore}% to pass\n                  </div>\n                  {exam.hasVoiceQuestions && (\n                    <div className=\"flex items-center text-slate-600\">\n                      <Volume2 className=\"w-4 h-4 mr-2\" />\n                      Voice answers\n                    </div>\n                  )}\n                </div>\n\n                {/* Progress & Attempts */}\n                <div className=\"space-y-2\">\n                  <div className=\"flex justify-between text-sm\">\n                    <span className=\"text-slate-600\">Attempts: {exam.attempts}/{exam.maxAttempts}</span>\n                    {exam.bestScore && (\n                      <span className=\"font-medium text-slate-900\">Best: {exam.bestScore}%</span>\n                    )}\n                  </div>\n                  {exam.bestScore && (\n                    <Progress value={exam.bestScore} className=\"h-2\" />\n                  )}\n                </div>\n\n                {/* Action Buttons */}\n                <div className=\"flex gap-3 pt-2\">\n                  {exam.attempts < exam.maxAttempts && (\n                    <Link href={`/exams/${exam.slug}/start`} className=\"flex-1\">\n                      <Button \n                        className=\"w-full bg-blue-600 hover:bg-blue-700 text-white\"\n                        data-testid={`button-start-exam-${exam.slug}`}\n                      >\n                        <Play className=\"w-4 h-4 mr-2\" />\n                        {exam.attempts === 0 ? 'Start Practice Test' : 'Retake Practice Test'}\n                      </Button>\n                    </Link>\n                  )}\n                  \n                  {exam.attempts > 0 && (\n                    <Link href={`/exams/${exam.slug}/results`}>\n                      <Button \n                        variant=\"outline\" \n                        className=\"border-blue-200 text-blue-600 hover:bg-blue-50\"\n                        data-testid={`button-view-results-${exam.slug}`}\n                      >\n                        <BarChart3 className=\"w-4 h-4 mr-2\" />\n                        Results\n                      </Button>\n                    </Link>\n                  )}\n                </div>\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n\n        {/* Features Highlight */}\n        <Card className=\"mt-8 bg-gradient-to-r from-blue-50 to-purple-50 border-0\">\n          <CardContent className=\"pt-6\">\n            <h3 className=\"text-xl font-semibold text-slate-900 mb-4\">Professional Exam Preparation Features</h3>\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n              <div className=\"flex items-start space-x-3\">\n                <Brain className=\"w-6 h-6 text-blue-600 mt-1\" />\n                <div>\n                  <h4 className=\"font-medium text-slate-900\">AI Explanations</h4>\n                  <p className=\"text-sm text-slate-600\">Detailed feedback for every question with professional insights</p>\n                </div>\n              </div>\n              <div className=\"flex items-start space-x-3\">\n                <Mic className=\"w-6 h-6 text-orange-600 mt-1\" />\n                <div>\n                  <h4 className=\"font-medium text-slate-900\">Voice Dictation</h4>\n                  <p className=\"text-sm text-slate-600\">Professional speech-to-text for written responses</p>\n                </div>\n              </div>\n              <div className=\"flex items-start space-x-3\">\n                <Clock className=\"w-6 h-6 text-green-600 mt-1\" />\n                <div>\n                  <h4 className=\"font-medium text-slate-900\">Timed Assessments</h4>\n                  <p className=\"text-sm text-slate-600\">Authentic practice test conditions with performance analytics</p>\n                </div>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      </main>\n    </div>\n  );\n}","size_bytes":14180}},"version":1}